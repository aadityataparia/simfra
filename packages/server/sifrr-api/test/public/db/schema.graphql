# THIS FILE WAS AUTOGENERATED BY SIFRR-API. DO NOT EDIT THIS FILE DIRECTLY.
# Genarated at Mon, 23 Sep 2019 12:56:16 GMT (1569243376952)
#### Graphql Schema ####

type Query {
  """Get one Pet."""
  getPet(id: Int, where: SequelizeJSON, limit: Int, order: String, offset: Int): [Pet]
  """Pet connection"""
  petConn(after: String, first: Int, before: String, last: Int, orderBy: [[String]] = [["name", "ASC"]]): PetConnection
  User(id: Int, where: SequelizeJSON, limit: Int, order: String, offset: Int): [User]
}

type Mutation {
  createPet(name: String!, ownerId: Int!): Pet
  createPetAndOwner(name: String!, owner__name: String!): Pet
  updatePet(id: Int!): Pet
  upsertPet(id: Int!): Pet
  deletePet(id: Int!): Int
  createUser(name: String!): User
}

scalar SequelizeJSON
scalar Date
scalar Random

"""A pet"""
type Pet {
  id: Int!
  name: String!
  ownerId: Int!
  """Random attribute"""
  type(type: String): String
  owner: User
}

type User {
  id: Int!
  name: String
  createdAt: Date!
  updatedAt: Date!
  """pets of user"""
  pets(after: String, first: Int, before: String, last: Int, orderBy: [[String]] = [["name", "ASC"]]): PetConnection
}

"""Pet connection"""
type PetConnection {
  edges: [PetConnectionEdge]
  """Total pets"""
  total: Int
}

type PetConnectionEdge {
  node: Pet
  cursor: String
}
