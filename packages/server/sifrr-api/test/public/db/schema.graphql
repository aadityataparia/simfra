# THIS FILE WAS AUTOGENERATED BY SIFRR-API. DO NOT EDIT THIS FILE DIRECTLY.
# Genarated at Tue, 24 Sep 2019 20:54:50 GMT (1569358490257)
#### Graphql Schema ####

type Query {
  """
  Get one Pet.
  """
  getPet(
    id: Int
    where: SequelizeJSON
    limit: Int
    order: String
    offset: Int
  ): [Pet]
  petConn(
    after: String
    first: Int
    before: String
    last: Int
  ): PetConnection
  User(
    id: Int
    where: SequelizeJSON
    limit: Int
    order: String
    offset: Int
  ): [User]
}

type Mutation {
  createPet(
    id: Int
    name: String
    ownerId: Int
    createdAt: Date
    updatedAt: Date
  ): Pet
  createPetAndOwner(name: String!, owner__name: String!): Pet
  updatePet(
    id: Int
    name: String
    ownerId: Int
    createdAt: Date
    updatedAt: Date
  ): Pet
  upsertPet(
    id: Int
    name: String
    ownerId: Int
    createdAt: Date
    updatedAt: Date
  ): Pet
  deletePet(
    id: Int
    name: String
    ownerId: Int
    createdAt: Date
    updatedAt: Date
  ): Int
  createUser(
    id: Int
    name: String
    createdAt: Date
    updatedAt: Date
  ): User
}

"""
A pet
"""
type Pet {
  id: Int
  name: String
  ownerId: Int
  createdAt: Date
  updatedAt: Date
  """
  Random attribute
  """
  type(type: String): String
  owner: User
}

"""
Pet connection
"""
type PetConnection {
  edges: [PetConnectionEdge]
  """
  Total pets
  """
  total: Int
}

"""
User Model
"""
type User {
  id: Int
  name: String
  createdAt: Date
  updatedAt: Date
  pets: PetConnection
}

type PetConnectionEdge {
  node: Pet
  cursor: String!
}

scalar SequelizeJSON
scalar Date
scalar Random
