{"version":3,"file":"sifrr.api.module.js","sources":["../src/api/flatten.js","../src/utils/filterobject.js","../src/api/attrtypes.js","../src/api/graphql/basetype.js","../src/api/graphql/model.js","../src/api/graphql/connection.js","../../../../node_modules/graphql-relay/lib/connection/connection.js","../../../../node_modules/graphql-relay/lib/utils/base64.js","../../../../node_modules/graphql-relay/lib/connection/arrayconnection.js","../../../../node_modules/graphql-relay/lib/mutation/mutation.js","../../../../node_modules/graphql-relay/lib/node/node.js","../../../../node_modules/graphql-relay/lib/node/plural.js","../../../../node_modules/graphql-relay/lib/index.js","../src/api/ormmodels/sequelize.js","../src/api/graphqlexecutor.js","../src/api/loadroutes.js","../src/api/constants.js","../src/api/createschemafrommodels.js","../src/api/reqtovariables.js","../src/sifrr.api.js"],"sourcesContent":["module.exports = (attrs, separator = ', ', addDescription = false) => {\n  const str = [];\n  for (let attr in attrs) {\n    if (addDescription && attrs[attr].description) str.push(`\"\"\"${attrs[attr].description}\"\"\"`);\n    str.push(`${attr}: ${attrs[attr].type || attrs[attr]}`);\n  }\n  return str.join(separator);\n};\n","module.exports = function(json, fxn) {\n  const res = {};\n  for (let k in json) {\n    if (fxn(k)) res[k] = json[k];\n  }\n  return res;\n};\n","const flatten = require('./flatten');\nconst filter = require('../utils/filterobject');\n\nmodule.exports = (attrs, required = [], allowed = []) => {\n  if (allowed.length > 0) attrs = filter(attrs, (attr) => allowed.indexOf(attr) >= 0 || required.indexOf(attr) >= 0);\n  let ret = {}, type;\n  for (let attr in attrs) {\n    let bang = required.indexOf(attr) >= 0 ? true : false;\n    if (attrs[attr].returnType) {\n      type = attrs[attr].returnType;\n    } else if (!attrs[attr].type) {\n      type = attrs[attr];\n    } else if (attrs[attr].type.constructor.name === 'GraphQLList') {\n      type = `[${attrs[attr].type.ofType.name}]`;\n    } else if (attrs[attr].type.constructor.name === 'GraphQLNonNull') {\n      type = attrs[attr].type.ofType.name;\n      bang = true;\n    } else if (attrs[attr].type.name) {\n      type = attrs[attr].type.name;\n    } else if (attrs[attr].type.ofType && attrs[attr].type.ofType.name) {\n      type = attrs[attr].type.ofType.name;\n    } else {\n      type = attrs[attr].type;\n    }\n    const args = attrs[attr].args ? `(${flatten(attrs[attr].args)})` : '';\n    ret[attr + args] = { type: type + (bang ? '!' : '') };\n    if (attrs[attr].description) ret[attr + args].description = attrs[attr].description;\n  }\n  return ret;\n};\n","const attrTypes = require('../attrtypes');\n\nclass BaseType {\n  constructor(attributes) {\n    this._attributes = attributes;\n  }\n\n  addAttribute(name, attribute) {\n    this._attributes[name] = attribute;\n  }\n\n  filterAttributes({ allowed = [], required = [] }) {\n    this._allowedAttrs = allowed;\n    this._reqAttrs = required;\n  }\n\n  getFilteredAttributes({ required = [], allowed = [] }) {\n    return attrTypes(this._attributes, required, allowed);\n  }\n\n  getResolvers() {\n    const resolvers = {};\n    for (let attr in this._attributes) {\n      if (this._attributes[attr].resolver) resolvers[attr] = this._attributes[attr].resolver;\n    }\n    return resolvers;\n  }\n\n  get attributes() {\n    return this.getFilteredAttributes({ required: this._reqAttrs, allowed: this._allowedAttrs });\n  }\n\n  get schemaPrefix() {\n    return `${this.description ? `\"\"\"${this.description}\"\"\"\\n` : '' }`;\n  }\n}\n\nmodule.exports = BaseType;\n","const BaseType = require('./basetype');\nconst flatten = require('../flatten');\n\nclass Model extends BaseType {\n  constructor(type, attributes = {}, { queries = {}, mutations = {} }) {\n    super(attributes);\n    this.type = type;\n    this.queries = queries;\n    this.mutations = mutations;\n    this.connections = [];\n    this._allowedAttrs = [];\n    this._reqAttrs = [];\n    this.description;\n  }\n\n  addConnection(name, connection) {\n    this.connections.push(connection);\n    this._attributes[name] = connection;\n  }\n\n  addConnectionQuery(name, connection) {\n    this.connections.push(connection);\n    this.queries[name] = connection;\n  }\n\n  addQuery(name, query) {\n    this.queries[name] = query;\n  }\n\n  addMutation(name, mutation) {\n    this.mutations[name] = mutation;\n  }\n\n  getSchema() {\n    return this.schemaPrefix + `type ${this.type} {\n  ${flatten(this.attributes, '\\n  ', true)}\n}`;\n  }\n}\n\nmodule.exports = Model;\n","const BaseType = require('./basetype');\nconst flatten = require('../flatten');\n\nclass Connection extends BaseType {\n  constructor(type, args, resolver, nodeType) {\n    super({});\n    this.type = type;\n    this.args = args;\n    this.resolver = resolver;\n    this.nodeType = nodeType;\n    this.description;\n  }\n\n  clone(resolver = this.resolver) {\n    const conn = new Connection(this.type, this.args, resolver, this.nodeType);\n    conn._attributes = this._attributes;\n    conn.description = this.description;\n    conn.base = this;\n    return conn;\n  }\n\n  addArgument(name, type) {\n    this.args[name] = type;\n  }\n\n  getSchema() {\n    return this.schemaPrefix + `type ${this.type} {\n  edges: [${this.type + 'Edge'}]\n  ${flatten(this.attributes, '\\n  ', true)}\n}\n\ntype ${this.type + 'Edge'} {\n  node: ${this.nodeType}\n  cursor: String\n}`;\n  }\n}\n\nmodule.exports = Connection;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connectionArgs = exports.backwardConnectionArgs = exports.forwardConnectionArgs = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**\n                                                                                                                                                                                                                                                                   * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * This source code is licensed under the MIT license found in the\n                                                                                                                                                                                                                                                                   * LICENSE file in the root directory of this source tree.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * \n                                                                                                                                                                                                                                                                   */\n\nexports.connectionDefinitions = connectionDefinitions;\n\nvar _graphql = require('graphql');\n\n/**\n * Returns a GraphQLFieldConfigArgumentMap appropriate to include on a field\n * whose return type is a connection type with forward pagination.\n */\nvar forwardConnectionArgs = exports.forwardConnectionArgs = {\n  after: {\n    type: _graphql.GraphQLString\n  },\n  first: {\n    type: _graphql.GraphQLInt\n  }\n};\n\n/**\n * Returns a GraphQLFieldConfigArgumentMap appropriate to include on a field\n * whose return type is a connection type with backward pagination.\n */\nvar backwardConnectionArgs = exports.backwardConnectionArgs = {\n  before: {\n    type: _graphql.GraphQLString\n  },\n  last: {\n    type: _graphql.GraphQLInt\n  }\n};\n\n/**\n * Returns a GraphQLFieldConfigArgumentMap appropriate to include on a field\n * whose return type is a connection type with bidirectional pagination.\n */\nvar connectionArgs = exports.connectionArgs = _extends({}, forwardConnectionArgs, backwardConnectionArgs);\n\nfunction resolveMaybeThunk(thingOrThunk) {\n  return typeof thingOrThunk === 'function' ? // $FlowFixMe - if it's a function, we assume a thunk without arguments\n  thingOrThunk() : thingOrThunk;\n}\n\n/**\n * Returns a GraphQLObjectType for a connection with the given name,\n * and whose nodes are of the specified type.\n */\nfunction connectionDefinitions(config) {\n  var nodeType = config.nodeType;\n\n  var name = config.name || nodeType.name;\n  var edgeFields = config.edgeFields || {};\n  var connectionFields = config.connectionFields || {};\n  var resolveNode = config.resolveNode;\n  var resolveCursor = config.resolveCursor;\n  var edgeType = new _graphql.GraphQLObjectType({\n    name: name + 'Edge',\n    description: 'An edge in a connection.',\n    fields: function fields() {\n      return _extends({\n        node: {\n          type: nodeType,\n          resolve: resolveNode,\n          description: 'The item at the end of the edge'\n        },\n        cursor: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n          resolve: resolveCursor,\n          description: 'A cursor for use in pagination'\n        }\n      }, resolveMaybeThunk(edgeFields));\n    }\n  });\n\n  var connectionType = new _graphql.GraphQLObjectType({\n    name: name + 'Connection',\n    description: 'A connection to a list of items.',\n    fields: function fields() {\n      return _extends({\n        pageInfo: {\n          type: new _graphql.GraphQLNonNull(pageInfoType),\n          description: 'Information to aid in pagination.'\n        },\n        edges: {\n          type: new _graphql.GraphQLList(edgeType),\n          description: 'A list of edges.'\n        }\n      }, resolveMaybeThunk(connectionFields));\n    }\n  });\n\n  return { edgeType: edgeType, connectionType: connectionType };\n}\n\n/**\n * The common page info type used by all connections.\n */\nvar pageInfoType = new _graphql.GraphQLObjectType({\n  name: 'PageInfo',\n  description: 'Information about pagination in a connection.',\n  fields: function fields() {\n    return {\n      hasNextPage: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLBoolean),\n        description: 'When paginating forwards, are there more items?'\n      },\n      hasPreviousPage: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLBoolean),\n        description: 'When paginating backwards, are there more items?'\n      },\n      startCursor: {\n        type: _graphql.GraphQLString,\n        description: 'When paginating backwards, the cursor to continue.'\n      },\n      endCursor: {\n        type: _graphql.GraphQLString,\n        description: 'When paginating forwards, the cursor to continue.'\n      }\n    };\n  }\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.base64 = base64;\nexports.unbase64 = unbase64;\nfunction base64(i) {\n  return Buffer.from(i, 'utf8').toString('base64');\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\nfunction unbase64(i) {\n  return Buffer.from(i, 'base64').toString('utf8');\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connectionFromArray = connectionFromArray;\nexports.connectionFromPromisedArray = connectionFromPromisedArray;\nexports.connectionFromArraySlice = connectionFromArraySlice;\nexports.connectionFromPromisedArraySlice = connectionFromPromisedArraySlice;\nexports.offsetToCursor = offsetToCursor;\nexports.cursorToOffset = cursorToOffset;\nexports.cursorForObjectInConnection = cursorForObjectInConnection;\nexports.getOffsetWithDefault = getOffsetWithDefault;\n\nvar _base = require('../utils/base64.js');\n\n/**\n * A simple function that accepts an array and connection arguments, and returns\n * a connection object for use in GraphQL. It uses array offsets as pagination,\n * so pagination will only work if the array is static.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction connectionFromArray(data, args) {\n  return connectionFromArraySlice(data, args, {\n    sliceStart: 0,\n    arrayLength: data.length\n  });\n}\n\n/**\n * A version of `connectionFromArray` that takes a promised array, and returns a\n * promised connection.\n */\nfunction connectionFromPromisedArray(dataPromise, args) {\n  return dataPromise.then(function (data) {\n    return connectionFromArray(data, args);\n  });\n}\n\n/**\n * Given a slice (subset) of an array, returns a connection object for use in\n * GraphQL.\n *\n * This function is similar to `connectionFromArray`, but is intended for use\n * cases where you know the cardinality of the connection, consider it too large\n * to materialize the entire array, and instead wish pass in a slice of the\n * total result large enough to cover the range specified in `args`.\n */\nfunction connectionFromArraySlice(arraySlice, args, meta) {\n  var after = args.after,\n      before = args.before,\n      first = args.first,\n      last = args.last;\n  var sliceStart = meta.sliceStart,\n      arrayLength = meta.arrayLength;\n\n  var sliceEnd = sliceStart + arraySlice.length;\n  var beforeOffset = getOffsetWithDefault(before, arrayLength);\n  var afterOffset = getOffsetWithDefault(after, -1);\n\n  var startOffset = Math.max(sliceStart - 1, afterOffset, -1) + 1;\n  var endOffset = Math.min(sliceEnd, beforeOffset, arrayLength);\n  if (typeof first === 'number') {\n    if (first < 0) {\n      throw new Error('Argument \"first\" must be a non-negative integer');\n    }\n\n    endOffset = Math.min(endOffset, startOffset + first);\n  }\n  if (typeof last === 'number') {\n    if (last < 0) {\n      throw new Error('Argument \"last\" must be a non-negative integer');\n    }\n\n    startOffset = Math.max(startOffset, endOffset - last);\n  }\n\n  // If supplied slice is too large, trim it down before mapping over it.\n  var slice = arraySlice.slice(Math.max(startOffset - sliceStart, 0), arraySlice.length - (sliceEnd - endOffset));\n\n  var edges = slice.map(function (value, index) {\n    return {\n      cursor: offsetToCursor(startOffset + index),\n      node: value\n    };\n  });\n\n  var firstEdge = edges[0];\n  var lastEdge = edges[edges.length - 1];\n  var lowerBound = after ? afterOffset + 1 : 0;\n  var upperBound = before ? beforeOffset : arrayLength;\n  return {\n    edges: edges,\n    pageInfo: {\n      startCursor: firstEdge ? firstEdge.cursor : null,\n      endCursor: lastEdge ? lastEdge.cursor : null,\n      hasPreviousPage: typeof last === 'number' ? startOffset > lowerBound : false,\n      hasNextPage: typeof first === 'number' ? endOffset < upperBound : false\n    }\n  };\n}\n\n/**\n * A version of `connectionFromArraySlice` that takes a promised array slice,\n * and returns a promised connection.\n */\nfunction connectionFromPromisedArraySlice(dataPromise, args, arrayInfo) {\n  return dataPromise.then(function (data) {\n    return connectionFromArraySlice(data, args, arrayInfo);\n  });\n}\n\nvar PREFIX = 'arrayconnection:';\n\n/**\n * Creates the cursor string from an offset.\n */\nfunction offsetToCursor(offset) {\n  return (0, _base.base64)(PREFIX + offset);\n}\n\n/**\n * Rederives the offset from the cursor string.\n */\nfunction cursorToOffset(cursor) {\n  return parseInt((0, _base.unbase64)(cursor).substring(PREFIX.length), 10);\n}\n\n/**\n * Return the cursor associated with an object in an array.\n */\nfunction cursorForObjectInConnection(data, object) {\n  var offset = data.indexOf(object);\n  if (offset === -1) {\n    return null;\n  }\n  return offsetToCursor(offset);\n}\n\n/**\n * Given an optional cursor and a default offset, returns the offset\n * to use; if the cursor contains a valid offset, that will be used,\n * otherwise it will be the default.\n */\nfunction getOffsetWithDefault(cursor, defaultOffset) {\n  if (typeof cursor !== 'string') {\n    return defaultOffset;\n  }\n  var offset = cursorToOffset(cursor);\n  return isNaN(offset) ? defaultOffset : offset;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**\n                                                                                                                                                                                                                                                                   * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * This source code is licensed under the MIT license found in the\n                                                                                                                                                                                                                                                                   * LICENSE file in the root directory of this source tree.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * \n                                                                                                                                                                                                                                                                   */\n\nexports.mutationWithClientMutationId = mutationWithClientMutationId;\n\nvar _graphql = require('graphql');\n\nfunction resolveMaybeThunk(thingOrThunk) {\n  return typeof thingOrThunk === 'function' ? // $FlowFixMe - if it's a function, we assume a thunk without arguments\n  thingOrThunk() : thingOrThunk;\n}\n\n/**\n * A description of a mutation consumable by mutationWithClientMutationId\n * to create a GraphQLFieldConfig for that mutation.\n *\n * The inputFields and outputFields should not include `clientMutationId`,\n * as this will be provided automatically.\n *\n * An input object will be created containing the input fields, and an\n * object will be created containing the output fields.\n *\n * mutateAndGetPayload will receive an Object with a key for each\n * input field, and it should return an Object with a key for each\n * output field. It may return synchronously, or return a Promise.\n */\n\n\n/**\n * Returns a GraphQLFieldConfig for the mutation described by the\n * provided MutationConfig.\n */\nfunction mutationWithClientMutationId(config) {\n  var name = config.name,\n      description = config.description,\n      deprecationReason = config.deprecationReason,\n      inputFields = config.inputFields,\n      outputFields = config.outputFields,\n      mutateAndGetPayload = config.mutateAndGetPayload;\n\n  var augmentedInputFields = function augmentedInputFields() {\n    return _extends({}, resolveMaybeThunk(inputFields), {\n      clientMutationId: {\n        type: _graphql.GraphQLString\n      }\n    });\n  };\n  var augmentedOutputFields = function augmentedOutputFields() {\n    return _extends({}, resolveMaybeThunk(outputFields), {\n      clientMutationId: {\n        type: _graphql.GraphQLString\n      }\n    });\n  };\n\n  var outputType = new _graphql.GraphQLObjectType({\n    name: name + 'Payload',\n    fields: augmentedOutputFields\n  });\n\n  var inputType = new _graphql.GraphQLInputObjectType({\n    name: name + 'Input',\n    fields: augmentedInputFields\n  });\n\n  return {\n    type: outputType,\n    description: description,\n    deprecationReason: deprecationReason,\n    args: {\n      input: { type: new _graphql.GraphQLNonNull(inputType) }\n    },\n    resolve: function resolve(_, _ref, context, info) {\n      var input = _ref.input;\n\n      return Promise.resolve(mutateAndGetPayload(input, context, info)).then(function (payload) {\n        payload.clientMutationId = input.clientMutationId;\n        return payload;\n      });\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nodeDefinitions = nodeDefinitions;\nexports.toGlobalId = toGlobalId;\nexports.fromGlobalId = fromGlobalId;\nexports.globalIdField = globalIdField;\n\nvar _graphql = require('graphql');\n\nvar _base = require('../utils/base64.js');\n\n/**\n * Given a function to map from an ID to an underlying object, and a function\n * to map from an underlying object to the concrete GraphQLObjectType it\n * corresponds to, constructs a `Node` interface that objects can implement,\n * and a field config for a `node` root field.\n *\n * If the typeResolver is omitted, object resolution on the interface will be\n * handled with the `isTypeOf` method on object types, as with any GraphQL\n * interface without a provided `resolveType` method.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction nodeDefinitions(idFetcher, typeResolver) {\n  var nodeInterface = new _graphql.GraphQLInterfaceType({\n    name: 'Node',\n    description: 'An object with an ID',\n    fields: function fields() {\n      return {\n        id: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLID),\n          description: 'The id of the object.'\n        }\n      };\n    },\n    resolveType: typeResolver\n  });\n\n  var nodeField = {\n    description: 'Fetches an object given its ID',\n    type: nodeInterface,\n    args: {\n      id: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLID),\n        description: 'The ID of an object'\n      }\n    },\n    resolve: function resolve(obj, _ref, context, info) {\n      var id = _ref.id;\n      return idFetcher(id, context, info);\n    }\n  };\n\n  var nodesField = {\n    description: 'Fetches objects given their IDs',\n    type: new _graphql.GraphQLNonNull(new _graphql.GraphQLList(nodeInterface)),\n    args: {\n      ids: {\n        type: new _graphql.GraphQLNonNull(new _graphql.GraphQLList(new _graphql.GraphQLNonNull(_graphql.GraphQLID))),\n        description: 'The IDs of objects'\n      }\n    },\n    resolve: function resolve(obj, _ref2, context, info) {\n      var ids = _ref2.ids;\n      return Promise.all(ids.map(function (id) {\n        return Promise.resolve(idFetcher(id, context, info));\n      }));\n    }\n  };\n\n  return { nodeInterface: nodeInterface, nodeField: nodeField, nodesField: nodesField };\n}\n\n/**\n * Takes a type name and an ID specific to that type name, and returns a\n * \"global ID\" that is unique among all types.\n */\nfunction toGlobalId(type, id) {\n  return (0, _base.base64)([type, id].join(':'));\n}\n\n/**\n * Takes the \"global ID\" created by toGlobalID, and returns the type name and ID\n * used to create it.\n */\nfunction fromGlobalId(globalId) {\n  var unbasedGlobalId = (0, _base.unbase64)(globalId);\n  var delimiterPos = unbasedGlobalId.indexOf(':');\n  return {\n    type: unbasedGlobalId.substring(0, delimiterPos),\n    id: unbasedGlobalId.substring(delimiterPos + 1)\n  };\n}\n\n/**\n * Creates the configuration for an id field on a node, using `toGlobalId` to\n * construct the ID from the provided typename. The type-specific ID is fetched\n * by calling idFetcher on the object, or if not provided, by accessing the `id`\n * property on the object.\n */\nfunction globalIdField(typeName, idFetcher) {\n  return {\n    description: 'The ID of an object',\n    type: new _graphql.GraphQLNonNull(_graphql.GraphQLID),\n    resolve: function resolve(obj, args, context, info) {\n      return toGlobalId(typeName || info.parentType.name, idFetcher ? idFetcher(obj, context, info) : obj.id);\n    }\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pluralIdentifyingRootField = pluralIdentifyingRootField;\n\nvar _graphql = require('graphql');\n\nfunction pluralIdentifyingRootField(config) {\n  var inputArgs = {};\n  var inputType = config.inputType;\n  if (inputType instanceof _graphql.GraphQLNonNull) {\n    inputType = inputType.ofType;\n  }\n  inputArgs[config.argName] = {\n    type: new _graphql.GraphQLNonNull(new _graphql.GraphQLList(new _graphql.GraphQLNonNull(inputType)))\n  };\n  return {\n    description: config.description,\n    type: new _graphql.GraphQLList(config.outputType),\n    args: inputArgs,\n    resolve: function resolve(obj, args, context, info) {\n      var inputs = args[config.argName];\n      return Promise.all(inputs.map(function (input) {\n        return Promise.resolve(config.resolveSingleInput(input, context, info));\n      }));\n    }\n  };\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _connection = require('./connection/connection.js');\n\nObject.defineProperty(exports, 'backwardConnectionArgs', {\n  enumerable: true,\n  get: function get() {\n    return _connection.backwardConnectionArgs;\n  }\n});\nObject.defineProperty(exports, 'connectionArgs', {\n  enumerable: true,\n  get: function get() {\n    return _connection.connectionArgs;\n  }\n});\nObject.defineProperty(exports, 'connectionDefinitions', {\n  enumerable: true,\n  get: function get() {\n    return _connection.connectionDefinitions;\n  }\n});\nObject.defineProperty(exports, 'forwardConnectionArgs', {\n  enumerable: true,\n  get: function get() {\n    return _connection.forwardConnectionArgs;\n  }\n});\n\nvar _arrayconnection = require('./connection/arrayconnection.js');\n\nObject.defineProperty(exports, 'connectionFromArray', {\n  enumerable: true,\n  get: function get() {\n    return _arrayconnection.connectionFromArray;\n  }\n});\nObject.defineProperty(exports, 'connectionFromArraySlice', {\n  enumerable: true,\n  get: function get() {\n    return _arrayconnection.connectionFromArraySlice;\n  }\n});\nObject.defineProperty(exports, 'connectionFromPromisedArray', {\n  enumerable: true,\n  get: function get() {\n    return _arrayconnection.connectionFromPromisedArray;\n  }\n});\nObject.defineProperty(exports, 'connectionFromPromisedArraySlice', {\n  enumerable: true,\n  get: function get() {\n    return _arrayconnection.connectionFromPromisedArraySlice;\n  }\n});\nObject.defineProperty(exports, 'cursorForObjectInConnection', {\n  enumerable: true,\n  get: function get() {\n    return _arrayconnection.cursorForObjectInConnection;\n  }\n});\nObject.defineProperty(exports, 'cursorToOffset', {\n  enumerable: true,\n  get: function get() {\n    return _arrayconnection.cursorToOffset;\n  }\n});\nObject.defineProperty(exports, 'getOffsetWithDefault', {\n  enumerable: true,\n  get: function get() {\n    return _arrayconnection.getOffsetWithDefault;\n  }\n});\nObject.defineProperty(exports, 'offsetToCursor', {\n  enumerable: true,\n  get: function get() {\n    return _arrayconnection.offsetToCursor;\n  }\n});\n\nvar _mutation = require('./mutation/mutation.js');\n\nObject.defineProperty(exports, 'mutationWithClientMutationId', {\n  enumerable: true,\n  get: function get() {\n    return _mutation.mutationWithClientMutationId;\n  }\n});\n\nvar _node = require('./node/node.js');\n\nObject.defineProperty(exports, 'nodeDefinitions', {\n  enumerable: true,\n  get: function get() {\n    return _node.nodeDefinitions;\n  }\n});\n\nvar _plural = require('./node/plural.js');\n\nObject.defineProperty(exports, 'pluralIdentifyingRootField', {\n  enumerable: true,\n  get: function get() {\n    return _plural.pluralIdentifyingRootField;\n  }\n});\nObject.defineProperty(exports, 'fromGlobalId', {\n  enumerable: true,\n  get: function get() {\n    return _node.fromGlobalId;\n  }\n});\nObject.defineProperty(exports, 'globalIdField', {\n  enumerable: true,\n  get: function get() {\n    return _node.globalIdField;\n  }\n});\nObject.defineProperty(exports, 'toGlobalId', {\n  enumerable: true,\n  get: function get() {\n    return _node.toGlobalId;\n  }\n});","const { attributeFields, defaultListArgs, defaultArgs } = require('graphql-sequelize');\nconst { resolver, createConnectionResolver } = require('graphql-sequelize');\nconst Sequelize = require('sequelize');\nconst attrsToTypes = require('../attrtypes');\nconst GqModel = require('../graphql/model');\nconst GqConnection = require('../graphql/connection');\nconst { connectionArgs } = require('graphql-relay');\n\nclass SequelizeModel extends Sequelize.Model {\n  static init(options) {\n    const ret = super.init(this.schema, options);\n    ret.graphqlModel = new GqModel(ret.name, attributeFields(ret), { description: `${ret.name} Model` });\n    ret.graphqlConnection = new GqConnection(ret.name + 'Connection', connectionArgs, createConnectionResolver({ target: ret }).resolveConnection, ret.graphqlModel.type);\n    ret.onInit();\n    return ret;\n  }\n\n  // Connections/Associations\n  static belongsToMany(model, options) {\n    return this.graphqlAssoc('belongsToMany', model, options, true);\n  }\n\n  static belongsTo(model, options) {\n    return this.graphqlAssoc('belongsTo', model, options, false);\n  }\n\n  static hasMany(model, options) {\n    return this.graphqlAssoc('hasMany', model, options, true);\n  }\n\n  static hasOne(model, options) {\n    return this.graphqlAssoc('hasOne', model, options, false);\n  }\n\n  static graphqlAssoc(type, model, options, multiple) {\n    const name = options.as || model.graphqlModel.type + (multiple ? 's' : '');\n    this[name] = super[type](model, options);\n    if (options.useConnection) {\n      const conn = model.graphqlConnection.clone(createConnectionResolver({ target: this[name] }).resolveConnection);\n      conn.description = options.description;\n      this.graphqlModel.addConnection(name, conn);\n    } else\n      this.graphqlModel.addAttribute(name, { resolver: resolver(this[name]), returnType: model.graphqlModel.type, description: options.description });\n    return this[name];\n  }\n\n  // Aliases\n  static addAttr(name, options) {\n    this.graphqlModel.addAttribute(name, options);\n  }\n\n  static gqAttrs(options) {\n    return this.graphqlModel.getFilteredAttributes(options);\n  }\n\n  static addQuery(name, options) {\n    this.graphqlModel.addQuery(name, options);\n  }\n\n  static addConnectionQuery(name) {\n    this.graphqlModel.addConnectionQuery(name, this.graphqlConnection);\n  }\n\n  static addMutation(name, options) {\n    this.graphqlModel.addMutation(name, options);\n  }\n\n  static gqArgs({ required, allowed } = {}) {\n    return attrsToTypes(Object.assign(defaultArgs(this), defaultListArgs()), required, allowed);\n  }\n\n  // Default Resolvers - getQuery, createMutation, updateMutation, upsertMutation, deleteMutation\n  static getQueryResolver(_, args, ctx, info) {\n    const include = [];\n    for (let arg in args.where) {\n      if (arg.indexOf('__') >= 0) {\n        const assocs = arg.split('__');\n        args.where['$' + assocs.join('.') + '$'] = args.where[arg];\n        include.push(...this._assocsToInclude(assocs));\n        delete args.where[arg];\n      }\n    }\n    return resolver(this, {\n      before: (findOptions) => {\n        findOptions.include = include;\n        return findOptions;\n      }\n    })(_, args, ctx, info);\n  }\n\n  static createMutationResolver(_, args) {\n    const include = [];\n    for (let arg in args) {\n      if (arg.indexOf('__') >= 0) {\n        const assocs = arg.split('__');\n        args[assocs[0]] = args[assocs[0]] || {};\n        args[assocs[0]][assocs[1]] = args[arg];\n        include.push(...this._assocsToInclude(assocs));\n        delete args[arg];\n      }\n    }\n    return this.create(args, { include });\n  }\n\n  static updateMutationResolver(_, args) {\n    const options = { where: { id: args.id } };\n    delete args.id;\n    return this.update(args, options).then(() => this.findByPk(options.where.id));\n  }\n\n  static upsertMutationResolver(_, args) {\n    return this.upsert(args).then(() => this.findByPk(args.id));\n  }\n\n  static deleteMutationResolver(_, args) {\n    return this.destroy({ where: args });\n  }\n\n  static _assocsToInclude(assocs, column = true, model = this) {\n    if (column) assocs.pop();\n    const assocName = assocs.shift();\n    const include = [{\n      association: model[assocName],\n      as: assocName\n    }];\n    if (assocs.length > 0) {\n      include[0].include = this._assocsToInclude(assocs, false, model[assocName].target);\n    }\n    return include;\n  }\n}\n\nmodule.exports = SequelizeModel;\n","const { graphql } = require('graphql');\n\nclass GraphqlExecutor {\n  constructor(executableSchema) {\n    this._schema = executableSchema;\n    this._middlewares = [];\n  }\n\n  resolve(query, variables, context = {}) {\n    return graphql({\n      schema: this._schema,\n      source: query,\n      variableValues: variables,\n      contextValue: context\n    });\n  }\n}\n\nmodule.exports = GraphqlExecutor;\n","const fs = require('fs');\nconst path = require('path');\n\nfunction loadRoutes(app, dir, { ignore = [], basePath = '' }) {\n  const paths = [];\n\n  fs\n    .readdirSync(dir)\n    .filter(file =>\n      path.extname(file) === '.js' &&\n      ignore.indexOf(file) < 0\n    )\n    .forEach((file) => {\n      const routes = require(path.join(dir, file));\n      let basePaths = routes.basePath || '';\n      delete routes.basePath;\n      if (typeof basePaths === 'string') basePaths = [basePaths];\n\n      basePaths.forEach((basep) => {\n        for (const method in routes) {\n          const methodRoutes = routes[method];\n          for (let r in methodRoutes) {\n            app[method](basePath + basep + r, methodRoutes[r]);\n            paths.push(basePath + basep + r);\n          }\n        }\n      });\n    });\n\n  return paths;\n}\n\nmodule.exports = loadRoutes;\n","module.exports = {\n  fileHeader: '# THIS FILE WAS AUTOGENERATED BY SIFRR-API. DO NOT EDIT THIS FILE DIRECTLY.\\n',\n  timestampHeader: `# Genarated at ${new Date().toUTCString()} (${Date.now()})\\n`,\n  fileSeparator: '#### Graphql Schema ####\\n\\n'\n};\n","const fs = require('fs');\nconst path = require('path');\nconst mkdirp = require('mkdirp');\nconst attrsToTypes = require('./attrtypes');\nconst flatten = require('./flatten');\nconst { makeExecutableSchema } = require('graphql-tools');\nconst { fileHeader, timestampHeader, fileSeparator } = require('./constants');\n\nfunction getTypeDef(qs, resolvers) {\n  for (let q in qs) {\n    const qdet = qs[q];\n    resolvers[q] = qdet.resolver;\n  }\n  return flatten(attrsToTypes(qs), '\\n  ', true);\n}\n\nfunction createSchemaFromModels(models, { extra = '', queries = {}, mutations = {}, schemaPath } = {}) {\n  const connections = {}, typeDefs = [], resolvers = {};\n  for(let modelName in models) {\n    const model = models[modelName];\n    typeDefs.push(model.getSchema());\n    Object.assign(queries, model.queries);\n    Object.assign(mutations, model.mutations);\n    resolvers[model.type] = resolvers[model.type] || {};\n    Object.assign(resolvers[model.type], model.getResolvers());\n    model.connections.forEach(conn => {\n      connections[conn.type] = conn.base || conn;\n    });\n  }\n\n  for (let name in connections) {\n    const conn = connections[name];\n    typeDefs.push(conn.getSchema());\n    resolvers[conn.type] = resolvers[conn.type] || {};\n    Object.assign(resolvers[conn.type], conn.getResolvers());\n  }\n\n  const qnew = {}, mnew = {};\n\n  const queryMut = `type Query {\n  ${getTypeDef(queries, qnew)}\n}\n\ntype Mutation {\n  ${getTypeDef(mutations, mnew)}\n}\n\nscalar SequelizeJSON\nscalar Date\n${extra}`;\n\n  typeDefs.unshift(queryMut);\n  resolvers.Query = qnew;\n  resolvers.Mutation = mnew;\n\n  if (schemaPath) {\n    mkdirp(path.dirname(schemaPath));\n    const comment = fileHeader + timestampHeader + fileSeparator;\n    const oldFileContent = fs.existsSync(schemaPath) ? fs.readFileSync(schemaPath, { encoding: 'UTF-8' }).split(fileSeparator)[1] : null;\n    const newFileContent = typeDefs.join('\\n\\n') + '\\n';\n    if (oldFileContent !== newFileContent) fs.writeFileSync(schemaPath, comment + newFileContent);\n  }\n\n  return makeExecutableSchema({\n    typeDefs,\n    resolvers\n  });\n}\n\nmodule.exports = createSchemaFromModels;\n","const filter = require('../utils/filterobject');\n\nfunction reqToVariables(req, { allowed = [] } = {}) {\n  let args = {};\n  Object.assign(args, req.query, req.body, req.params);\n\n  if (allowed.length > 0) args = filter(args, (arg) => allowed.indexOf(arg) >= 0);\n\n  for (let arg in args) {\n    try {\n      args[arg] = JSON.parse(args[arg]);\n    } catch(e) {\n      // Do nothing if it is not valid json\n    }\n  }\n\n  return args;\n}\n\nmodule.exports = reqToVariables;\n","const SifrrApi = {};\nSifrrApi.SequelizeModel = require('./api/ormmodels/sequelize');\nSifrrApi.GraphqlExecutor = require('./api/graphqlexecutor');\nSifrrApi.loadRoutes = require('./api/loadroutes');\nSifrrApi.createSchemaFromModels = require('./api/createschemafrommodels');\nSifrrApi.reqToVariables = require('./api/reqtovariables');\n\nmodule.exports = SifrrApi;\n"],"names":["filter","attrTypes","BaseType","_graphql","_base","_connection","_arrayconnection","_mutation","_node","_plural","require$$0","require$$1","Sequelize","GqModel","GqConnection","attrsToTypes","require","require$$2","require$$3","require$$4"],"mappings":"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"}