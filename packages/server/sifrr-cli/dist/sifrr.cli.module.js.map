{"version":3,"file":"sifrr.cli.module.js","sources":["../src/templates/element.js","../src/utils/createfile.js","../src/commands/elementgenerate.js","../src/sifrr.cli.js"],"sourcesContent":["module.exports = (name, ext) => {\n  return `import SifrrDom from '@sifrr/dom';\n\nclass ${name} extends SifrrDom.Element${ext ? `.extends(${ext})` : ''} {\n  static get template() {\n    return \\`<!-- HTML -->\\`;\n  }\n\n  onConnect() {\n\n  }\n\n  onDisconnect() {\n\n  }\n}\n${name}.defaultState = {};\nSifrrDom.register(${name}${ext ? \", { extends: '/* tag of html to extend, eg. tr */' }\" : ''});\n\nexport default ${name};\n`;\n};\n","const fs = require('fs');\nconst path = require('path');\nconst mkdirp = require('mkdirp');\n\nmodule.exports = (elemPath, content, force = false) => {\n  mkdirp.sync(path.dirname(elemPath), err => {\n    /* istanbul ignore next */\n    if (err) throw err;\n  });\n\n  if (fs.existsSync(elemPath) && !force) {\n    process.stderr.write(`File already exists at ${elemPath}`);\n    process.exit(1);\n    return false;\n  }\n\n  fs.writeFileSync(elemPath, content, err => {\n    /* istanbul ignore next */\n    if (err) throw err;\n  });\n\n  process.stdout.write(`File was saved at '${elemPath}'!`);\n  return true;\n};\n","const elemTemplate = require('../templates/element');\nconst createFile = require('../utils/createfile');\nconst path = require('path');\n\nmodule.exports = argv => {\n  // Element class\n  const elemName = argv.name;\n  // Loader\n  const elemPath = path.resolve(argv.path, `./${elemName.split('-').join('/')}.js`);\n  const className = elemName\n    .replace(/-([a-z])/g, g => g[1].toUpperCase())\n    .replace(/^([a-z])/, g => g[0].toUpperCase());\n\n  const elemHtml = elemTemplate(className, argv.extends);\n\n  createFile(elemPath, elemHtml, argv.force === 'true');\n};\n","module.exports = {\n  elementGenerate: require('./commands/elementgenerate')\n};\n"],"names":["name","ext","elemPath","content","force","mkdirp","sync","path","dirname","err","fs","existsSync","process","stderr","write","exit","writeFileSync","stdout","argv","elemName","resolve","split","join","className","replace","g","toUpperCase","elemHtml","elemTemplate","extends","createFile","elementGenerate","require$$0"],"mappings":";;;;;AAAA,WAAc,GAAG,CAACA,IAAD,EAAOC,GAAP,KAAe;+DAGxBD,IAFN,sCAEsCC,GAAG,sBAAeA,GAAf,SAAwB,EAFjE,wIAeAD,IAfA,oDAgBkBA,IAhBlB,SAgByBC,GAAG,GAAG,sDAAH,GAA4D,EAhBxF,kCAkBeD,IAlBf;CADF;;ACIA,cAAc,GAAG,CAACE,QAAD,EAAWC,OAAX,EAAoBC,KAAK,GAAG,KAA5B,KAAsC;EACrDC,MAAM,CAACC,IAAP,CAAYC,IAAI,CAACC,OAAL,CAAaN,QAAb,CAAZ,EAAoCO,GAAG,IAAI;QAErCA,GAAJ,EAAS,MAAMA,GAAN;GAFX;;MAKIC,EAAE,CAACC,UAAH,CAAcT,QAAd,KAA2B,CAACE,KAAhC,EAAuC;IACrCQ,OAAO,CAACC,MAAR,CAAeC,KAAf,kCAA+CZ,QAA/C;IACAU,OAAO,CAACG,IAAR,CAAa,CAAb;WACO,KAAP;;;EAGFL,EAAE,CAACM,aAAH,CAAiBd,QAAjB,EAA2BC,OAA3B,EAAoCM,GAAG,IAAI;QAErCA,GAAJ,EAAS,MAAMA,GAAN;GAFX;EAKAG,OAAO,CAACK,MAAR,CAAeH,KAAf,8BAA2CZ,QAA3C;SACO,IAAP;CAlBF;;ACAA,mBAAc,GAAGgB,IAAI,IAAI;QAEjBC,QAAQ,GAAGD,IAAI,CAAClB,IAAtB;QAEME,QAAQ,GAAGK,IAAI,CAACa,OAAL,CAAaF,IAAI,CAACX,IAAlB,cAA6BY,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoBC,IAApB,CAAyB,GAAzB,CAA7B,SAAjB;QACMC,SAAS,GAAGJ,QAAQ,CACvBK,OADe,CACP,WADO,EACMC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,EADX,EAEfF,OAFe,CAEP,UAFO,EAEKC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,EAFV,CAAlB;QAIMC,QAAQ,GAAGC,OAAY,CAACL,SAAD,EAAYL,IAAI,CAACW,OAAjB,CAA7B;EAEAC,UAAU,CAAC5B,QAAD,EAAWyB,QAAX,EAAqBT,IAAI,CAACd,KAAL,KAAe,MAApC,CAAV;CAXF;;ACJA,aAAc,GAAG;EACf2B,eAAe,EAAEC;CADnB;;;;;;;;;"}