/*! Sifrr.Cli v0.0.5 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr */
import e from"fs";import t from"path";import n from"mkdirp";var r={elementGenerate:r=>{const o=r.name;((r,o,a=!1)=>(n.sync(t.dirname(r),e=>{if(e)throw e}),e.existsSync(r)&&!a?(process.stderr.write("File already exists at ".concat(r)),process.exit(1),!1):(e.writeFileSync(r,o,e=>{if(e)throw e}),process.stdout.write("File was saved at '".concat(r,"'!")),!0)))(t.resolve(r.path,"./".concat(o.split("-").join("/"),".js")),((e,t)=>"import SifrrDom from '@sifrr/dom';\n\nclass ".concat(e," extends SifrrDom.Element").concat(t?".extends(".concat(t,")"):""," {\n  static get template() {\n    return `\x3c!-- HTML --\x3e`;\n  }\n\n  onConnect() {\n\n  }\n\n  onDisconnect() {\n\n  }\n}\n").concat(e,".defaultState = {};\nSifrrDom.register(").concat(e).concat(t?", { extends: '/* tag of html to extend, eg. tr */' }":"",");\n\nexport default ").concat(e,";\n"))(o.replace(/-([a-z])/g,e=>e[1].toUpperCase()).replace(/^([a-z])/,e=>e[0].toUpperCase()),r.extends),"true"===r.force)}},o=r.elementGenerate;export default r;export{o as elementGenerate};
/*! (c) @aadityataparia */
