{"version":3,"file":"sifrr.serviceworker.module.js","sources":["../src/sifrr.serviceworker.js"],"sourcesContent":["class SW {\n  constructor(options) {\n    this.options = Object.assign(\n      {\n        version: 1,\n        fallbackCacheName: 'fallbacks',\n        defaultCacheName: 'default',\n        policies: {},\n        fallbacks: {},\n        precacheUrls: []\n      },\n      options\n    );\n    this.options.policies.default = Object.assign(this.options.policies.default || {}, {\n      policy: 'NETWORK_FIRST',\n      cacheName: this.options.defaultCacheName\n    });\n  }\n\n  setup() {\n    self.addEventListener('install', this.installEventListener.bind(this));\n    self.addEventListener('activate', this.activateEventListener.bind(this));\n    self.addEventListener('fetch', this.fetchEventListener.bind(this));\n  }\n\n  setupPushNotification(defaultTitle = '', defaultOptions = { body: '' }) {\n    this.defaultPushTitle = defaultTitle;\n    this.defaultPushOptions = defaultOptions;\n    self.addEventListener('push', this.pushEventListener.bind(this));\n    self.addEventListener('notificationclick', this.onNotificationClick.bind(this));\n  }\n\n  installEventListener(event) {\n    event.waitUntil(this.precache());\n    this.onInstall(event);\n  }\n\n  /* istanbul ignore next */\n  onInstall() {}\n\n  activateEventListener() {\n    const version = '-v' + this.options.version;\n    // remove old version caches\n    caches\n      .keys()\n      .then(cacheNames => {\n        // [FIX] -v1 won't delete -v10\n        return cacheNames.filter(cacheName => cacheName.indexOf(version) < 0);\n      })\n      .then(cachesToDelete => {\n        return Promise.all(\n          cachesToDelete.map(cacheToDelete => {\n            return caches.delete(cacheToDelete);\n          })\n        );\n      })\n      .then(() => self.clients.claim());\n  }\n\n  fetchEventListener(event) {\n    const request = event.request;\n    const otherReq = request.clone();\n    const oreq = request.clone();\n    if (request.method === 'GET') {\n      event.respondWith(\n        this.respondWithPolicy(request)\n          .then(response => {\n            if (\n              !response.ok &&\n              response.status > 0 &&\n              this.findRegex(oreq.url, this.options.fallbacks)\n            ) {\n              throw Error('response status ' + response.status);\n            }\n            return response;\n          })\n          .catch(e => this.respondWithFallback(otherReq, e))\n      );\n    }\n  }\n\n  pushEventListener(event) {\n    let data = {};\n    if (event.data) {\n      if (typeof event.data.json === 'function') data = event.data.json();\n      else data = event.data || {};\n    }\n\n    const title = data.title || this.defaultPushTitle;\n    const options = Object.assign(this.defaultPushOptions, data);\n\n    return self.registration.showNotification(title, options);\n  }\n\n  /* istanbul ignore next */\n  onNotificationClick() {}\n\n  precache(urls = this.options.precacheUrls, fbs = this.options.fallbacks) {\n    const me = this;\n    let promises = [];\n    urls.forEach(u => {\n      let req = me.createRequest(u);\n      return promises.push(\n        me.responseFromNetwork(req, me.findRegex(u, me.options.policies).cacheName)\n      );\n    });\n    for (let value of Object.values(fbs)) {\n      let req = this.createRequest(value);\n      promises.push(this.responseFromNetwork(req, this.options.fallbackCacheName));\n    }\n    return Promise.all(promises);\n  }\n\n  respondWithFallback(request, error) {\n    const fallback = this.createRequest(this.findRegex(request.url, this.options.fallbacks));\n    if (fallback !== undefined) {\n      return this.responseFromCache(fallback, this.options.fallbackCacheName);\n    } else {\n      /* istanbul ignore next */\n      throw error;\n    }\n  }\n\n  respondWithPolicy(request) {\n    const req1 = request.clone();\n    const req2 = request.clone();\n    const config = this.findRegex(request.url, this.options.policies);\n    const policy = config.policy;\n    const cacheName = config.cacheName || this.options.defaultCacheName;\n\n    let resp;\n    switch (policy) {\n      case 'NETWORK_ONLY':\n        resp = this.responseFromNetwork(req1, cacheName, false);\n        break;\n      case 'CACHE_FIRST':\n      case 'CACHE_ONLY':\n        resp = this.responseFromCache(req1, cacheName).catch(() =>\n          this.responseFromNetwork(request, cacheName)\n        );\n        break;\n      case 'CACHE_AND_UPDATE':\n        resp = this.responseFromCache(req1, cacheName).catch(() =>\n          this.responseFromNetwork(request, cacheName)\n        );\n        this.responseFromNetwork(req2, cacheName);\n        break;\n      default:\n        resp = this.responseFromNetwork(req1, cacheName).catch(() =>\n          this.responseFromCache(request, cacheName)\n        );\n        break;\n    }\n    return resp;\n  }\n\n  responseFromNetwork(request, cache, putInCache = true) {\n    return caches.open(cache + '-v' + this.options.version).then(cache =>\n      fetch(request).then(response => {\n        if (putInCache) cache.put(request, response.clone());\n        return response;\n      })\n    );\n  }\n\n  responseFromCache(request, cache) {\n    return caches\n      .open(cache + '-v' + this.options.version)\n      .then(cache => cache.match(request))\n      .then(resp => {\n        if (resp) return resp;\n        else throw 'Cache not found for ' + request.url;\n      });\n  }\n\n  createRequest(url, data = { method: 'GET' }) {\n    return new Request(url, data);\n  }\n\n  findRegex(url, policies) {\n    for (let [key, value] of Object.entries(policies)) {\n      const regex = new RegExp(key);\n      if (regex.test(url)) return value;\n    }\n    return policies['default'];\n  }\n}\n\nmodule.exports = SW;\n"],"names":["SW","constructor","options","Object","assign","version","fallbackCacheName","defaultCacheName","policies","fallbacks","precacheUrls","default","policy","cacheName","setup","self","addEventListener","installEventListener","bind","activateEventListener","fetchEventListener","setupPushNotification","defaultTitle","defaultOptions","body","defaultPushTitle","defaultPushOptions","pushEventListener","onNotificationClick","event","waitUntil","precache","onInstall","caches","keys","then","cacheNames","filter","indexOf","cachesToDelete","Promise","all","map","cacheToDelete","delete","clients","claim","request","otherReq","clone","oreq","method","respondWith","respondWithPolicy","response","ok","status","findRegex","url","Error","catch","e","respondWithFallback","data","json","title","registration","showNotification","urls","fbs","me","promises","forEach","u","req","createRequest","push","responseFromNetwork","value","values","error","fallback","undefined","responseFromCache","req1","req2","config","resp","cache","putInCache","open","fetch","put","match","Request","key","entries","regex","RegExp","test"],"mappings":"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"}