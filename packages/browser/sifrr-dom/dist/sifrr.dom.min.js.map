{"version":3,"file":"sifrr.dom.min.js","sources":["../src/dom/constants.js","../src/dom/ref.js","../src/dom/template.js","../src/dom/updateattribute.js","../src/utils/json.js","../src/dom/makeequal.js","../src/dom/keyed.js","../src/dom/bindings.js","../src/dom/update.js","../src/dom/simpleelement.js","../src/dom/repeatref.js","../src/dom/creator.js","../src/dom/parser.js","../src/dom/loader.js","../src/dom/element.js","../src/dom/event.js","../src/sifrr.dom.js"],"sourcesContent":["const temp = window.document.createElement('template');\nconst script = window.document.createElement('script');\nconst reg = '(\\\\${(?:(?:[^{}$]|{(?:[^{}$])*})*)})';\n\nmodule.exports = {\n  TEMPLATE: () => temp.cloneNode(false),\n  SCRIPT: () => script.cloneNode(false),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1,\n  OUTER_REGEX: new RegExp(reg, 'g'),\n  HTML_ATTR: 'data-sifrr-html',\n  REPEAT_ATTR: 'data-sifrr-repeat',\n  KEY_ATTR: 'data-sifrr-key'\n};\n","// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\nconst { HTML_ATTR } = require('./constants');\n\nfunction isHtml(el) {\n  return el.hasAttribute && el.hasAttribute(HTML_ATTR);\n}\n\nTREE_WALKER.nextNonfilterNode = function(node) {\n  if (isHtml(node)){\n    node = this.nextSibling() || (this.parentNode(), this.nextSibling());\n  } else node = this.nextNode();\n  return node;\n};\n\nTREE_WALKER.roll = function(n) {\n  let node = this.currentNode;\n  while(--n) {\n    node = this.nextNonfilterNode(node);\n  }\n  return node;\n};\n\nTREE_WALKER.rollSimple = function(n) {\n  let node;\n  while(--n) {\n    node = this.nextNode();\n  }\n  return node || this.currentNode;\n};\n\nfunction collect(element, stateMap, roll = 'roll') {\n  const refs = [], l = stateMap.length;\n  TREE_WALKER.currentNode = element;\n  for (let i = 0; i < l; i++) {\n    refs.push(TREE_WALKER[roll](stateMap[i].idx));\n  }\n  return refs;\n}\n\nfunction create(node, fxn) {\n  let indices = [], ref, idx = 0;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    // eslint-disable-next-line no-cond-assign\n    if (ref = fxn(node, isHtml)) {\n      indices.push({ idx: idx+1, ref });\n      idx = 1;\n    } else {\n      idx++;\n    }\n    node = TREE_WALKER.nextNonfilterNode(node);\n  }\n\n  return indices;\n}\n\nmodule.exports = {\n  collect,\n  create\n};\n","const { TEMPLATE } = require('./constants');\n\nmodule.exports = (str, ...extra) => {\n  const tmp = TEMPLATE();\n  if (typeof str === 'string') {\n    // nothing\n  } else if (str[0] && typeof str[0] === 'string') {\n    str = String.raw(str, ...extra);\n  } else if (str[0]) {\n    Array.from(str).forEach((s) => {\n      tmp.content.appendChild(s);\n    });\n    return tmp;\n  } else if (str.nodeType && !str.content) {\n    tmp.content.appendChild(str);\n    return tmp;\n  } else {\n    return str;\n  }\n  str = str\n    .replace(/>\\n+/g, '>')\n    .replace(/\\s+</g, '<')\n    .replace(/>\\s+/g, '>')\n    .replace(/(\\\\)?\\$(\\\\)?\\{/g, '${');\n  tmp.innerHTML = str;\n  return tmp;\n};\n","// Attribute related gotchas\nmodule.exports = (element, name, newValue) => {\n  const fromValue = element.getAttribute(name);\n  if (newValue === false || newValue === null || newValue === undefined) element.removeAttribute(name);\n  else if (fromValue !== newValue) {\n    if (name === 'class') element.className = newValue;\n    else element.setAttribute(name, newValue);\n  }\n\n  // select/input's value doesn't change on changing value attribute\n  if (name == 'value' && (element.nodeName == 'SELECT' || element.nodeName == 'INPUT')) element.value = newValue;\n};\n","const Json = {\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nmodule.exports = Json;\n","const updateAttribute = require('./updateattribute');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\nfunction makeChildrenEqual(parent, newChildren, createFn) {\n  const oldL = parent.childNodes.length, newL = newChildren.length;\n  // Fast path for clear\n  if (newL === 0) {\n    parent.textContent = '';\n    return;\n  }\n\n  // Fast path for create\n  if (oldL === 0) {\n    let addition;\n    for(let i = 0; i < newL; i++) {\n      addition = newChildren[i];\n      if (!newChildren[i].nodeType) addition = createFn(newChildren[i]);\n      parent.appendChild(addition);\n    }\n    return;\n  }\n\n  // Lesser children now\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  // More Children now\n  } else if (oldL < newL) {\n    let i = oldL, addition;\n    while(i < newL) {\n      addition = newChildren[i];\n      if (!newChildren[i].nodeType) addition = createFn(newChildren[i]);\n      parent.appendChild(addition);\n      i++;\n    }\n  }\n\n  const l = Math.min(newL, oldL);\n  // Make old children equal to new children\n  for(let i = 0, item, head = parent.firstChild; i < l; i++) {\n    item = newChildren[i];\n    // make two nodes equal\n    head = makeEqual(head, item).nextSibling;\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (!newNode.nodeType) {\n    if (!shallowEqual(oldNode.state, newNode)) {\n      oldNode.state = newNode;\n    }\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  let oldAttrs = oldNode.attributes, newAttrs = newNode.attributes, attr;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    attr = oldAttrs[j];\n    if (!newNode.hasAttribute(attr.name)) oldNode.removeAttribute(attr.name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, Array.prototype.slice.call(newNode.childNodes));\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","/* eslint-disable max-lines */\nconst { makeEqual } = require('./makeequal');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reconcile.js\n// This is almost straightforward implementation of reconcillation algorithm\n// based on ivi documentation:\n// https://github.com/localvoid/ivi/blob/2c81ead934b9128e092cc2a5ef2d3cabc73cb5dd/packages/ivi/src/vdom/implementation.ts#L1366\n// With some fast paths from Surplus implementation:\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L86\n//\n// How this implementation differs from others, is that it's working with data directly,\n// without maintaining nodes arrays, and uses manipukates dom only when required\n\nfunction makeChildrenEqualKeyed(parent, newData, createFn = (x) => x, key) {\n  // Fast path for clear\n  const newL = newData.length;\n  if (newL === 0) {\n    parent.textContent = '';\n    return;\n  }\n\n  // Fast path for create\n  const oldL = parent.childNodes.length;\n  if (oldL === 0) {\n    for(let i = 0; i < newL; i++) {\n      parent.appendChild(createFn(newData[i]));\n    }\n    return;\n  }\n\n  const oldData = []; let _node = parent.firstChild;\n  while(_node) {\n    oldData.push(_node.state);\n    _node = _node.nextSibling;\n  }\n\n  // reconciliation\n  let prevStart = 0,\n    newStart = 0,\n    loop = true,\n    prevEnd = oldL - 1, newEnd = newL - 1,\n    prevStartNode = parent.firstChild,\n    prevEndNode = parent.lastChild,\n    finalNode,\n    a, b;\n\n  fixes: while(loop) {\n    loop = false;\n\n    // Skip prefix\n    a = oldData[prevStart], b = newData[newStart];\n    while(a[key] === b[key]) {\n      makeEqual(prevStartNode, b);\n      prevStart++;\n      prevStartNode = prevStartNode.nextSibling;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = oldData[prevStart], b = newData[newStart];\n    }\n\n    // Skip suffix\n    a = oldData[prevEnd], b = newData[newEnd];\n    while(a[key] === b[key]) {\n      makeEqual(prevEndNode, b);\n      prevEnd--;\n      finalNode = prevEndNode;\n      prevEndNode = prevEndNode.previousSibling;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = oldData[prevEnd], b = newData[newEnd];\n    }\n\n    // Fast path to swap backward\n    a = oldData[prevEnd], b = newData[newStart];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevEndNode, b);\n      _node = prevEndNode.previousSibling;\n      parent.insertBefore(prevEndNode, prevStartNode);\n      prevEndNode = _node;\n      prevEnd--;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = oldData[prevEnd], b = newData[newStart];\n    }\n\n    // Fast path to swap forward\n    a = oldData[prevStart], b = newData[newEnd];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevStartNode, b);\n      _node = prevStartNode.nextSibling;\n      parent.insertBefore(prevStartNode, prevEndNode.nextSibling);\n      finalNode = prevStartNode;\n      prevEndNode = prevStartNode.previousSibling;\n      prevStartNode = _node;\n      prevStart++;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = oldData[prevStart], b = newData[newEnd];\n    }\n  }\n\n  // Fast path for shrink\n  if (newEnd < newStart) {\n    if (prevStart <= prevEnd) {\n      let next;\n      while(prevStart <= prevEnd) {\n        if (prevEnd === 0) {\n          parent.removeChild(prevEndNode);\n        } else {\n          next = prevEndNode.previousSibling;\n          parent.removeChild(prevEndNode);\n          prevEndNode = next;\n        }\n        prevEnd--;\n      }\n    }\n    return;\n  }\n\n  // Fast path for add\n  if (prevEnd < prevStart) {\n    if (newStart <= newEnd) {\n      while(newStart <= newEnd) {\n        _node = createFn(newData[newStart]);\n        parent.insertBefore(_node, prevEndNode.nextSibling);\n        prevEndNode = _node;\n        newStart++;\n      }\n    }\n    return;\n  }\n\n  const oldKeys = new Array(newEnd + 1 - newStart), newKeys = new Map(), toDelete = [];\n\n  for(let i = newStart; i <= newEnd; i++) {\n    // Positions for reusing nodes from current DOM state\n    oldKeys[i] = -1;\n    // Index to resolve position from current to new\n    newKeys.set(newData[i][key], i);\n  }\n\n  let reusingNodes = 0;\n  for(let i = prevStart; i <= prevEnd; i++) {\n    if (newKeys.has(oldData[i][key])) {\n      oldKeys[newKeys.get(oldData[i][key])] = i;\n      reusingNodes++;\n    } else {\n      toDelete.push(i);\n    }\n  }\n\n  // Fast path for full replace\n  if (reusingNodes === 0) {\n    for(let i = newStart; i <= newEnd; i++) {\n      // Add extra nodes\n      if (i > prevEnd) {\n        parent.insertBefore(createFn(newData[i]), prevStartNode);\n      } else {\n        _node = prevStartNode.nextSibling;\n        prevStartNode.replaceWith(createFn(newData[i]));\n        prevStartNode = _node;\n      }\n    }\n    // Remove extra nodes\n    if (newEnd < prevEnd) {\n      while (newEnd < prevEnd) {\n        _node = prevEndNode.previousSibling;\n        parent.removeChild(prevEndNode);\n        prevEndNode = _node;\n        prevEnd--;\n      }\n    }\n    return;\n  }\n\n  const longestSeq = longestPositiveIncreasingSubsequence(oldKeys, newStart);\n\n  const nodes = [];\n  while(prevStart <= prevEnd) {\n    nodes[prevStart] = prevStartNode;\n    prevStartNode = prevStartNode.nextSibling;\n    prevStart++;\n  }\n\n  let lisIdx = longestSeq.length - 1, tmpD;\n  for(let i = newEnd; i >= newStart; i--) {\n    if(longestSeq[lisIdx] === i) {\n      finalNode = nodes[oldKeys[i]];\n      makeEqual(finalNode, newData[i]);\n      lisIdx--;\n    } else {\n      if (oldKeys[i] === -1) {\n        tmpD = createFn(newData[i]);\n      } else {\n        tmpD = nodes[oldKeys[i]];\n        makeEqual(tmpD, newData[i]);\n      }\n      parent.insertBefore(tmpD, finalNode);\n      finalNode = tmpD;\n    }\n  }\n\n  for(let i = 0; i < toDelete.length; i++) {\n    parent.removeChild(nodes[toDelete[i]]);\n  }\n}\n\n// Picked from\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L368\n\n// return an array of the indices of ns that comprise the longest increasing subsequence within ns\nfunction longestPositiveIncreasingSubsequence(ns, newStart) {\n  let seq = [],\n    is  = [],\n    l   = -1,\n    pre = new Array(ns.length);\n\n  for (let i = newStart, len = ns.length; i < len; i++) {\n    let n = ns[i];\n    if (n < 0) continue;\n    let j = findGreatestIndexLEQ(seq, n);\n    if (j !== -1) pre[i] = is[j];\n    if (j === l) {\n      l++;\n      seq[l] = n;\n      is[l]  = i;\n    } else if (n < seq[j + 1]) {\n      seq[j + 1] = n;\n      is[j + 1] = i;\n    }\n  }\n\n  for (let i = is[l]; l >= 0; i = pre[i], l--) {\n    seq[l] = i;\n  }\n\n  return seq;\n}\n\nfunction findGreatestIndexLEQ(seq, n) {\n  // invariant: lo is guaranteed to be index of a value <= n, hi to be >\n  // therefore, they actually start out of range: (-1, last + 1)\n  let lo = -1,\n    hi = seq.length;\n\n  // fast path for simple increasing sequences\n  if (hi > 0 && seq[hi - 1] <= n) return hi - 1;\n\n  while (hi - lo > 1) {\n    let mid = Math.floor((lo + hi) / 2);\n    if (seq[mid] > n) {\n      hi = mid;\n    } else {\n      lo = mid;\n    }\n  }\n\n  return lo;\n}\n\nmodule.exports = {\n  makeChildrenEqualKeyed,\n  longestPositiveIncreasingSubsequence\n};\n","const { OUTER_REGEX } = require('./constants');\n\nfunction replacer(match) {\n  let f;\n  if (match.indexOf('return ') >= 0) {\n    f = match;\n  } else {\n    f = 'return ' + match;\n  }\n  try {\n    return new Function(f);\n  } catch(e) {\n    window.console.log(`Error processing binding: \\`${f}\\``);\n    return '';\n  }\n}\n\nfunction evaluate(fxn, el) {\n  try {\n    if (typeof fxn === 'string') return fxn;\n    else return fxn.call(el);\n  } catch(e) {\n    const str = fxn.toString();\n    window.console.log(`Error evaluating: \\`${str.slice(str.indexOf('{') + 1, str.lastIndexOf('}'))}\\` for element`, el);\n    window.console.error(e);\n  }\n}\n\nmodule.exports = {\n  getBindingFxns: (string) => {\n    const splitted = string.split(OUTER_REGEX), l = splitted.length, ret = [];\n    for (let i = 0; i < l; i++) {\n      if (splitted[i][0] === '$' && splitted[i][1] === '{') {\n        ret.push(replacer(splitted[i].slice(2, -1)));\n      } else if (splitted[i]) ret.push(splitted[i]);\n    }\n    return ret;\n  },\n  evaluateBindings: (fxns, element) => {\n    if (fxns.length === 1) {\n      return evaluate(fxns[0], element);\n    }\n    return fxns.map(fxn => evaluate(fxn, element)).join('');\n  },\n  evaluate: evaluate,\n  replacer: replacer\n};\n","const { makeChildrenEqual } = require('./makeequal');\nconst { makeChildrenEqualKeyed } = require('./keyed');\nconst updateAttribute = require('./updateattribute');\nconst { evaluateBindings } = require('./bindings');\nconst { TEMPLATE, KEY_ATTR } = require('./constants');\n\nfunction customElementUpdate(element, stateMap) {\n  if (!element._refs) {\n    return false;\n  }\n  stateMap = stateMap || element.constructor.stateMap;\n  // Update nodes\n  const l = element._refs.length;\n  for (let i = 0; i < l; i++) {\n    const data = stateMap[i].ref;\n    const dom = element._refs[i];\n\n    // update attributes\n    if (data.attributes) {\n      for(let key in data.attributes) {\n        if (key !== 'events') {\n          const val = evaluateBindings(data.attributes[key], element);\n          updateAttribute(dom, key, val);\n        } else {\n          for(let event in data.attributes.events) {\n            const eventLis = evaluateBindings(data.attributes.events[event], element);\n            dom[event] = eventLis;\n          }\n          dom._root = element;\n        }\n      }\n    }\n\n    if (data.text === undefined) continue;\n\n    // update element\n    const newValue = evaluateBindings(data.text, element);\n\n    if (data.type === 0) {\n      // text node\n      if (dom.data != newValue) dom.data = newValue;\n    } else if (data.type === 2) {\n      // repeat\n      const key = dom.getAttribute(KEY_ATTR);\n      if (key) makeChildrenEqualKeyed(dom, newValue, (state) => data.se.sifrrClone(true, state), key);\n      else makeChildrenEqual(dom, newValue, (state) => data.se.sifrrClone(true, state));\n    } else {\n      // html node\n      let children;\n      if (Array.isArray(newValue)) {\n        children = newValue;\n      } else if (newValue.content && newValue.content.nodeType === 11) {\n        children = Array.prototype.slice.call(newValue.content.childNodes);\n      } else if (newValue.nodeType) {\n        children = [newValue];\n      } else if (typeof newValue === 'string') {\n        const temp = TEMPLATE();\n        temp.innerHTML = newValue.toString();\n        children = Array.prototype.slice.call(temp.content.childNodes);\n      } else {\n        children = Array.prototype.slice.call(newValue);\n      }\n      makeChildrenEqual(dom, children);\n    }\n  }\n  if (element.onUpdate) element.onUpdate();\n}\n\nmodule.exports = customElementUpdate;\n","const template = require('./template');\nconst update = require('./update');\nconst Parser = require('./parser');\n\nfunction SimpleElement(content, defaultState = null) {\n  if (!content.nodeType && typeof content !== 'string') {\n    if (!content[0] || !content[0].nodeType) {\n      throw TypeError('First argument for SimpleElement should be of type string or DOM element');\n    }\n  }\n  const templ = template(content);\n  content = templ.content.firstElementChild || templ.content.firstChild;\n  // Already sifrr element\n  if (content.isSifrr || content.nodeName.indexOf('-') !== -1 ||\n    (content.getAttribute && content.getAttribute('is') && content.getAttribute('is').indexOf('-') !== -1)\n  ) {\n    return content;\n  }\n  const stateMap = Parser.createStateMap(content, false);\n  function setProps(me) {\n    me._refs = Parser.collectRefsSimple(me, stateMap);\n    Object.defineProperty(me, 'state', {\n      get: () => me._state,\n      set: (v) => {\n        me._state = Object.assign(me._state || {}, v);\n        update(me, stateMap);\n      }\n    });\n  }\n  setProps(content);\n  if (defaultState) content.state = defaultState;\n\n  content.sifrrClone = function(deep = true, newState) {\n    const clone = content.cloneNode(deep);\n    setProps(clone);\n    if (newState) clone.state = newState;\n    else if (content.state) clone.state = content.state;\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","const simpleElement = require('./simpleelement');\nconst { getBindingFxns } = require('./bindings');\n\nmodule.exports = (sm, el, attr) => {\n  sm.type = 2;\n  sm.se = simpleElement(el.childNodes);\n  sm.text = getBindingFxns(el.getAttribute(attr));\n  el.textContent = '';\n  el.removeAttribute(attr);\n};\n","const { TEXT_NODE, COMMENT_NODE, ELEMENT_NODE, REPEAT_ATTR } = require('./constants');\nconst repeatref = require('./repeatref');\n// ref types:\n// 0: text\n// 1: html\n// 2: arrayToDom\nconst { getBindingFxns } = require('./bindings');\n\nfunction customElementCreator(el, filter) {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    // text node\n    const x = el.data;\n    if (x.indexOf('${') > -1) return {\n      type: 0,\n      text: getBindingFxns(x.trim())\n    };\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (filter(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.type = 1;\n        sm.text = getBindingFxns(innerHTML.replace(/<!--((?:(?!-->).)+)-->/g, '$1').trim());\n      }\n    } else if (el.hasAttribute(REPEAT_ATTR)) {\n      repeatref(sm, el, REPEAT_ATTR);\n    }\n    // attributes\n    const attrs = el.attributes, l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '_') {\n        attrStateMap.events[attribute.name] = getBindingFxns(attribute.value);\n      } else if (attribute.value.indexOf('${') >= 0) {\n        // Don't treat style differently because same performance https://jsperf.com/style-property-vs-style-attribute/2\n        attrStateMap[attribute.name] = getBindingFxns(attribute.value);\n      }\n    }\n    if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n}\n\nmodule.exports = {\n  creator: customElementCreator\n};\n","const { collect, create } = require('./ref');\nconst { creator } = require('./creator');\n\nconst Parser = {\n  collectRefs: collect,\n  collectRefsSimple: (element, stateMap) => collect(element, stateMap, 'rollSimple'),\n  createStateMap: (element) => create(element, creator),\n  twoWayBind: (e) => {\n    const target = e.composedPath ? e.composedPath()[0] : e.target;\n    if (!target.hasAttribute('data-sifrr-bind') || target._root === null) return;\n    const value = target.value || target.textContent;\n    let state = {};\n    if (!target._root) {\n      let root;\n      root = target;\n      while(root && !root.isSifrr) root = root.parentNode || root.host;\n      if (root) target._root = root;\n      else target._root = null;\n    }\n    state[target.getAttribute('data-sifrr-bind')] = value;\n    if (target._root) target._root.state = state;\n  }\n};\n\nmodule.exports = Parser;\n","const fetch = require('@sifrr/fetch');\nconst template = require('./template');\n\nclass Loader {\n  constructor(elemName, url) {\n    if (!fetch) throw Error('Sifrr.Dom.load requires Sifrr.Fetch to work.');\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.url = url;\n  }\n\n  get html() {\n    if (this._html) return this._html;\n    Loader.add(this.elementName, this);\n    const me = this;\n    this._html = fetch.file(this.htmlUrl)\n      .then((resp) => resp.text())\n      .then((file) => template(file).content).then((content) => {\n        me.template = content.querySelector('template');\n        return content;\n      });\n    return this._html;\n  }\n\n  get js() {\n    if (this._js) return this._js;\n    Loader.add(this.elementName, this);\n    this._js = fetch.file(this.jsUrl)\n      .then((resp) => resp.text());\n    return this._js;\n  }\n\n  get htmlUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  get jsUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.js`;\n  }\n\n  executeScripts(js) {\n    if (this._executed) return window.console.log(`'${this.elementName}' element's javascript was already executed`);\n    this._executed = true;\n    if (!js) {\n      return this.executeHTMLScripts();\n    } else {\n      return this.js.then((script) => {\n        new Function(script + `\\n //# sourceURL=${this.jsUrl}`).call();\n      }).catch((e) => {\n        window.console.error(e);\n        window.console.log(`JS file for '${this.elementName}' gave error. Trying to get html file.`);\n        return this.executeHTMLScripts();\n      });\n    }\n  }\n\n  executeHTMLScripts() {\n    return this.html.then((file) => {\n      file.querySelectorAll('script').forEach((script) => {\n        if (script.src) {\n          // Appending script node directly doesn't work\n          const newScript = require('./constants').SCRIPT();\n          newScript.src = script.src;\n          newScript.type = script.type;\n          window.document.body.appendChild(newScript);\n        } else {\n          new Function(script.text + `\\n //# sourceURL=${this.htmlUrl}`).call({ currentTempate: file.querySelector('template') });\n        }\n      });\n    }).catch(e => { throw e; });\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\n\nmodule.exports = Loader;\n","const Parser = require('./parser');\nconst update = require('./update');\nconst Loader = require('./loader');\nconst { makeChildrenEqual } = require('./makeequal');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      return (Loader.all[this.elementName] || { template: false }).template;\n    }\n\n    static get ctemp() {\n      this._ctemp = this._ctemp || this.template;\n      if (window.ShadyCSS && this.useShadowRoot && !this._ctemp.shady) {\n        window.ShadyCSS.prepareTemplate(this._ctemp, this.elementName);\n        this._ctemp.shady = true;\n      }\n      return this._ctemp;\n    }\n\n    static get stateMap() {\n      this._stateMap = this._stateMap || Parser.createStateMap(this.ctemp.content);\n      return this._stateMap;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static get useShadowRoot() {\n      return this.useSR;\n    }\n\n    constructor() {\n      super();\n      if (this.constructor.ctemp) {\n        this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const stateMap = this.constructor.stateMap, content = this.constructor.ctemp.content.cloneNode(true);\n        this._refs = Parser.collectRefs(content, stateMap);\n        if (this.constructor.useShadowRoot) {\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n        } else {\n          this.__content = content;\n        }\n      }\n    }\n\n    connectedCallback() {\n      if(!this.constructor.useShadowRoot && this.__content) {\n        makeChildrenEqual(this, Array.prototype.slice.call(this.__content.childNodes));\n        delete this.__content;\n      }\n      if (!this.hasAttribute('data-sifrr-state')) this.update();\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JSON.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      return this._state;\n    }\n\n    set state(v) {\n      if (this._state !== v) Object.assign(this._state, v);\n      this.update();\n      this.onStateChange();\n    }\n\n    onStateChange() {}\n\n    update() {\n      update(this);\n    }\n\n    onUpdate() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(deep, state) {\n      const clone = this.cloneNode(deep);\n      clone._state = state;\n      return clone;\n    }\n\n    clearState() {\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","// Inspired from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\nconst opts = { capture: true, passive: true };\n\nconst nativeToSyntheticEvent = (e, name) => {\n  return Promise.resolve((() => {\n    const target = e.composedPath ? e.composedPath()[0] : e.target;\n    let dom = target;\n    while(dom) {\n      const eventHandler = dom[`_${name}`] || (dom.getAttribute ? dom.getAttribute(`_${name}`) : null);\n      if (typeof eventHandler === 'function') {\n        eventHandler.call(dom._root || window, e, target);\n      } else if (typeof eventHandler === 'string') {\n        new Function('event', 'target', eventHandler).call(dom._root || window, event, target);\n      }\n      cssMatchEvent(e, name, dom, target);\n      dom = dom.parentNode || dom.host;\n    }\n  })());\n};\n\nconst cssMatchEvent = (e, name, dom, target) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e, target, dom));\n  }\n  for (let css in SYNTHETIC_EVENTS[name]) {\n    if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n  }\n};\n\nconst Event = {\n  all: SYNTHETIC_EVENTS,\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.addEventListener(name, event => nativeToSyntheticEvent(event, name), opts);\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    if (typeof el === 'string') el = document.querySelector(el);\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  },\n  opts,\n  nativeToSyntheticEvent\n};\n\nmodule.exports = Event;\n","// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\nSifrrDom.loadingElements = [];\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.Parser = require('./dom/parser');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\n\nSifrrDom.makeEqual = require('./dom/makeequal');\n\n// HTML to template\nSifrrDom.template = require('./dom/template');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useSR = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    throw Error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    throw Error(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error.message}`, error.trace);\n      return false;\n    }\n  }\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  HTMLElement.prototype.$ = HTMLElement.prototype.querySelector;\n  HTMLElement.prototype.$$ = HTMLElement.prototype.querySelectorAll;\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  if (typeof SifrrDom.config.baseUrl !== 'string') throw Error('baseUrl should be a string');\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, { url, js = true } = {}) {\n  if (window.customElements.get(elemName)) { return window.console.warn(`Error loading Element: ${elemName} - Custom Element with this name is already defined.`); }\n  let loader = new SifrrDom.Loader(elemName, url);\n  const wd = customElements.whenDefined(elemName);\n  SifrrDom.loadingElements.push(wd);\n  return loader.executeScripts(js).then(() => {\n    if (!window.customElements.get(elemName)) {\n      window.console.warn(`Executing '${elemName}' file didn't register the element. Ignore if you are registering element in a promise or async function.`);\n    }\n  }).catch(e => {\n    SifrrDom.loadingElements.splice(SifrrDom.loadingElements.indexOf(wd), 1);\n    window.console.error(e);\n  });\n};\n\nSifrrDom.loading = () => {\n  return Promise.all(SifrrDom.loadingElements);\n};\n\nmodule.exports = SifrrDom;\n"],"names":["temp","window","document","createElement","script","TEMPLATE","cloneNode","SCRIPT","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","OUTER_REGEX","RegExp","HTML_ATTR","REPEAT_ATTR","KEY_ATTR","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","require$$0","isHtml","el","hasAttribute","nextNonfilterNode","node","this","nextSibling","parentNode","nextNode","roll","n","currentNode","rollSimple","collect","element","stateMap","refs","l","length","i","push","idx","create","fxn","ref","indices","str","extra","tmp","Array","from","forEach","s","content","appendChild","nodeType","String","raw","replace","innerHTML","name","newValue","fromValue","getAttribute","removeAttribute","className","setAttribute","nodeName","value","shallowEqual","a","b","key","require$$1","makeChildrenEqual","parent","newChildren","createFn","oldL","childNodes","newL","textContent","addition","removeChild","lastChild","Math","min","item","head","firstChild","makeEqual","oldNode","newNode","state","replaceWith","data","attr","oldAttrs","attributes","newAttrs","updateAttribute","j","prototype","slice","call","longestPositiveIncreasingSubsequence","ns","newStart","seq","is","pre","len","findGreatestIndexLEQ","lo","hi","mid","floor","makeChildrenEqualKeyed","newData","x","oldData","_node","finalNode","prevStart","loop","prevEnd","newEnd","prevStartNode","prevEndNode","fixes","previousSibling","insertBefore","next","oldKeys","newKeys","Map","toDelete","set","reusingNodes","has","get","longestSeq","nodes","tmpD","lisIdx","replacer","match","f","indexOf","Function","e","console","log","evaluate","toString","lastIndexOf","error","getBindingFxns","string","splitted","split","ret","evaluateBindings","fxns","map","join","require$$2","require$$3","_refs","constructor","dom","val","event","events","eventLis","_root","undefined","text","type","se","sifrrClone","children","isArray","onUpdate","defaultState","TypeError","templ","template","firstElementChild","isSifrr","Parser","createStateMap","setProps","me","collectRefsSimple","Object","defineProperty","_state","v","assign","update","deep","newState","clone","sm","simpleElement","creator","filter","trim","repeatref","attrs","attrStateMap","attribute","keys","collectRefs","twoWayBind","target","composedPath","root","host","Loader","elemName","url","fetch","Error","all","elementName","_html","add","file","htmlUrl","then","resp","querySelector","_js","jsUrl","Sifrr","Dom","config","baseUrl","executeScripts","js","_executed","catch","executeHTMLScripts","html","querySelectorAll","src","newScript","body","currentTempate","instance","_all","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","ShadyCSS","useShadowRoot","shady","prepareTemplate","_stateMap","ctemp","toLowerCase","useSR","attachShadow","mode","shadowRoot","__content","connectedCallback","onConnect","disconnectedCallback","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","JSON","parse","onAttributeChange","onStateChange","clearState","$","args","sr","$$","HTMLElement","SYNTHETIC_EVENTS","opts","capture","passive","nativeToSyntheticEvent","Promise","resolve","eventHandler","cssMatchEvent","callEach","css","matches","addEventListener","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","SimpleElement","require$$4","require$$5","require$$6","register","customElements","define","elements","message","trace","setup","load","warn","loader","wd","whenDefined","loadingElements","loading"],"mappings":"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"}