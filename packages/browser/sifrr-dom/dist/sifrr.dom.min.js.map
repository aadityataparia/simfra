{"version":3,"file":"sifrr.dom.min.js","sources":["../src/dom/ref.js","../src/dom/constants.js","../src/dom/template.js","../src/dom/updateattribute.js","../src/utils/json.js","../src/dom/makeequal.js","../src/dom/keyed.js","../src/dom/bindings.js","../src/dom/update.js","../src/dom/simplecreator.js","../src/dom/simpleelement.js","../src/dom/creator.js","../src/dom/parser.js","../src/dom/loader.js","../src/dom/element.js","../src/dom/event.js","../src/sifrr.dom.js"],"sourcesContent":["// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\n\nTREE_WALKER.nextNonfilterNode = function(fxn) {\n  let node = this.currentNode;\n  if (fxn && fxn(node)){\n    node = this.nextSibling() || (this.parentNode(), this.nextSibling());\n  } else node = this.nextNode();\n  return node;\n};\n\nTREE_WALKER.roll = function(n, filter) {\n  let node = this.currentNode;\n  while(--n) {\n    node = this.nextNonfilterNode(filter);\n  }\n  return node;\n};\n\nclass Ref {\n  constructor(idx, ref) {\n    this.idx = idx;\n    this.ref = ref;\n  }\n}\n\nfunction collect(element, stateMap, filter = false) {\n  const refs = [], l = stateMap.length;\n  TREE_WALKER.currentNode = element;\n  for (let i = 0; i < l; i++) {\n    refs.push(TREE_WALKER.roll(stateMap[i].idx, filter));\n  }\n  return refs;\n}\n\nfunction create(node, fxn, filter = false) {\n  let indices = [], ref, idx = 0;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    // eslint-disable-next-line no-cond-assign\n    if (ref = fxn(node, filter)) {\n      indices.push(new Ref(idx+1, ref));\n      idx = 1;\n    } else {\n      idx++;\n    }\n    node = TREE_WALKER.nextNonfilterNode(filter);\n  }\n\n  return indices;\n}\n\nmodule.exports = {\n  collect,\n  create,\n  Ref\n};\n","const temp = window.document.createElement('template');\nconst script = window.document.createElement('script');\nconst reg = '(\\\\${(?:(?:[^{}$]|{(?:[^{}$])*})*)})';\n\nmodule.exports = {\n  TEMPLATE: () => temp.cloneNode(false),\n  SCRIPT: () => script.cloneNode(false),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1,\n  OUTER_REGEX: new RegExp(reg, 'g'),\n  HTML_ATTR: 'data-sifrr-html',\n  REPEAT_ATTR: 'data-sifrr-repeat',\n  KEY_ATTR: 'data-sifrr-key'\n};\n","const { TEMPLATE } = require('./constants');\n\nmodule.exports = (str, ...extra) => {\n  const tmp = TEMPLATE();\n  if (typeof str === 'string') {\n    // nothing\n  } else if (str[0] && typeof str[0] === 'string') {\n    str = String.raw(str, ...extra);\n  } else if (str[0]) {\n    Array.from(str).forEach((s) => {\n      tmp.content.appendChild(s);\n    });\n    return tmp;\n  } else if (str.nodeType && !str.content) {\n    tmp.content.appendChild(str);\n    return tmp;\n  } else {\n    return str;\n  }\n  str = str\n    .replace(/>\\n+/g, '>')\n    .replace(/\\s+</g, '<')\n    .replace(/>\\s+/g, '>')\n    .replace(/(\\\\)?\\$(\\\\)?\\{/g, '${');\n  tmp.innerHTML = str;\n  return tmp;\n};\n","// Attribute related gotchas\nmodule.exports = (element, name, newValue) => {\n  const fromValue = element.getAttribute(name);\n  if (newValue === false || newValue === null || newValue === undefined)\n    newValue.removeAttribute(name);\n  else if (fromValue !== newValue) {\n    if (name === 'class') element.className = newValue || '';\n    else element.setAttribute(name, newValue || '');\n  }\n\n  // select/input's value doesn't change on changing value attribute\n  if (name == 'value' && (element.nodeName == 'SELECT' || element.nodeName == 'INPUT')) element.value = newValue;\n};\n","const Json = {\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nmodule.exports = Json;\n","const updateAttribute = require('./updateattribute');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\nfunction makeChildrenEqual(parent, newChildren, createFn) {\n  const oldL = parent.childNodes.length, newL = newChildren.length;\n  // Fast path for clear\n  if (newL === 0) {\n    parent.textContent = '';\n    return;\n  }\n\n  // Fast path for create\n  if (oldL === 0) {\n    let addition;\n    for(let i = 0; i < newL; i++) {\n      addition = newChildren[i];\n      if (!newChildren[i].nodeType) addition = createFn(newChildren[i]);\n      parent.appendChild(addition);\n    }\n    return;\n  }\n\n  // Lesser children now\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  // More Children now\n  } else if (oldL < newL) {\n    let i = oldL, addition;\n    while(i < newL) {\n      addition = newChildren[i];\n      if (!newChildren[i].nodeType) addition = createFn(newChildren[i]);\n      parent.appendChild(addition);\n      i++;\n    }\n  }\n\n  const l = Math.min(newL, oldL);\n  // Make old children equal to new children\n  for(let i = 0, item, head = parent.firstChild; i < l; i++) {\n    item = newChildren[i];\n    // make two nodes equal\n    head = makeEqual(head, item).nextSibling;\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (!newNode.nodeType) {\n    if (!shallowEqual(oldNode.state, newNode)) {\n      oldNode.state = newNode;\n    }\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  let oldAttrs = oldNode.attributes, newAttrs = newNode.attributes, attr;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    attr = oldAttrs[j];\n    if (!newNode.hasAttribute(attr.name)) oldNode.removeAttribute(attr.name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, Array.prototype.slice.call(newNode.childNodes));\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","/* eslint-disable max-lines */\nconst { makeEqual } = require('./makeequal');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reconcile.js\n// This is almost straightforward implementation of reconcillation algorithm\n// based on ivi documentation:\n// https://github.com/localvoid/ivi/blob/2c81ead934b9128e092cc2a5ef2d3cabc73cb5dd/packages/ivi/src/vdom/implementation.ts#L1366\n// With some fast paths from Surplus implementation:\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L86\n//\n// How this implementation differs from others, is that it's working with data directly,\n// without maintaining nodes arrays, and uses manipukates dom only when required\n\nfunction makeChildrenEqualKeyed(parent, newData, createFn = (x) => x, key) {\n  const oldL = parent.childNodes.length,\n    newL = newData.length;\n\n  // Fast path for clear\n  if (newL === 0) {\n    parent.textContent = '';\n    return;\n  }\n\n  // Fast path for create\n  if (oldL === 0) {\n    for(let i = 0; i < newL; i++) {\n      parent.appendChild(createFn(newData[i]));\n    }\n    return;\n  }\n\n  const oldChildren = Array.prototype.slice.call(parent.childNodes), oldData = oldChildren.map(n => n.state);\n\n  // reconciliation\n  let prevStart = 0,\n    newStart = 0,\n    loop = true,\n    prevEnd = oldL - 1, newEnd = newL - 1,\n    prevStartNode = prevStart,\n    prevEndNode = prevEnd,\n    a, b;\n\n  fixes: while(loop) {\n    loop = false;\n\n    // Skip prefix\n    a = oldData[prevStart], b = newData[newStart];\n    while(a[key] === b[key]) {\n      makeEqual(oldChildren[prevStart], b);\n      prevStart++;\n      newStart++;\n      prevStartNode++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = oldData[prevStart], b = newData[newStart];\n    }\n\n    // Skip suffix\n    a = oldData[prevEnd], b = newData[newEnd];\n    while(a[key] === b[key]) {\n      makeEqual(oldChildren[prevEnd], newData[newEnd]);\n      prevEnd--;\n      newEnd--;\n      prevEndNode--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = oldData[prevEnd], b = newData[newEnd];\n    }\n\n    // Fast path to swap backward\n    a = oldData[prevEnd], b = newData[newStart];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(oldChildren[prevEnd], b);\n      parent.insertBefore(oldChildren[prevEndNode], oldChildren[prevStartNode]);\n      prevEnd--;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = oldData[prevEnd], b = newData[newStart];\n    }\n\n    // Fast path to swap forward\n    a = oldData[prevStart], b = newData[newEnd];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(oldChildren[prevStart], b);\n      parent.insertBefore(oldChildren[prevStartNode], oldChildren[prevEndNode + 1]);\n      prevStart++;\n      prevEndNode--;\n      prevStartNode++;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = oldData[prevStart], b = newData[newEnd];\n    }\n  }\n\n  // Fast path for shrink\n  if (newEnd < newStart) {\n    if (prevStart <= prevEnd) {\n      while(prevStart <= prevEnd) {\n        parent.removeChild(oldChildren[prevEnd]);\n        prevEnd--;\n      }\n    }\n    return;\n  }\n\n  // Fast path for add\n  if (prevEnd < prevStart) {\n    if (newStart <= newEnd) {\n      while(newStart <= newEnd) {\n        parent.appendChild(createFn(newData[newStart]));\n        newStart++;\n      }\n    }\n    return;\n  }\n\n  const oldKeys = new Array(newEnd + 1 - newStart), newKeys = new Map();\n\n  // Positions for reusing nodes from current DOM state\n  for(let i = newStart; i <= newEnd; i++) oldKeys[i] = -1;\n\n  // Index to resolve position from current to new\n  for (let i = newStart; i <= newEnd; i++) {\n    newKeys.set(newData[i][key], i);\n  }\n\n  let reusingNodes = 0, toDelete = [];\n  for(let i = prevStart; i <= prevEnd; i++) {\n    if (newKeys.has(oldData[i][key])) {\n      oldKeys[newKeys.get(oldData[i][key])] = i;\n      reusingNodes++;\n    } else {\n      toDelete.push(i);\n    }\n  }\n\n  // Fast path for full replace\n  if (reusingNodes === 0) {\n    for(let i = newStart; i <= newEnd; i++) {\n      // Add extra nodes\n      if (i > prevEnd) parent.appendChild(createFn(newData[i]));\n      else makeEqual(oldChildren[i], newData[i]);\n    }\n    // Remove extra nodes\n    if (newEnd < prevEnd) {\n      while (newEnd < prevEnd) {\n        parent.removeChild(oldChildren[prevEnd]);\n        prevEnd--;\n      }\n    }\n    return;\n  }\n\n  const longestSeq = longestPositiveIncreasingSubsequence(oldKeys, newStart);\n\n  // Collect nodes to work with them\n  const nodes = [];\n  let tmpC = prevStart;\n  for(let i = prevStart; i <= prevEnd; i++) {\n    nodes[i] = oldChildren[tmpC];\n    tmpC++;\n  }\n\n  for(let i = 0; i < toDelete.length; i++) {\n    parent.removeChild(nodes[toDelete[i]]);\n  }\n\n  let lisIdx = longestSeq.length - 1, tmpD;\n  prevEnd = oldChildren[prevEnd];\n  for(let i = newEnd; i >= newStart; i--) {\n    if(longestSeq[lisIdx] === i) {\n      prevEnd = nodes[oldKeys[longestSeq[lisIdx]]];\n      makeEqual(prevEnd, newData[i]);\n      lisIdx--;\n    } else {\n      if (oldKeys[i] === -1) {\n        tmpD = createFn(newData[i]);\n      } else {\n        tmpD = nodes[oldKeys[i]];\n        makeEqual(tmpD, newData[i]);\n      }\n      parent.insertBefore(tmpD, prevEnd);\n      prevEnd = tmpD;\n    }\n  }\n}\n\n// Picked from\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L368\n\n// return an array of the indices of ns that comprise the longest increasing subsequence within ns\nfunction longestPositiveIncreasingSubsequence(ns, newStart) {\n  let seq = [],\n    is  = [],\n    l   = -1,\n    pre = new Array(ns.length);\n\n  for (let i = newStart, len = ns.length; i < len; i++) {\n    let n = ns[i];\n    if (n < 0) continue;\n    let j = findGreatestIndexLEQ(seq, n);\n    if (j !== -1) pre[i] = is[j];\n    if (j === l) {\n      l++;\n      seq[l] = n;\n      is[l]  = i;\n    } else if (n < seq[j + 1]) {\n      seq[j + 1] = n;\n      is[j + 1] = i;\n    }\n  }\n\n  for (let i = is[l]; l >= 0; i = pre[i], l--) {\n    seq[l] = i;\n  }\n\n  return seq;\n}\n\nfunction findGreatestIndexLEQ(seq, n) {\n  // invariant: lo is guaranteed to be index of a value <= n, hi to be >\n  // therefore, they actually start out of range: (-1, last + 1)\n  let lo = -1,\n    hi = seq.length;\n\n  // fast path for simple increasing sequences\n  if (hi > 0 && seq[hi - 1] <= n) return hi - 1;\n\n  while (hi - lo > 1) {\n    let mid = Math.floor((lo + hi) / 2);\n    if (seq[mid] > n) {\n      hi = mid;\n    } else {\n      lo = mid;\n    }\n  }\n\n  return lo;\n}\n\nmodule.exports = {\n  makeChildrenEqualKeyed,\n  longestPositiveIncreasingSubsequence\n};\n","const { OUTER_REGEX } = require('./constants');\n\nfunction replacer(match) {\n  let f;\n  if (match.indexOf('return ') >= 0) {\n    f = match;\n  } else {\n    f = 'return ' + match;\n  }\n  try {\n    return new Function(f);\n  } catch(e) {\n    window.console.log(`Error processing binding: \\`${f}\\``);\n    return '';\n  }\n}\n\nfunction evaluate(fxn, el) {\n  try {\n    if (typeof fxn === 'string') return fxn;\n    else return fxn.call(el) || '';\n  } catch(e) {\n    const str = fxn.toString();\n    window.console.log(`Error evaluating: \\`${str.slice(str.indexOf('{') + 1, str.lastIndexOf('}'))}\\` for element`, el);\n    window.console.error(e);\n  }\n}\n\nmodule.exports = {\n  getBindingFxns: (string) => {\n    const splitted = string.split(OUTER_REGEX), l = splitted.length, ret = [];\n    for (let i = 0; i < l; i++) {\n      if (splitted[i][0] === '$' && splitted[i][1] === '{') {\n        ret.push(replacer(splitted[i].slice(2, -1)));\n      } else if (splitted[i]) ret.push(splitted[i]);\n    }\n    return ret;\n  },\n  evaluateBindings: (fxns, element) => {\n    if (fxns.length === 1) {\n      return evaluate(fxns[0], element);\n    }\n    return fxns.map(fxn => evaluate(fxn, element)).join('');\n  },\n  evaluate: evaluate,\n  replacer: replacer\n};\n","const { makeChildrenEqual } = require('./makeequal');\nconst { makeChildrenEqualKeyed } = require('./keyed');\nconst updateAttribute = require('./updateattribute');\nconst { evaluateBindings } = require('./bindings');\nconst { TEMPLATE, KEY_ATTR } = require('./constants');\n\nfunction simpleElementUpdate(simpleEl) {\n  const doms = simpleEl._refs, refs = simpleEl.stateMap, l = refs.length;\n  for (let i = 0; i < l; i++) {\n    const data = refs[i].ref, dom = doms[i];\n    if (Array.isArray(data)) {\n      const l = data.length;\n      for (let i = 0; i < l; i++) {\n        const attr = data[i];\n        if (dom.getAttribute(attr.name) !== simpleEl.state[attr.text]) {\n          dom.setAttribute(attr.name, simpleEl.state[attr.text] || '');\n        }\n      }\n    } else {\n      if (dom.data != simpleEl.state[data]) dom.data = simpleEl.state[data] || '';\n    }\n  }\n}\n\nfunction customElementUpdate(element) {\n  if (!element._refs) {\n    return false;\n  }\n  // Update nodes\n  const l = element._refs.length;\n  for (let i = 0; i < l; i++) {\n    const data = element.constructor.stateMap[i].ref;\n    const dom = element._refs[i];\n\n    // update attributes\n    if (data.attributes) {\n      for(let key in data.attributes) {\n        if (key === 'events') {\n          for(let event in data.attributes.events) {\n            const eventLis = evaluateBindings(data.attributes.events[event], element);\n            dom[event] = eventLis;\n          }\n          dom._root = element;\n          delete data.attributes['events'];\n        } else {\n          const val = evaluateBindings(data.attributes[key], element);\n          updateAttribute(dom, key, val);\n        }\n      }\n    }\n\n    if (data.text === undefined) continue;\n\n    // update element\n    const newValue = evaluateBindings(data.text, element);\n\n    if (data.type === 2) {\n      const key = dom.getAttribute(KEY_ATTR);\n      if (key) makeChildrenEqualKeyed(dom, newValue, (state) => data.se.sifrrClone(true, state), key);\n      else makeChildrenEqual(dom, newValue, (state) => data.se.sifrrClone(true, state));\n    } else if (data.type === 1) {\n      // html node\n      let children;\n      if (Array.isArray(newValue)) {\n        children = newValue;\n      } else if (newValue.content && newValue.content.nodeType === 11) {\n        children = Array.prototype.slice.call(newValue.content.childNodes);\n      } else if (newValue.nodeType) {\n        children = [newValue];\n      } else if (typeof newValue === 'string') {\n        const temp = TEMPLATE();\n        temp.innerHTML = newValue.toString();\n        children = Array.prototype.slice.call(temp.content.childNodes);\n      } else {\n        children = Array.prototype.slice.call(newValue);\n      }\n      // fast clear\n      if (children.length === 0) dom.textContent = '';\n      else makeChildrenEqual(dom, children);\n    } else if (data.type === 0) {\n      // text node\n      if (dom.data != newValue) {\n        dom.data = newValue;\n      }\n    }\n  }\n  element.onUpdate();\n}\n\nmodule.exports = {\n  update: customElementUpdate,\n  simpleUpdate: simpleElementUpdate\n};\n","const { ELEMENT_NODE } = require('./constants');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reuseNodes.js\nfunction simpleElementCreator(node) {\n  if (node.nodeType === ELEMENT_NODE) {\n    const attrs = Array.prototype.slice.call(node.attributes), l = attrs.length;\n    const ret = [];\n    for (let i = 0; i < l; i++) {\n      const avalue = attrs[i].value;\n      if (avalue[0] === '$') {\n        ret.push({\n          name: attrs[i].name,\n          text: avalue.slice(2, -1)\n        });\n        node.setAttribute(attrs[i].name, '');\n      }\n    }\n    if (ret.length > 0) return ret;\n    return 0;\n  } else {\n    let nodeData = node.data;\n    if (nodeData[0] === '$') {\n      node.data = '';\n      return nodeData.slice(2, -1);\n    }\n    return 0;\n  }\n}\n\nmodule.exports = {\n  simpleCreator: simpleElementCreator\n};\n","const { collect, create } = require('./ref');\nconst template = require('./template');\nconst { simpleUpdate } = require('./update');\nconst { simpleCreator } = require('./simplecreator');\n\nfunction SimpleElement(content, defaultState = null) {\n  if (!content.nodeType && typeof content !== 'string') {\n    if (!content[0] || !content[0].nodeType) {\n      throw TypeError('First argument for SimpleElement should be of type string or DOM element');\n    }\n  }\n  const templ = template(content);\n  content = templ.content.firstElementChild || templ.content.firstChild;\n  // Already sifrr element\n  if (content.isSifrr || content.nodeName.indexOf('-') !== -1 ||\n    (content.getAttribute && content.getAttribute('is') && content.getAttribute('is').indexOf('-') !== -1)\n  ) {\n    return content;\n  }\n  const stateMap = create(content, simpleCreator);\n  function setProps(me) {\n    me.stateMap = stateMap;\n    me._refs = collect(me, stateMap);\n    Object.defineProperty(me, 'state', {\n      get: () => me._state,\n      set: (v) => {\n        me._state = Object.assign(me._state || {}, v);\n        simpleUpdate(me);\n      }\n    });\n  }\n  setProps(content);\n  if (defaultState) content.state = defaultState;\n\n  content.sifrrClone = function(deep = true, newState) {\n    const clone = content.cloneNode(deep);\n    setProps(clone);\n    if (newState) clone.state = newState;\n    else if (content.state) clone.state = content.state;\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","const { TEXT_NODE, COMMENT_NODE, ELEMENT_NODE, REPEAT_ATTR } = require('./constants');\nconst simpleElement = require('./simpleelement');\n// ref types:\n// 0: text\n// 1: html\n// 2: arrayToDom\nconst { getBindingFxns } = require('./bindings');\n\nfunction customElementCreator(el, filter) {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    // text node\n    const x = el.data;\n    if (x.indexOf('${') > -1) return {\n      type: 0,\n      text: getBindingFxns(x.trim())\n    };\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (filter(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.type = 1;\n        sm.text = getBindingFxns(innerHTML.replace(/<!--((?:(?!-->).)+)-->/g, '$1').trim());\n      }\n    } else if (el.hasAttribute(REPEAT_ATTR)) {\n      sm.type = 2;\n      sm.se = simpleElement(el.childNodes);\n      sm.text = getBindingFxns(el.getAttribute(REPEAT_ATTR));\n      el.removeAttribute(REPEAT_ATTR);\n      el.textContent = '';\n    }\n    // attributes\n    const attrs = el.attributes, l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '_') {\n        attrStateMap.events[attribute.name] = getBindingFxns(attribute.value);\n      } else if (attribute.value.indexOf('${') >= 0) {\n        // Don't treat style differently because same performance https://jsperf.com/style-property-vs-style-attribute/2\n        attrStateMap[attribute.name] = getBindingFxns(attribute.value);\n      }\n    }\n    if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n}\n\nmodule.exports = {\n  creator: customElementCreator\n};\n","const { collect, create } = require('./ref');\nconst { creator } = require('./creator');\nconst { ELEMENT_NODE, HTML_ATTR } = require('./constants');\n\nfunction isHtml(el) {\n  return el.nodeType === ELEMENT_NODE && el.hasAttribute(HTML_ATTR);\n}\n\nconst Parser = {\n  collectRefs: (el, stateMap) => collect(el, stateMap, isHtml),\n  createStateMap: (element) => create(element, creator, isHtml),\n  twoWayBind: (e) => {\n    const target = e.composedPath ? e.composedPath()[0] : e.target;\n    if (!target.hasAttribute('data-sifrr-bind') || target._root === null) return;\n    const value = target.value || target.textContent;\n    let state = {};\n    if (!target._root) {\n      let root;\n      root = target;\n      while(root && !root.isSifrr) root = root.parentNode || root.host;\n      if (root) target._root = root;\n      else target._root = null;\n    }\n    state[target.getAttribute('data-sifrr-bind')] = value;\n    if (target._root) target._root.state = state;\n  }\n};\n\nmodule.exports = Parser;\n","const fetch = require('@sifrr/fetch');\nconst template = require('./template');\n\nclass Loader {\n  constructor(elemName, url) {\n    if (!fetch) throw Error('Sifrr.Dom.load requires Sifrr.Fetch to work.');\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.url = url;\n  }\n\n  get html() {\n    if (this._html) return this._html;\n    Loader.add(this.elementName, this);\n    const me = this;\n    this._html = fetch.file(this.htmlUrl)\n      .then((resp) => resp.text())\n      .then((file) => template(file).content).then((content) => {\n        me.template = content.querySelector('template');\n        return content;\n      });\n    return this._html;\n  }\n\n  get js() {\n    if (this._js) return this._js;\n    Loader.add(this.elementName, this);\n    this._js = fetch.file(this.jsUrl)\n      .then((resp) => resp.text());\n    return this._js;\n  }\n\n  get htmlUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  get jsUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.js`;\n  }\n\n  executeScripts(js) {\n    if (this._executed) return window.console.log(`'${this.elementName}' element's javascript was already executed`);\n    this._executed = true;\n    if (!js) {\n      return this.executeHTMLScripts();\n    } else {\n      return this.js.then((script) => {\n        new Function(script + `\\n //# sourceURL=${this.jsUrl}`).call();\n      }).catch((e) => {\n        window.console.error(e);\n        window.console.log(`JS file for '${this.elementName}' gave error. Trying to get html file.`);\n        return this.executeHTMLScripts();\n      });\n    }\n  }\n\n  executeHTMLScripts() {\n    return this.html.then((file) => {\n      file.querySelectorAll('script').forEach((script) => {\n        if (script.src) {\n          // Appending script node directly doesn't work\n          const newScript = require('./constants').SCRIPT();\n          newScript.src = script.src;\n          newScript.type = script.type;\n          window.document.body.appendChild(newScript);\n        } else {\n          new Function(script.text + `\\n //# sourceURL=${this.htmlUrl}`).call({ currentTempate: file.querySelector('template') });\n        }\n      });\n    }).catch(e => { throw e; });\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\n\nmodule.exports = Loader;\n","const Parser = require('./parser');\nconst { update } = require('./update');\nconst Loader = require('./loader');\nconst { makeChildrenEqual } = require('./makeequal');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      return (Loader.all[this.elementName] || { template: false }).template;\n    }\n\n    static get ctemp() {\n      this._ctemp = this._ctemp || this.template;\n      if (window.ShadyCSS && this.useShadowRoot && !this._ctemp.shady) {\n        window.ShadyCSS.prepareTemplate(this._ctemp, this.elementName);\n        this._ctemp.shady = true;\n      }\n      return this._ctemp;\n    }\n\n    static get stateMap() {\n      this._stateMap = this._stateMap || Parser.createStateMap(this.ctemp.content);\n      return this._stateMap;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static get useShadowRoot() {\n      return this.useSR;\n    }\n\n    constructor() {\n      super();\n      if (this.constructor.ctemp) {\n        this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const stateMap = this.constructor.stateMap, content = this.constructor.ctemp.content.cloneNode(true);\n        this._refs = Parser.collectRefs(content, stateMap);\n        if (this.constructor.useShadowRoot) {\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n        } else {\n          this.__content = content;\n        }\n      }\n    }\n\n    connectedCallback() {\n      if(!this.constructor.useShadowRoot && this.__content) {\n        makeChildrenEqual(this, Array.prototype.slice.call(this.__content.childNodes));\n        delete this.__content;\n      }\n      if (!this.hasAttribute('data-sifrr-state')) this.update();\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JSON.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      return this._state;\n    }\n\n    set state(v) {\n      if (this._state !== v) Object.assign(this._state, v);\n      this.update();\n      this.onStateChange();\n    }\n\n    onStateChange() {}\n\n    update() {\n      update(this);\n    }\n\n    onUpdate() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(deep, state) {\n      const clone = this.cloneNode(deep);\n      clone._state = state;\n      return clone;\n    }\n\n    clearState() {\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","// Inspired from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\nconst opts = { capture: true, passive: true };\n\nconst nativeToSyntheticEvent = (e, name) => {\n  return Promise.resolve((() => {\n    const target = e.composedPath ? e.composedPath()[0] : e.target;\n    let dom = target;\n    while(dom) {\n      const eventHandler = dom[`_${name}`] || (dom.getAttribute ? dom.getAttribute(`_${name}`) : null);\n      if (typeof eventHandler === 'function') {\n        eventHandler.call(dom._root || window, e, target);\n      } else if (typeof eventHandler === 'string') {\n        new Function('event', 'target', eventHandler).call(dom._root || window, event, target);\n      }\n      cssMatchEvent(e, name, dom, target);\n      dom = dom.parentNode || dom.host;\n    }\n  })());\n};\n\nconst cssMatchEvent = (e, name, dom, target) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e, target, dom));\n  }\n  for (let css in SYNTHETIC_EVENTS[name]) {\n    if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n  }\n};\n\nconst Event = {\n  all: SYNTHETIC_EVENTS,\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.addEventListener(name, event => nativeToSyntheticEvent(event, name), opts);\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    if (typeof el === 'string') el = document.querySelector(el);\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  },\n  opts,\n  nativeToSyntheticEvent\n};\n\nmodule.exports = Event;\n","// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\nSifrrDom.loadingElements = [];\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.Parser = require('./dom/parser');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\n\nSifrrDom.makeEqual = require('./dom/makeequal');\n\n// HTML to template\nSifrrDom.template = require('./dom/template');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useSR = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    throw Error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    throw Error(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error.message}`, error.trace);\n      return false;\n    }\n  }\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  HTMLElement.prototype.$ = HTMLElement.prototype.querySelector;\n  HTMLElement.prototype.$$ = HTMLElement.prototype.querySelectorAll;\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  if (typeof SifrrDom.config.baseUrl !== 'string') throw Error('baseUrl should be a string');\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, { url, js = true } = {}) {\n  if (window.customElements.get(elemName)) { return window.console.warn(`Error loading Element: ${elemName} - Custom Element with this name is already defined.`); }\n  let loader = new SifrrDom.Loader(elemName, url);\n  SifrrDom.loadingElements.push(customElements.whenDefined(elemName));\n  return loader.executeScripts(js);\n};\n\nSifrrDom.loading = () => {\n  return Promise.all(SifrrDom.loadingElements);\n};\n\nmodule.exports = SifrrDom;\n"],"names":["TREE_WALKER","window","document","createTreeWalker","NodeFilter","SHOW_ALL","nextNonfilterNode","fxn","node","this","currentNode","nextSibling","parentNode","nextNode","roll","n","filter","Ref","constructor","idx","ref","collect","element","stateMap","refs","l","length","i","push","create","indices","temp","createElement","script","TEMPLATE","cloneNode","SCRIPT","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","OUTER_REGEX","RegExp","HTML_ATTR","REPEAT_ATTR","KEY_ATTR","require$$0","str","extra","tmp","Array","from","forEach","s","content","appendChild","nodeType","String","raw","replace","innerHTML","name","newValue","fromValue","getAttribute","removeAttribute","className","setAttribute","nodeName","value","shallowEqual","a","b","key","require$$1","makeChildrenEqual","parent","newChildren","createFn","oldL","childNodes","newL","textContent","addition","removeChild","lastChild","Math","min","item","head","firstChild","makeEqual","oldNode","newNode","state","replaceWith","data","attr","oldAttrs","attributes","newAttrs","updateAttribute","j","hasAttribute","prototype","slice","call","longestPositiveIncreasingSubsequence","ns","newStart","seq","is","pre","len","findGreatestIndexLEQ","lo","hi","mid","floor","makeChildrenEqualKeyed","newData","x","oldChildren","oldData","map","prevStart","loop","prevEnd","newEnd","prevStartNode","prevEndNode","fixes","insertBefore","oldKeys","newKeys","Map","set","reusingNodes","toDelete","has","get","longestSeq","nodes","tmpC","tmpD","lisIdx","replacer","match","f","indexOf","Function","e","console","log","evaluate","el","toString","lastIndexOf","error","getBindingFxns","string","splitted","split","ret","evaluateBindings","fxns","join","require$$2","require$$3","update","_refs","dom","event","events","eventLis","_root","val","undefined","text","type","se","sifrrClone","children","isArray","onUpdate","simpleUpdate","simpleEl","doms","simpleCreator","attrs","avalue","nodeData","defaultState","TypeError","templ","template","firstElementChild","isSifrr","setProps","me","Object","defineProperty","_state","v","assign","deep","newState","clone","creator","trim","sm","simpleElement","attrStateMap","attribute","keys","isHtml","collectRefs","createStateMap","twoWayBind","target","composedPath","root","host","Loader","elemName","url","fetch","Error","all","elementName","_html","add","file","htmlUrl","then","resp","querySelector","_js","jsUrl","Sifrr","Dom","config","baseUrl","executeScripts","js","_executed","catch","executeHTMLScripts","html","querySelectorAll","src","newScript","body","currentTempate","instance","_all","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","ShadyCSS","useShadowRoot","shady","prepareTemplate","_stateMap","Parser","ctemp","toLowerCase","useSR","attachShadow","mode","shadowRoot","__content","connectedCallback","onConnect","disconnectedCallback","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","JSON","parse","onAttributeChange","onStateChange","clearState","$","args","sr","$$","HTMLElement","SYNTHETIC_EVENTS","opts","capture","passive","nativeToSyntheticEvent","Promise","resolve","eventHandler","cssMatchEvent","callEach","css","matches","addEventListener","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","SimpleElement","require$$4","require$$5","require$$6","register","customElements","define","elements","message","trace","setup","load","warn","loader","loadingElements","whenDefined","loading"],"mappings":"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"}