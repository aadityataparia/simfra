{"version":3,"file":"sifrr.dom.min.js","sources":["../src/dom/ref.js","../src/dom/constants.js","../src/dom/bindings.js","../src/dom/creator.js","../src/dom/parser.js","../src/dom/updateattribute.js","../src/utils/json.js","../src/dom/makeequal.js","../src/dom/update.js","../src/dom/template.js","../src/dom/loader.js","../src/dom/simpleelement.js","../src/dom/event.js","../src/dom/element.js","../src/sifrr.dom.js"],"sourcesContent":["// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\n\nTREE_WALKER.nextNonfilterNode = function(fxn) {\n  let node = this.currentNode;\n  if (fxn && fxn(node)){\n    node = this.nextSibling() || (this.parentNode(), this.nextSibling());\n  } else node = this.nextNode();\n  return node;\n};\n\nTREE_WALKER.roll = function(n, filter) {\n  let node = this.currentNode;\n  while(--n) {\n    node = this.nextNonfilterNode(filter);\n  }\n  return node;\n};\n\nclass Ref {\n  constructor(idx, ref) {\n    this.idx = idx;\n    this.ref = ref;\n  }\n}\n\nfunction collect(element, stateMap, filter = false) {\n  const refs = [];\n  TREE_WALKER.currentNode = element;\n  stateMap.map(x => refs.push(TREE_WALKER.roll(x.idx, filter)));\n  return refs;\n}\n\nfunction create(node, fxn, filter = false) {\n  let indices = [], ref, idx = 0;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    // eslint-disable-next-line no-cond-assign\n    if (ref = fxn(node, filter)) {\n      indices.push(new Ref(idx+1, ref));\n      idx = 1;\n    } else {\n      idx++;\n    }\n    node = TREE_WALKER.nextNonfilterNode(filter);\n  }\n\n  return indices;\n}\n\nmodule.exports = {\n  collect,\n  create,\n  Ref\n};\n","const temp = window.document.createElement('template');\nconst script = window.document.createElement('script');\nconst reg = '(?:[^{}$]|{(?:[^{}$])*})*';\n// const regex = '\\\\${(' + reg + ')}';\n// const sfn = window.document.createElement('sifrr-node');\n\nmodule.exports = {\n  TEMPLATE: () => temp.cloneNode(false),\n  SCRIPT: () => script.cloneNode(false),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1,\n  OUTER_REGEX: new RegExp('(\\\\${(?:' + reg + ')})', 'g'),\n  // SINGLE_REGEX: new RegExp(`^${regex}$`),\n  // GLOBAL_REGEX: new RegExp(regex, 'g')\n};\n","const { OUTER_REGEX } = require('./constants');\n\nfunction replacer(match) {\n  let f;\n  if (match.indexOf('return ') >= 0) {\n    f = match;\n  } else {\n    f = 'return ' + match;\n  }\n  return new Function(f);\n}\n\nfunction evaluate(fxn, el) {\n  try {\n    if (typeof fxn === 'string') return fxn;\n    else return fxn.call(el) || '';\n  } catch(e) {\n    window.console.error(e);\n    window.console.log(`Error evaluating: \\`${fxn}\\` for element`, el);\n  }\n}\n\nmodule.exports = {\n  getBindingFxns: (string) => {\n    const splitted = string.split(OUTER_REGEX), l = splitted.length, ret = [];\n    for (let i = 0; i < l; i++) {\n      if (splitted[i][0] === '$' && splitted[i][1] === '{') {\n        ret.push(replacer(splitted[i].slice(2, -1)));\n      } else if (splitted[i]) ret.push(splitted[i]);\n    }\n    return ret;\n  },\n  evaluateBindings: (fxns, element) => {\n    if (fxns.length === 1) {\n      return evaluate(fxns[0], element);\n    }\n    return fxns.map(fxn => evaluate(fxn, element)).join('');\n  },\n  evaluate: evaluate,\n  replacer: replacer\n};\n","const { TEXT_NODE, COMMENT_NODE, ELEMENT_NODE } = require('./constants');\n// Use fxns for only string\n// Use fxn for html content or event listener\nconst { getBindingFxns } = require('./bindings');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reuseNodes.js\nfunction simpleElementCreator(node) {\n  if (node.nodeType === ELEMENT_NODE) {\n    const attrs = Array.prototype.slice.call(node.attributes), l = attrs.length;\n    const ret = [];\n    for (let i = 0; i < l; i++) {\n      const avalue = attrs[i].value;\n      if (avalue[0] === '$') {\n        ret.push({\n          name: attrs[i].name,\n          text: avalue.slice(2, -1)\n        });\n        node.setAttribute(attrs[i].name, '');\n      }\n    }\n    if (ret.length > 0) return ret;\n    return 0;\n  } else {\n    let nodeData = node.data;\n    if (nodeData[0] === '$') {\n      node.data = '';\n      return nodeData.slice(2, -1);\n    }\n    return 0;\n  }\n}\n\nfunction customElementCreator(el, filter) {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    // text node\n    const x = el.data;\n    if (x.indexOf('${') > -1) return {\n      html: false,\n      text: getBindingFxns(x.trim())\n    };\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (filter(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.html = true;\n        sm.text = getBindingFxns(innerHTML.replace(/<!--(.*)-->/g, '$1').trim());\n      }\n    }\n    // attributes\n    const attrs = el.attributes, l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '_') {\n        attrStateMap.events[attribute.name] = getBindingFxns(attribute.value);\n      } else if (attribute.value.indexOf('${') >= 0) {\n        // Don't treat style differently because same performance https://jsperf.com/style-property-vs-style-attribute/2\n        attrStateMap[attribute.name] = getBindingFxns(attribute.value);\n      }\n    }\n    if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n}\n\nmodule.exports = {\n  creator: customElementCreator,\n  simpleCreator: simpleElementCreator\n};\n","const { collect, create } = require('./ref');\nconst { creator } = require('./creator');\n\nfunction isHtml(el) {\n  return (el.dataset && el.dataset.sifrrHtml == 'true') ||\n    el.nodeName == 'STYLE' ||\n    (el.dataset && el.dataset.sifrrRepeat);\n}\n\nconst Parser = {\n  collectRefs: (el, stateMap) => collect(el, stateMap, isHtml),\n  createStateMap: (element) => create(element, creator, isHtml),\n  twoWayBind: (e) => {\n    /* istanbul ignore next */\n    const target = e.composedPath ? e.composedPath()[0] : e.target;\n    if (!target.dataset.sifrrBind || target._root === null) return;\n    const value = target.value || target.textContent;\n    let state = {};\n    if (!target._root) {\n      let root;\n      root = target;\n      while(root && !root.isSifrr) root = root.parentNode || root.host;\n      if (root) target._root = root;\n      else target._root = null;\n    }\n    state[target.dataset.sifrrBind] = value;\n    if (target._root) target._root.state = state;\n  }\n};\n\nmodule.exports = Parser;\n","// Attribute related gotchas\nmodule.exports = (element, name, newValue) => {\n  const fromValue = element.getAttribute(name);\n  if (fromValue != newValue) {\n    if (name === 'class') element.className = newValue;\n    else element.setAttribute(name, newValue);\n  }\n\n  // select/input's value doesn't change on changing value attribute\n  if (name == 'value' && (element.nodeName == 'SELECT' || element.nodeName == 'INPUT')) element.value = newValue;\n};\n","const Json = {\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nmodule.exports = Json;\n","const updateAttribute = require('./updateattribute');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\nfunction makeChildrenEqual(parent, newChildren) {\n  // Lesser children now\n  const oldL = parent.childNodes.length, newL = newChildren.length;\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  // More Children now\n  } else if (oldL < newL) {\n    let i = oldL;\n    while(i < newL) {\n      parent.appendChild(newChildren[i]);\n      i++;\n    }\n  }\n\n  const l = Math.min(newL, oldL);\n  // Make old children equal to new children\n  for(let i = 0, item, head = parent.firstChild; i < l; i++) {\n    item = newChildren[i];\n    // make two nodes equal\n    head = makeEqual(head, item).nextSibling;\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (newNode.type === 'stateChange') {\n    if (!shallowEqual(oldNode.state, newNode.state)) {\n      oldNode.state = newNode.state;\n    }\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  let oldAttrs = oldNode.attributes, newAttrs = newNode.attributes, attr;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    attr = oldAttrs[j];\n    if (!newNode.hasAttribute(attr.name)) oldNode.removeAttribute(attr.name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, Array.prototype.slice.call(newNode.childNodes));\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","const { makeChildrenEqual } = require('./makeequal');\nconst updateAttribute = require('./updateattribute');\nconst { evaluateBindings } = require('./bindings');\nconst TEMPLATE = require('./constants').TEMPLATE();\n\nfunction simpleElementUpdate(simpleEl) {\n  const doms = simpleEl._refs, refs = simpleEl.stateMap, l = refs.length;\n  for (let i = 0; i < l; i++) {\n    const data = refs[i].ref, dom = doms[i];\n    if (Array.isArray(data)) {\n      const l = data.length;\n      for (let i = 0; i < l; i++) {\n        const attr = data[i];\n        if (attr.name === 'class') dom.className = simpleEl.state[attr.text];\n        else dom.setAttribute(attr.name, simpleEl.state[attr.text]);\n      }\n    } else {\n      dom.data = simpleEl.state[data];\n    }\n  }\n}\n\nfunction customElementUpdate(element) {\n  if (!element._refs) {\n    return false;\n  }\n  // Update nodes\n  const l = element._refs.length;\n  for (let i = 0; i < l; i++) {\n    const data = element.constructor.stateMap[i].ref;\n    const dom = element._refs[i];\n\n    // update attributes\n    if (data.attributes) {\n      for(let key in data.attributes) {\n        if (key === 'events') {\n          for(let event in data.attributes.events) {\n            const eventLis = evaluateBindings(data.attributes.events[event], element);\n            dom[event] = eventLis;\n          }\n          dom._root = element;\n          delete data.attributes['events'];\n        } else {\n          const val = evaluateBindings(data.attributes[key], element);\n          updateAttribute(dom, key, val);\n        }\n      }\n    }\n\n    if (data.html === undefined) continue;\n\n    // update element\n    const newValue = evaluateBindings(data.text, element);\n    if (!newValue) { dom.textContent = ''; continue; }\n\n    if (data.html) {\n      // html node\n      let children;\n      if (Array.isArray(newValue)) {\n        children = newValue;\n      } else if (newValue.content && newValue.content.nodeType === 11) {\n        children = Array.prototype.slice.call(newValue.content.childNodes);\n      } else if (newValue.nodeType) {\n        children = [newValue];\n      } else if (typeof newValue === 'string') {\n        TEMPLATE.innerHTML = newValue.toString();\n        children = Array.prototype.slice.call(TEMPLATE.content.childNodes);\n      } else {\n        children = Array.prototype.slice.call(newValue);\n      }\n      if (children.length === 0) {\n        dom.textContent = '';\n        continue;\n      }\n      makeChildrenEqual(dom, children);\n    } else {\n      // text node\n      if (dom.data != newValue) {\n        dom.data = newValue;\n      }\n    }\n  }\n  element.onUpdate();\n}\n\nmodule.exports = {\n  update: customElementUpdate,\n  simpleUpdate: simpleElementUpdate\n};\n","const { TEMPLATE } = require('./constants');\n\nmodule.exports = (str, ...extra) => {\n  const tmp = TEMPLATE();\n  if (typeof str === 'string') {\n    // nothing\n  } else if (str[0] && typeof str[0] === 'string') {\n    str = String.raw(str, ...extra);\n  } else if (str[0]) {\n    Array.from(str).forEach((s) => {\n      tmp.content.appendChild(s);\n    });\n    return tmp;\n  } else {\n    return str;\n  }\n  str = str\n    .replace(/>\\n+/g, '>')\n    .replace(/\\s+</g, '<')\n    .replace(/>\\s+/g, '>')\n    .replace(/(\\\\)?\\$(\\\\)?\\{/g, '${');\n  tmp.innerHTML = str;\n  return tmp;\n};\n","const fetch = require('@sifrr/fetch');\nconst template = require('./template');\n\nclass Loader {\n  constructor(elemName, url) {\n    if (!fetch) throw Error('Sifrr.Dom.load requires Sifrr.Fetch to work.');\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.url = url;\n  }\n\n  get html() {\n    if (this._html) return this._html;\n    Loader.add(this.elementName, this);\n    const me = this;\n    this._html = fetch.file(this.htmlUrl)\n      .then((resp) => resp.text())\n      .then((file) => template(file).content).then((content) => {\n        me.template = content.querySelector('template');\n        return content;\n      });\n    return this._html;\n  }\n\n  get js() {\n    if (this._js) return this._js;\n    Loader.add(this.elementName, this);\n    this._js = fetch.file(this.jsUrl)\n      .then((resp) => resp.text());\n    return this._js;\n  }\n\n  get htmlUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  get jsUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.js`;\n  }\n\n  executeScripts(js) {\n    if (this._executed) return window.console.log(`${this.elementName} was already executed`);\n    this._executed = true;\n    if (!js) {\n      return this.executeHTMLScripts();\n    } else {\n      return this.js.then((script) => {\n        new Function(script).bind(window)();\n      }).catch((e) => {\n        window.console.error(e);\n        window.console.log(`JS file gave error. Trying to get html file for ${this.elementName}.`);\n        return this.executeHTMLScripts();\n      });\n    }\n  }\n\n  executeHTMLScripts() {\n    return this.html.then((file) => {\n      file.querySelectorAll('script').forEach((script) => {\n        if (script.src) {\n          // Appending script node directly doesn't work\n          const newScript = require('./constants').SCRIPT();\n          newScript.src = script.src;\n          newScript.type = script.type;\n          window.document.body.appendChild(newScript);\n        } else {\n          new Function(script.text).call(window);\n        }\n      });\n    }).catch(/* istanbul ignore next */ e => window.console.error(e));\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\n\nmodule.exports = Loader;\n","const { collect, create } = require('./ref');\nconst template = require('./template');\nconst { simpleUpdate } = require('./update');\nconst { simpleCreator } = require('./creator');\n\nfunction SimpleElement(content, defaultState = null) {\n  let templ;\n  if (typeof content === 'string') {\n    templ = template(content);\n    content = templ.content.firstElementChild || templ.content.firstChild;\n  } else if (!content.nodeType) {\n    throw TypeError('First argument for SimpleElement should be of type string or DOM element');\n  }\n  // Already sifrr element\n  if (content.isSifrr) return content;\n  if (content.nodeName.indexOf('-') !== -1 ||\n    // for '<tag is=custom-element></tag>'\n    (content.getAttribute && content.getAttribute('is') && content.getAttribute('is').indexOf('-') !== -1)\n  ) {\n    // render node to make it sifrr element\n    window.document.body.appendChild(content);\n    content.remove();\n    return content;\n  }\n  content.stateMap = create(content, simpleCreator);\n  content._refs = collect(content, content.stateMap);\n  Object.defineProperty(content, 'state', {\n    get: () => content._state,\n    set: (v) => {\n      content._state = Object.assign(content._state || {}, v);\n      simpleUpdate(content);\n    }\n  });\n  if (defaultState) content.state = defaultState;\n\n  content.sifrrClone = function(deep = true) {\n    const clone = content.cloneNode(deep);\n    clone.stateMap = content.stateMap;\n    clone._refs = collect(clone, content.stateMap);\n    Object.defineProperty(clone, 'state', {\n      get: () => clone._state,\n      set: (v) => {\n        clone._state = Object.assign(clone._state || {}, v);\n        simpleUpdate(clone);\n      }\n    });\n    if (content.state) clone.state = content.state;\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","// Inspired from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\nconst opts = { capture: true, passive: true };\n\nconst nativeToSyntheticEvent = (e, name) => {\n  return Promise.resolve((() => {\n    /* istanbul ignore next */\n    const target = e.composedPath ? e.composedPath()[0] : e.target;\n    let dom = target;\n    while(dom) {\n      const eventHandler = dom[`_${name}`] || (dom.getAttribute ? dom.getAttribute(`_${name}`) : null);\n      if (typeof eventHandler === 'function') {\n        eventHandler.call(dom._root || window, e, target);\n      } else if (typeof eventHandler === 'string') {\n        new Function('event', 'target', eventHandler).call(dom._root || window, event, target);\n      }\n      cssMatchEvent(e, name, dom, target);\n      dom = dom.parentNode || dom.host;\n    }\n  })());\n};\n\nconst cssMatchEvent = (e, name, dom, target) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e, target, dom));\n  }\n  for (let css in SYNTHETIC_EVENTS[name]) {\n    if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n  }\n};\n\nconst Event = {\n  all: SYNTHETIC_EVENTS,\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.addEventListener(name, event => nativeToSyntheticEvent(event, name), opts);\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    if (typeof el === 'string') el = document.querySelector(el);\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  },\n  opts: opts\n};\n\nmodule.exports = Event;\n","const Parser = require('./parser');\nconst { update } = require('./update');\nconst Loader = require('./loader');\nconst SimpleElement = require('./simpleelement');\nconst { opts } = require('./event');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      return (Loader.all[this.elementName] || { template: false }).template;\n    }\n\n    static get ctemp() {\n      this._ctemp = this._ctemp || this.template;\n      if (window.ShadyCSS && this.useShadowRoot && !this._ctemp.shady) {\n        window.ShadyCSS.prepareTemplate(this._ctemp, this.elementName);\n        this._ctemp.shady = true;\n      }\n      return this._ctemp;\n    }\n\n    static get stateMap() {\n      this._stateMap = this._stateMap || Parser.createStateMap(this.ctemp.content);\n      return this._stateMap;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static get useShadowRoot() {\n      return this.useSR;\n    }\n\n    constructor() {\n      super();\n      if (this.constructor.ctemp) {\n        // this._oldState = {};\n        this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const content = this.constructor.ctemp.content.cloneNode(true);\n        if (this.constructor.useShadowRoot) {\n          this._refs = Parser.collectRefs(content, this.constructor.stateMap);\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n          this.shadowRoot.addEventListener('change', Parser.twoWayBind, opts);\n        } else {\n          this.__content = content;\n        }\n      }\n    }\n\n    connectedCallback() {\n      if(!this.constructor.useShadowRoot) {\n        this.textContent = '';\n        this._refs = Parser.collectRefs(this.__content, this.constructor.stateMap);\n        this.appendChild(this.__content);\n      }\n      if (!this.hasAttribute('data-sifrr-state') || !this.constructor.useShadowRoot) this.update();\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      if (this.shadowRoot) this.shadowRoot.removeEventListener('change', Parser.twoWayBind, opts);\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JSON.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      // return Json.deepClone(this._state);\n      return this._state;\n    }\n\n    set state(v) {\n      // this._oldState = this.state;\n      if (this._state !== v) Object.assign(this._state, v);\n      this.update();\n      this.onStateChange();\n    }\n\n    onStateChange() {}\n\n    update() {\n      update(this);\n    }\n\n    onUpdate() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(deep) {\n      return this.cloneNode(deep);\n    }\n\n    clearState() {\n      // this._oldState = this.state;\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n\n    static addArrayToDom(key, template) {\n      this._arrayToDom = this._arrayToDom || {};\n      // state of simple element is single array item, compatible with sifrr element\n      this._arrayToDom[this.elementName] = this._arrayToDom[this.elementName] || {};\n      this._arrayToDom[this.elementName][key] = SimpleElement(template);\n    }\n\n    arrayToDom(key, newState = this.state[key]) {\n      this._domL = this._domL || {};\n      const oldL = this._domL[key] || 0;\n      const domArray = [];\n      const newL = newState.length;\n      let temp;\n      try {\n        temp = this.constructor._arrayToDom[this.constructor.elementName][key];\n        if (!temp) throw Error('');\n      } catch(e) {\n        return window.console.error(`[error]: No arrayToDom data of '${key}' added in ${this.constructor.elementName}.`);\n      }\n      for (let i = 0; i < newL; i++) {\n        if (i < oldL) {\n          domArray.push({ type: 'stateChange', state: newState[i] });\n        } else {\n          const el = temp.sifrrClone(true);\n          el.state = newState[i];\n          domArray.push(el);\n        }\n      }\n      this._domL[key] = newL;\n      return domArray;\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\nSifrrDom.loadingElements = [];\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.Parser = require('./dom/parser');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\n\nSifrrDom.makeEqual = require('./dom/makeequal');\n\n// HTML to template\nSifrrDom.template = require('./dom/template');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useSR = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    throw Error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    throw Error(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error.message}`, error.trace);\n      return false;\n    }\n  }\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  HTMLElement.prototype.$ = HTMLElement.prototype.querySelector;\n  HTMLElement.prototype.$$ = HTMLElement.prototype.querySelectorAll;\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  if (typeof SifrrDom.config.baseUrl !== 'string') throw Error('baseUrl should be a string');\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, { url, js = true } = {}) {\n  if (window.customElements.get(elemName)) { return window.console.warn(`Error loading Element: ${elemName} - Custom Element with this name is already defined.`); }\n  let loader = new SifrrDom.Loader(elemName, url);\n  SifrrDom.loadingElements.push(customElements.whenDefined(elemName));\n  return loader.executeScripts(js);\n};\n\nSifrrDom.loading = () => {\n  return Promise.all(SifrrDom.loadingElements);\n};\n\nmodule.exports = SifrrDom;\n"],"names":["TREE_WALKER","window","document","createTreeWalker","NodeFilter","SHOW_ALL","nextNonfilterNode","fxn","node","this","currentNode","nextSibling","parentNode","nextNode","roll","n","filter","Ref","constructor","idx","ref","collect","element","stateMap","refs","map","x","push","create","indices","temp","createElement","script","TEMPLATE","cloneNode","SCRIPT","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","OUTER_REGEX","RegExp","require$$0","replacer","match","f","indexOf","Function","evaluate","el","call","e","console","error","log","getBindingFxns","string","splitted","split","l","length","ret","i","slice","evaluateBindings","fxns","join","require$$1","creator","nodeType","data","html","text","trim","sm","innerHTML","replace","attrs","attributes","attrStateMap","events","attribute","name","value","Object","keys","simpleCreator","Array","prototype","avalue","setAttribute","nodeData","isHtml","dataset","sifrrHtml","nodeName","sifrrRepeat","collectRefs","createStateMap","twoWayBind","target","composedPath","sifrrBind","_root","textContent","state","root","isSifrr","host","newValue","getAttribute","className","shallowEqual","a","b","key","makeChildrenEqual","parent","newChildren","oldL","childNodes","newL","removeChild","lastChild","appendChild","Math","min","item","head","firstChild","makeEqual","oldNode","newNode","type","replaceWith","attr","oldAttrs","newAttrs","updateAttribute","j","hasAttribute","removeAttribute","require$$2","update","_refs","dom","event","eventLis","val","undefined","children","isArray","content","toString","onUpdate","simpleUpdate","simpleEl","doms","str","extra","tmp","from","forEach","s","String","raw","Loader","elemName","url","fetch","Error","all","elementName","_html","add","me","file","htmlUrl","then","resp","template","querySelector","_js","jsUrl","Sifrr","Dom","config","baseUrl","executeScripts","js","_executed","bind","catch","executeHTMLScripts","querySelectorAll","src","newScript","body","instance","_all","defaultState","templ","firstElementChild","TypeError","remove","defineProperty","get","_state","set","v","assign","sifrrClone","deep","clone","SYNTHETIC_EVENTS","opts","capture","passive","nativeToSyntheticEvent","Promise","resolve","eventHandler","cssMatchEvent","callEach","css","matches","addEventListener","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","ShadyCSS","useShadowRoot","shady","prepareTemplate","_stateMap","Parser","ctemp","toLowerCase","useSR","attachShadow","mode","shadowRoot","__content","connectedCallback","onConnect","disconnectedCallback","removeEventListener","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","JSON","parse","onAttributeChange","onStateChange","clearState","$","args","sr","$$","_arrayToDom","SimpleElement","arrayToDom","newState","_domL","domArray","HTMLElement","SifrrDom","Element","require$$3","require$$4","require$$5","require$$6","register","customElements","define","elements","message","trace","setup","load","warn","loader","loadingElements","whenDefined","loading"],"mappings":"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"}