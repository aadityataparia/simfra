{"version":3,"file":"sifrr.dom.min.js","sources":["../src/utils/json.js","../src/dom/ref.js","../src/dom/constants.js","../src/dom/creator.js","../src/dom/parser.js","../src/dom/updateattribute.js","../src/dom/makeequal.js","../src/dom/update.js","../src/dom/template.js","../src/dom/loader.js","../src/dom/simpleelement.js","../src/dom/element.js","../src/dom/event.js","../src/sifrr.dom.js"],"sourcesContent":["const Json = {\n  parse: (data) => {\n    let ans = {};\n    if (typeof data == 'string') {\n      try {\n        ans = JSON.parse(data);\n      } catch(e) {\n        return data;\n      }\n      return Json.parse(ans);\n    } else if (Array.isArray(data)) {\n      ans = [];\n      data.forEach((v, i) => {\n        ans[i] = Json.parse(v);\n      });\n    } else if (typeof data == 'object') {\n      for (const k in data) {\n        ans[k] = Json.parse(data[k]);\n      }\n    } else {\n      return data;\n    }\n    return ans;\n  },\n  stringify: (data) => {\n    if (typeof data == 'string') {\n      return data;\n    } else {\n      return JSON.stringify(data);\n    }\n  },\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] != b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] != b[key]) {\n        return false;\n      }\n    }\n    return true;\n  },\n  deepClone: (json) => {\n    if (Array.isArray(json)) return json.map((i) => Json.deepClone(i));\n    if (typeof json !== 'object' || json === null) return json;\n    let clone = {};\n    for (let key in json) {\n      clone[key] = Json.deepClone(json[key]);\n    }\n    return clone;\n  }\n};\n\nmodule.exports = Json;\n","// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\n\nclass Ref {\n  constructor(idx, ref) {\n    this.idx = idx;\n    this.ref = ref;\n  }\n}\n\nfunction collect(element, stateMap = element.stateMap, filter) {\n  const refs = [];\n  TREE_WALKER.currentNode = element;\n  stateMap.map(x => refs.push(TREE_WALKER.roll(x.idx, filter)));\n  return refs;\n}\n\nfunction filterTW(TW, node, filter) {\n  if (filter){\n    node = TW.nextSibling();\n    if (!node) {\n      TW.parentNode();\n      node = TW.nextSibling();\n    }\n  } else node = TW.nextNode();\n  return node;\n}\n\nTREE_WALKER.roll = function(n, filter = false) {\n  let node = this.currentNode;\n  while(--n) {\n    node = filterTW(TREE_WALKER, node, filter && filter(node));\n  }\n  return node;\n};\n\nfunction create(node, fxn, filter = false) {\n  let indices = [], ref, idx = 0, i = 0;\n  TREE_WALKER.currentNode = node;\n  while(node && i < 5000) {\n    const f = filter && filter(node);\n    // eslint-disable-next-line no-cond-assign\n    if (ref = fxn(node, f)) {\n      indices.push(new Ref(idx+1, ref));\n      idx = 1;\n    } else {\n      idx++;\n    }\n    node = filterTW(TREE_WALKER, node, f);\n    i++;\n  }\n\n  return indices;\n}\n\nmodule.exports = {\n  walker: TREE_WALKER,\n  collect,\n  create,\n  Ref\n};\n","const temp = window.document.createElement('template');\nconst script = window.document.createElement('script');\n// const sfn = window.document.createElement('sifrr-node');\n\nmodule.exports = {\n  // SIFRR_NODE: () => sfn.cloneNode(),\n  TEMPLATE: () => temp.cloneNode(),\n  SCRIPT: () => script.cloneNode(),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1\n};\n","const { TEXT_NODE, ELEMENT_NODE, COMMENT_NODE } = require('./constants');\n\n// Inspired by https://github.com/Freak613/stage0/blob/master/index.js\nmodule.exports = (el, isHtml = false) => {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    // text node\n    const x = el.nodeValue;\n    if (x.indexOf('${') > -1) return {\n      html: false,\n      text: x.trim()\n    };\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (isHtml) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.html = true;\n        sm.text = innerHTML.replace(/<!--(.*)-->/g, '$1');\n      }\n    }\n    // attributes\n    const attrs = el.attributes || [], l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '$') {\n        attrStateMap.events[attribute.name] = attribute.value;\n      } else if (attribute.value.indexOf('${') >= 0) {\n        if (attribute.name === 'style') {\n          const styles = {};\n          attribute.value.split(';').forEach((s) => {\n            const [n, v] = s.split(/:(?!\\/\\/)/);\n            if (n && v && v.indexOf('${') >= 0) {\n              styles[n.trim()] = v.trim();\n            }\n          });\n          attrStateMap[attribute.name] = styles;\n        } else {\n          attrStateMap[attribute.name] = attribute.value;\n        }\n      }\n    }\n    if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n};\n","const { collect, create } = require('./ref');\nconst creator = require('./creator');\n\nfunction isHtml(el) {\n  return (el.dataset && el.dataset.sifrrHtml == 'true') ||\n    el.contentEditable == 'true' ||\n    el.nodeName == 'TEXTAREA' ||\n    el.nodeName == 'STYLE';\n}\n\nconst Parser = {\n  collectRefs: (el, stateMap) => collect(el, stateMap, isHtml),\n  createStateMap: (element) => create(element, creator, isHtml),\n  twoWayBind: (e) => {\n    const target = e.path ? e.path[0] : e.target;\n    if (!target.dataset.sifrrBind) return;\n    const value = target.value === undefined ? target.innerHTML : target.value;\n    let state = {};\n    let root;\n    if (target._root) {\n      root = target._root;\n    } else {\n      root = target;\n      while(!root.isSifrr) root = root.parentNode || root.host;\n      target._root = root;\n    }\n    state[target.dataset.sifrrBind] = value;\n    root.state = state;\n  },\n  evaluateString: (string, element, isSimple) => {\n    if (isSimple) return element.state[string.slice(2, -1)];\n    if (string.indexOf('${') < 0) return string;\n    string = string.trim();\n    if (string.match(/^\\${([^{}$]|{([^{}$])*})*}$/)) return replacer(string);\n    return replacer('`' + string + '`');\n\n    function replacer(match) {\n      if (match[0] == '$') match = match.slice(2, -1);\n      let f;\n      if (match.indexOf('return ') >= 0) {\n        f = new Function(match).bind(element);\n      } else {\n        f = new Function('return ' + match).bind(element);\n      }\n      return f();\n    }\n  }\n};\n\nmodule.exports = Parser;\n","// Attribute related gotchas\nfunction updateAttribute(element, name, newValue) {\n  const fromValue = element.getAttribute(name);\n  if (fromValue != newValue) {\n    // values are always cast to strings\n    if (!newValue) {\n      if (fromValue) element.removeAttribute(name);\n    } else {\n      element.setAttribute(name, newValue);\n    }\n  }\n\n  // select/input's value doesn't change on changing value attribute\n  if (name == 'value' && (element.nodeName == 'SELECT' || element.nodeName == 'INPUT')) element.value = newValue;\n}\n\nmodule.exports = updateAttribute;\n","const updateAttribute = require('./updateattribute');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reuseNodes.js\nfunction makeChildrenEqual(parent, newChildren) {\n  // Lesser children now\n  const oldL = parent.childNodes.length, newL = newChildren.length;\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  // More Children now\n  } else if (oldL < newL) {\n    let i = oldL;\n    while(i < newL) {\n      parent.appendChild(newChildren[i]);\n      i++;\n    }\n  }\n\n  const l = Math.min(newL, oldL);\n  // Make old children equal to new children\n  for(let i = 0, item, head = parent.firstChild; i < l; i++) {\n    item = newChildren[i];\n    // make two nodes equal\n    head = makeEqual(head, item).nextSibling;\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (newNode === null) return oldNode;\n  if (newNode.type === 'stateChange') {\n    if (!shallowEqual(oldNode.state, newNode.state)) {\n      oldNode.state = newNode.state;\n    }\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  let oldAttrs = oldNode.attributes, newAttrs = newNode.attributes, attr;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    attr = oldAttrs[j];\n    if (!newNode.hasAttribute(attr.name) && attr.specified !== false) oldNode.removeAttribute(attr.name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, newNode.childNodes);\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","const { makeChildrenEqual } = require('./makeequal');\nconst { evaluateString } = require('./parser');\nconst TEMPLATE = require('./constants').TEMPLATE();\nconst updateAttribute = require('./updateattribute');\n\nfunction update(element, stateMap = element.constructor.stateMap, isSimple = false) {\n  if (!element._refs) {\n    return false;\n  }\n  // Update nodes\n  const l = element._refs.length;\n  for (let i = 0; i < l; i++) {\n    const data = stateMap[i].ref;\n    const dom = element._refs[i];\n\n    // update attributes\n    if (data.attributes) {\n      for(let key in data.attributes) {\n        if (key === 'events') {\n          for(let event in data.attributes.events) {\n            const eventLis = evaluateString(data.attributes.events[event], element, isSimple);\n            if (data.attributes.events[event].slice(0, 6) === '${this') {\n              dom[event] = eventLis.bind(element);\n            } else {\n              dom[event] = eventLis;\n            }\n          }\n          delete data.attributes.events;\n        } else if (key === 'style') {\n          for (let k in data.attributes.style) {\n            dom.style[k] = evaluateString(data.attributes.style[k], element, isSimple);\n          }\n        } else {\n          const val = evaluateString(data.attributes[key], element, isSimple);\n          updateAttribute(dom, key, val);\n        }\n      }\n    }\n\n    if (data.html === undefined) continue;\n\n    // update element\n    const newValue = evaluateString(data.text, element, isSimple);\n    if (!newValue) { dom.textContent = ''; continue; }\n\n    if (data.html) {\n      // html node\n      let children;\n      if (Array.isArray(newValue)) {\n        children = newValue;\n      } else if (newValue.nodeType) {\n        children = [newValue];\n      } else {\n        // Replace html tags in input from input/contenteditable/textarea\n        TEMPLATE.innerHTML = newValue.toString()\n          // All closing tags\n          .replace(/(&lt;)(((?!&gt;).)*)(&gt;)(((?!&lt;).)*)(&lt;)\\/(((?!&gt;).)*)(&gt;)/g, '<$2>$5</$8>')\n          // Self closing tags (void elements) from https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n          .replace(/(&lt;)(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)(((?!&gt;).)*)(&gt;)/g, '<$2$3>');\n        children = Array.prototype.slice.call(TEMPLATE.content.childNodes);\n      }\n      if (children.length < 1) dom.textContent = '';\n      else makeChildrenEqual(dom, children);\n    } else {\n      // text node\n      if (dom.nodeValue != newValue) {\n        dom.nodeValue = newValue;\n      }\n    }\n  }\n}\n\nmodule.exports = update;\n","const { TEMPLATE } = require('./constants');\n\nmodule.exports = (str, ...extra) => {\n  const tmp = TEMPLATE();\n  if (typeof str === 'string') {\n    // nothing\n  } else if (str[0] && typeof str[0] === 'string') {\n    str = String.raw(str, ...extra);\n  } else if (str[0]) {\n    Array.from(str).forEach((s) => {\n      tmp.content.appendChild(s);\n    });\n    return tmp;\n  } else {\n    return str;\n  }\n  str = str\n    // Unexpected behaviour when replacing ${} after minifying\n    .replace(/>\\n+/g, '>')\n    .replace(/\\s+</g, '<')\n    .replace(/>\\s+/g, '>')\n    .replace(/(\\\\)?\\$(\\\\)?\\{/g, '${');\n  tmp.innerHTML = str;\n  return tmp;\n};\n","const fetch = require('@sifrr/fetch');\nconst template = require('./template');\n\nclass Loader {\n  constructor(elemName, url) {\n    if (!fetch) throw Error('Sifrr.Dom.load requires Sifrr.Fetch to work.');\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.url = url;\n  }\n\n  get html() {\n    if (this._html) return this._html;\n    Loader.add(this.elementName, this);\n    const me = this;\n    this._html = fetch.file(this.htmlUrl)\n      .then((resp) => resp.text())\n      .then((file) => template(file).content).then((content) => {\n        me.template = content.querySelector('template');\n        return content;\n      });\n    return this._html;\n  }\n\n  get js() {\n    if (this._js) return this._js;\n    Loader.add(this.elementName, this);\n    this._js = fetch.file(this.jsUrl)\n      .then((resp) => resp.text());\n    return this._js;\n  }\n\n  get htmlUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  get jsUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.js`;\n  }\n\n  executeScripts(js) {\n    if (this._executed) return window.console.log(`${this.elementName} was already executed`);\n    this._executed = true;\n    if (!js) {\n      return this.executeHTMLScripts();\n    } else {\n      return this.js.then((script) => {\n        new Function(script).bind(window)();\n      }).catch((e) => {\n        window.console.error(e);\n        window.console.log(`JS file gave error. Trying to get html file for ${this.elementName}.`);\n        return this.executeHTMLScripts();\n      });\n    }\n  }\n\n  executeHTMLScripts() {\n    return this.html.then((file) => {\n      file.querySelectorAll('script').forEach((script) => {\n        if (script.src) {\n          // Appending script node directly doesn't work\n          const newScript = require('./constants').SCRIPT();\n          newScript.src = script.src;\n          newScript.type = script.type;\n          window.document.body.appendChild(newScript);\n        } else {\n          new Function(script.text).call(window);\n        }\n      });\n    }).catch(e => window.console.error(e));\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\n\nmodule.exports = Loader;\n","const { collect, create } = require('./ref');\nconst template = require('./template');\nconst creator = require('./creator');\nconst update = require('./update');\n\nconst setupEl = (el, baseState, baseEl) => {\n  const state = el.state || baseEl ? baseEl.state : baseState;\n  el.stateMap = baseEl ? baseEl.stateMap : create(el, creator);\n  el._refs = collect(el, el.stateMap);\n  Object.defineProperty(el, 'state', {\n    get: () => el._state,\n    set: (v) => {\n      el._oldState = Object.assign({}, el._state);\n      el._state = Object.assign(el._state || {}, v);\n      update(el, el.stateMap, true);\n    }\n  });\n  if (state) el.state = state;\n};\n\nfunction SimpleElement(content, defaultState) {\n  if (typeof content === 'string') {\n    const templ = template(content);\n    content = templ.content.firstElementChild || templ.content.firstChild;\n  } else if (!content.nodeType) {\n    throw TypeError('First argument for SimpleElement should be of type string or DOM element');\n  }\n  if (content.nodeName.indexOf('-') !== -1 ||\n    (content.getAttribute && content.getAttribute('is') && content.getAttribute('is').indexOf('-') >= 0) ||\n    // for document.createElement('tag', { is: 'custom-element' })\n    content.isSifrr) return content;\n  setupEl(content, defaultState);\n\n  content.sifrrClone = function(deep = true) {\n    const clone = content.cloneNode(deep);\n    setupEl(clone, defaultState, content);\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","const Parser = require('./parser');\nconst update = require('./update');\nconst JsonExt = require('../utils/json');\nconst Loader = require('./loader');\nconst SimpleElement = require('./simpleelement');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      const temp = (Loader.all[this.elementName] || { template: false }).template;\n      if (window.ShadyCSS && this.useShadowRoot) window.ShadyCSS.prepareTemplate(temp, this.elementName);\n      return temp;\n    }\n\n    static get ctemp() {\n      this._ctemp = this._ctemp || this.template;\n      return this._ctemp;\n    }\n\n    static get stateMap() {\n      this._stateMap = this._stateMap || Parser.createStateMap(this.ctemp.content);\n      return this._stateMap;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static onStateChange() {}\n\n    static get useShadowRoot() {\n      return this.useSR;\n    }\n\n    constructor() {\n      super();\n      if (!this.constructor.ctemp) {\n        // no content\n      } else {\n        // this._oldState = {};\n        if(this.constructor.defaultState || this.state) this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const content = this.constructor.ctemp.content.cloneNode(true);\n        if (this.constructor.useShadowRoot) {\n          this._refs = Parser.collectRefs(content, this.constructor.stateMap);\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n          this.shadowRoot.addEventListener('change', Parser.twoWayBind);\n        } else {\n          this.__content = content;\n        }}\n    }\n\n    connectedCallback() {\n      if(!this.constructor.useShadowRoot) {\n        this.textContent = '';\n        this._refs = Parser.collectRefs(this.__content, this.constructor.stateMap);\n        this.appendChild(this.__content);\n        if (this._state || this.hasAttribute('data-sifrr-state')) this.update();\n      } else {\n        if(!this.hasAttribute('data-sifrr-state') && this._state) this.update();\n      }\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      if (this.shadowRoot) this.shadowRoot.removeEventListener('change', Parser.twoWayBind);\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JsonExt.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      // return JsonExt.deepClone(this._state);\n      return this._state;\n    }\n\n    set state(v) {\n      // this._oldState = this.state;\n      this._state = this._state || {};\n      if (this._state !== v) Object.assign(this._state, v);\n      this.update();\n    }\n\n    update() {\n      update(this);\n      this.onStateChange();\n      this.constructor.onStateChange(this);\n    }\n\n    onStateChange() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(deep) {\n      return this.cloneNode(deep);\n    }\n\n    clearState() {\n      // this._oldState = this.state;\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n\n    static addArrayToDom(key, template) {\n      this._arrayToDom = this._arrayToDom || {};\n      // state of simple element is single array item, compatible with sifrr element\n      this._arrayToDom[this.elementName] = this._arrayToDom[this.elementName] || {};\n      this._arrayToDom[this.elementName][key] = SimpleElement(template);\n    }\n\n    arrayToDom(key, newState = this.state[key]) {\n      this._domL = this._domL || {};\n      const oldL = this._domL[key] || 0;\n      const domArray = [];\n      const newL = newState.length;\n      let temp;\n      try {\n        temp = this.constructor._arrayToDom[this.constructor.elementName][key];\n        if (!temp) throw Error('');\n      } catch(e) {\n        return window.console.error(`[error]: No arrayToDom data of '${key}' added in ${this.constructor.elementName}.`);\n      }\n      for (let i = 0; i < newL; i++) {\n        if (i < oldL) {\n          domArray.push({ type: 'stateChange', state: newState[i] });\n        } else {\n          const el = temp.sifrrClone ? temp.sifrrClone(true) : temp.cloneNode(true);\n          el.state = newState[i];\n          domArray.push(el);\n        }\n      }\n      this._domL[key] = newL;\n      return domArray;\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","// Taken from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\n\nconst nativeToSyntheticEvent = (e, name) => {\n  return Promise.resolve((() => {\n    const target = e.composedPath ? e.composedPath()[0] : e.target;\n    let dom = target;\n    while(dom) {\n      const eventHandler = dom[`$${name}`];\n      if (eventHandler) {\n        eventHandler(e, target);\n      }\n      cssMatchEvent(e, name, dom, target);\n      dom = dom.parentNode || dom.host;\n    }\n  })());\n};\n\nconst cssMatchEvent = (e, name, dom, target) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e, target, dom));\n  }\n  for (let css in SYNTHETIC_EVENTS[name]) {\n    if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n  }\n};\n\nconst Event = {\n  all: SYNTHETIC_EVENTS, \n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.addEventListener(name, event => nativeToSyntheticEvent(event, name), { capture: true, passive: true });\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  }\n};\n\nmodule.exports = Event;\n","const JsonExt = require('./utils/json');\n\n// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\nSifrrDom.loadingElements = [];\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.Parser = require('./dom/parser');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\n\nSifrrDom.makeEqual = require('./dom/makeequal');\nSifrrDom.Json = JsonExt;\n\n// HTML to template\nSifrrDom.template = require('./dom/template');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useSR = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    throw Error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    throw Error(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error.message}`, error.trace);\n      return false;\n    }\n  }\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  if (typeof SifrrDom.config.baseUrl !== 'string') throw Error('baseUrl should be a string');\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, { url, js = true } = {}) {\n  let loader = new SifrrDom.Loader(elemName, url);\n  SifrrDom.loadingElements.push(customElements.whenDefined(elemName));\n  return loader.executeScripts(js);\n};\n\nSifrrDom.loading = () => {\n  return Promise.all(SifrrDom.loadingElements);\n};\n\nmodule.exports = SifrrDom;\n"],"names":["Json","parse","data","ans","JSON","e","Array","isArray","forEach","v","i","k","stringify","shallowEqual","a","b","key","deepClone","json","map","clone","TREE_WALKER","window","document","createTreeWalker","NodeFilter","SHOW_ALL","Ref","constructor","idx","ref","filterTW","TW","node","filter","nextSibling","parentNode","nextNode","roll","n","this","currentNode","walker","collect","element","stateMap","refs","x","push","create","fxn","indices","f","temp","createElement","script","TEMPLATE","cloneNode","SCRIPT","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","require$$0","el","isHtml","nodeType","nodeValue","indexOf","html","text","trim","sm","innerHTML","replace","attrs","attributes","l","length","attrStateMap","events","attribute","name","value","styles","split","s","Object","keys","dataset","sifrrHtml","contentEditable","nodeName","collectRefs","createStateMap","creator","twoWayBind","target","path","sifrrBind","undefined","root","state","_root","isSifrr","host","evaluateString","string","isSimple","slice","match","replacer","Function","bind","newValue","fromValue","getAttribute","setAttribute","removeAttribute","require$$1","makeChildrenEqual","parent","newChildren","oldL","childNodes","newL","removeChild","lastChild","appendChild","Math","min","item","head","firstChild","makeEqual","oldNode","newNode","type","replaceWith","attr","oldAttrs","newAttrs","updateAttribute","j","hasAttribute","specified","require$$2","_refs","dom","event","eventLis","style","val","children","toString","prototype","call","content","textContent","str","extra","tmp","from","String","raw","Loader","elemName","url","fetch","Error","all","elementName","_html","add","me","file","htmlUrl","then","resp","template","querySelector","_js","jsUrl","Sifrr","Dom","config","baseUrl","join","executeScripts","js","_executed","console","log","catch","error","executeHTMLScripts","querySelectorAll","src","newScript","body","instance","_all","setupEl","baseState","baseEl","defineProperty","get","_state","set","_oldState","assign","update","defaultState","templ","firstElementChild","TypeError","sifrrClone","deep","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","ShadyCSS","useShadowRoot","prepareTemplate","_ctemp","_stateMap","Parser","ctemp","toLowerCase","useSR","attachShadow","mode","shadowRoot","addEventListener","__content","connectedCallback","onConnect","disconnectedCallback","removeEventListener","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","JsonExt","onAttributeChange","onStateChange","clearState","$","args","sr","$$","_arrayToDom","SimpleElement","arrayToDom","newState","_domL","domArray","HTMLElement","SYNTHETIC_EVENTS","cssMatchEvent","callEach","fxns","css","matches","Promise","resolve","composedPath","eventHandler","nativeToSyntheticEvent","capture","passive","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","require$$3","require$$4","require$$5","require$$6","register","customElements","define","elements","message","trace","setup","load","loader","loadingElements","whenDefined","loading"],"mappings":";wTAAA,MAAMA,EAAO,CACXC,MAAQC,QACFC,EAAM,MACS,iBAARD,EAAkB,KAEzBC,EAAMC,KAAKH,MAAMC,GACjB,MAAMG,UACCH,SAEFF,EAAKC,MAAME,GACb,GAAIG,MAAMC,QAAQL,GACvBC,EAAM,GACND,EAAKM,QAAQ,CAACC,EAAGC,KACfP,EAAIO,GAAKV,EAAKC,MAAMQ,SAEjB,CAAA,GAAmB,iBAARP,SAKTA,MAJF,MAAMS,KAAKT,EACdC,EAAIQ,GAAKX,EAAKC,MAAMC,EAAKS,WAKtBR,GAETS,UAAYV,GACS,iBAARA,EACFA,EAEAE,KAAKQ,UAAUV,GAG1BW,aAAc,CAACC,EAAGC,SACZ,IAAIC,KAAOF,OACRE,KAAOD,IAAMD,EAAEE,IAAQD,EAAEC,UACrB,MAGP,IAAIA,KAAOD,OACRC,KAAOF,IAAMA,EAAEE,IAAQD,EAAEC,UACrB,SAGJ,GAETC,UAAYC,OACNZ,MAAMC,QAAQW,GAAO,OAAOA,EAAKC,IAAKT,GAAMV,EAAKiB,UAAUP,OAC3C,iBAATQ,GAA8B,OAATA,EAAe,OAAOA,MAClDE,EAAQ,OACP,IAAIJ,KAAOE,EACdE,EAAMJ,GAAOhB,EAAKiB,UAAUC,EAAKF,WAE5BI,IAIX,MAAiBpB,ECrDjB,MAAMqB,EAAcC,OAAOC,SAASC,iBAAiBF,OAAOC,SAAUD,OAAOG,WAAWC,SAAU,MAAM,GAExG,MAAMC,EACJC,YAAYC,EAAKC,QACVD,IAAMA,OACNC,IAAMA,GAWf,SAASC,EAASC,EAAIC,EAAMC,UACtBA,GACFD,EAAOD,EAAGG,iBAERH,EAAGI,aACHH,EAAOD,EAAGG,eAEPF,EAAOD,EAAGK,WACVJ,EAGTZ,EAAYiB,KAAO,SAASC,EAAGL,GAAS,OAClCD,EAAOO,KAAKC,mBACRF,GACNN,EAAOF,EAASV,EAAaY,EAAMC,GAAUA,EAAOD,WAE/CA,GAsBT,MAAiB,CACfS,OAAQrB,EACRsB,QA/CF,SAAiBC,EAASC,EAAWD,EAAQC,SAAUX,SAC/CY,EAAO,UACbzB,EAAYoB,YAAcG,EAC1BC,EAAS1B,IAAI4B,GAAKD,EAAKE,KAAK3B,EAAYiB,KAAKS,EAAElB,IAAKK,KAC7CY,GA4CPG,OAtBF,SAAgBhB,EAAMiB,EAAKhB,GAAS,OAChBJ,EAAdqB,EAAU,GAAStB,EAAM,EAAGnB,EAAI,MACpCW,EAAYoB,YAAcR,EACpBA,GAAQvB,EAAI,KAAM,OAChB0C,EAAIlB,GAAUA,EAAOD,IAEvBH,EAAMoB,EAAIjB,EAAMmB,KAClBD,EAAQH,KAAK,IAAIrB,EAAIE,EAAI,EAAGC,IAC5BD,EAAM,GAENA,IAEFI,EAAOF,EAASV,EAAaY,EAAMmB,GACnC1C,WAGKyC,GAOPxB,IAAAA,GC5DF,MAAM0B,EAAO/B,OAAOC,SAAS+B,cAAc,YACrCC,EAASjC,OAAOC,SAAS+B,cAAc,UAG7C,MAAiB,CAEfE,SAAU,IAAMH,EAAKI,YACrBC,OAAQ,IAAMH,EAAOE,YACrBE,UAAW,EACXC,aAAc,EACdC,aAAc,GCVhB,MAAMF,UAAEA,EAAFE,aAAaA,EAAbD,aAA2BA,GAAiBE,EAGlD,MAAiB,CAACC,EAAIC,GAAS,QACzBD,EAAGE,WAAaN,GAAaI,EAAGE,WAAaL,EAAc,OAEvDb,EAAIgB,EAAGG,aACTnB,EAAEoB,QAAQ,OAAS,EAAG,MAAO,CAC/BC,MAAM,EACNC,KAAMtB,EAAEuB,aAEL,GAAIP,EAAGE,WAAaJ,EAAc,OACjCU,EAAK,MAEPP,EAAQ,OACJQ,EAAYT,EAAGS,UACjBA,EAAUL,QAAQ,OAAS,IAC7BI,EAAGH,MAAO,EACVG,EAAGF,KAAOG,EAAUC,QAAQ,eAAgB,aAI1CC,EAAQX,EAAGY,YAAc,GAAIC,EAAIF,EAAMG,OACvCC,EAAe,CAAEC,OAAQ,QAC1B,IAAIrE,EAAI,EAAGA,EAAIkE,EAAGlE,IAAK,OACpBsE,EAAYN,EAAMhE,MACE,MAAtBsE,EAAUC,KAAK,GACjBH,EAAaC,OAAOC,EAAUC,MAAQD,EAAUE,WAC3C,GAAIF,EAAUE,MAAMf,QAAQ,OAAS,KACnB,UAAnBa,EAAUC,KAAkB,OACxBE,EAAS,GACfH,EAAUE,MAAME,MAAM,KAAK5E,QAAS6E,UAC3B9C,EAAG9B,GAAK4E,EAAED,MAAM,aACnB7C,GAAK9B,GAAKA,EAAE0D,QAAQ,OAAS,IAC/BgB,EAAO5C,EAAE+B,QAAU7D,EAAE6D,UAGzBQ,EAAaE,EAAUC,MAAQE,OAE/BL,EAAaE,EAAUC,MAAQD,EAAUE,SAIC,IAA5CI,OAAOC,KAAKT,EAAaC,QAAQF,eAAqBC,EAAaC,OACnEO,OAAOC,KAAKT,GAAcD,OAAS,IAAGN,EAAGI,WAAaG,GAEtDQ,OAAOC,KAAKhB,GAAIM,OAAS,EAAG,OAAON,SAElC,GChDT,cAAQ5B,SAASM,GAAWa,EAG5B,SAASE,EAAOD,UACNA,EAAGyB,SAAmC,QAAxBzB,EAAGyB,QAAQC,WACT,QAAtB1B,EAAG2B,iBACY,YAAf3B,EAAG4B,UACY,SAAf5B,EAAG4B,SA0CP,MAvCe,CACbC,YAAa,CAAC7B,EAAIlB,IAAaF,EAAQoB,EAAIlB,EAAUmB,GACrD6B,eAAiBjD,GAAYK,EAAOL,EAASkD,EAAS9B,GACtD+B,WAAa1F,UACL2F,EAAS3F,EAAE4F,KAAO5F,EAAE4F,KAAK,GAAK5F,EAAE2F,WACjCA,EAAOR,QAAQU,UAAW,aACzBhB,OAAyBiB,IAAjBH,EAAOd,MAAsBc,EAAOxB,UAAYwB,EAAOd,UAEjEkB,EADAC,EAAQ,MAERL,EAAOM,MACTF,EAAOJ,EAAOM,UACT,KACLF,EAAOJ,GACAI,EAAKG,SAASH,EAAOA,EAAKhE,YAAcgE,EAAKI,KACpDR,EAAOM,MAAQF,EAEjBC,EAAML,EAAOR,QAAQU,WAAahB,EAClCkB,EAAKC,MAAQA,GAEfI,eAAgB,CAACC,EAAQ9D,EAAS+D,YAC5BA,EAAiB/D,EAAQyD,MAAMK,EAAOE,MAAM,GAAI,IAChDF,EAAOvC,QAAQ,MAAQ,EAAUuC,GACrCA,EAASA,EAAOpC,QACLuC,MAAM,+BAAuCC,EAASJ,GAC1DI,EAAS,IAAMJ,EAAS,cAEtBI,EAASD,OAEZzD,QADY,KAAZyD,EAAM,KAAWA,EAAQA,EAAMD,MAAM,GAAI,KAG3CxD,EADEyD,EAAM1C,QAAQ,YAAc,EAC1B,IAAI4C,SAASF,GAAOG,KAAKpE,GAEzB,IAAImE,SAAS,UAAYF,GAAOG,KAAKpE,SC1BjD,MAfA,SAAyBA,EAASqC,EAAMgC,SAChCC,EAAYtE,EAAQuE,aAAalC,GACnCiC,GAAaD,IAEVA,EAGHrE,EAAQwE,aAAanC,EAAMgC,GAFvBC,GAAWtE,EAAQyE,gBAAgBpC,IAO/B,SAARA,GAAwC,UAApBrC,EAAQ+C,UAA4C,SAApB/C,EAAQ+C,WAAsB/C,EAAQsC,MAAQ+B,ICZxG,MAAMpG,aAAEA,GAAiBiD,aACjBH,eAAWC,GAAiB0D,EAGpC,SAASC,EAAkBC,EAAQC,SAE3BC,EAAOF,EAAOG,WAAW9C,OAAQ+C,EAAOH,EAAY5C,UACtD6C,EAAOE,EAAM,KACXlH,EAAIgH,OACFhH,EAAIkH,GACRJ,EAAOK,YAAYL,EAAOM,WAC1BpH,SAGG,GAAIgH,EAAOE,EAAM,KAClBlH,EAAIgH,OACFhH,EAAIkH,GACRJ,EAAOO,YAAYN,EAAY/G,IAC/BA,UAIEkE,EAAIoD,KAAKC,IAAIL,EAAMF,OAErB,IAAWQ,EAAPxH,EAAI,EAASyH,EAAOX,EAAOY,WAAY1H,EAAIkE,EAAGlE,IAGpDyH,EAAOE,EAAUF,EAFjBD,EAAOT,EAAY/G,IAEUyB,YAIjC,SAASkG,EAAUC,EAASC,MACV,OAAZA,EAAkB,OAAOD,KACR,gBAAjBC,EAAQC,YACL3H,EAAayH,EAAQjC,MAAOkC,EAAQlC,SACvCiC,EAAQjC,MAAQkC,EAAQlC,OAEnBiC,KAGLA,EAAQ3C,WAAa4C,EAAQ5C,gBAC/B2C,EAAQG,YAAYF,GACbA,KAGLD,EAAQrE,WAAaN,GAAa2E,EAAQrE,WAAaL,SACrD0E,EAAQpI,OAASqI,EAAQrI,OAAMoI,EAAQpI,KAAOqI,EAAQrI,MACnDoI,EAILC,EAAQlC,QAAOiC,EAAQjC,MAAQkC,EAAQlC,WAGuBqC,EAA9DC,EAAWL,EAAQ3D,WAAYiE,EAAWL,EAAQ5D,eACjD,IAAIjE,EAAIkI,EAAS/D,OAAS,EAAGnE,GAAK,IAAKA,EAC1CmI,EAAgBP,EAASM,EAASlI,GAAGuE,KAAM2D,EAASlI,GAAGwE,WAIpD,IAAI4D,EAAIH,EAAS9D,OAAS,EAAGiE,GAAK,IAAKA,EAC1CJ,EAAOC,EAASG,GACXP,EAAQQ,aAAaL,EAAKzD,QAA4B,IAAnByD,EAAKM,WAAqBV,EAAQjB,gBAAgBqB,EAAKzD,aAIjGsC,EAAkBe,EAASC,EAAQZ,YAE5BW,EAGT,MAAiB,CACfD,UAAAA,EACAd,kBAAAA,GC1EF,wBAAQA,GAAsBzD,GACxB2C,eAAEA,GAAmBa,EACrB9D,EAAWyF,EAAuBzF,WAsExC,MAnEA,SAAgBZ,EAASC,EAAWD,EAAQhB,YAAYiB,SAAU8D,GAAW,OACtE/D,EAAQsG,aACJ,QAGHtE,EAAIhC,EAAQsG,MAAMrE,WACnB,IAAInE,EAAI,EAAGA,EAAIkE,EAAGlE,IAAK,OACpBR,EAAO2C,EAASnC,GAAGoB,IACnBqH,EAAMvG,EAAQsG,MAAMxI,MAGtBR,EAAKyE,eACH,IAAI3D,KAAOd,EAAKyE,cACN,WAAR3D,EAAkB,KAChB,IAAIoI,KAASlJ,EAAKyE,WAAWI,OAAQ,OACjCsE,EAAW5C,EAAevG,EAAKyE,WAAWI,OAAOqE,GAAQxG,EAAS+D,GACtB,WAA9CzG,EAAKyE,WAAWI,OAAOqE,GAAOxC,MAAM,EAAG,GACzCuC,EAAIC,GAASC,EAASrC,KAAKpE,GAE3BuG,EAAIC,GAASC,SAGVnJ,EAAKyE,WAAWI,YAClB,GAAY,UAAR/D,MACJ,IAAIL,KAAKT,EAAKyE,WAAW2E,MAC5BH,EAAIG,MAAM3I,GAAK8F,EAAevG,EAAKyE,WAAW2E,MAAM3I,GAAIiC,EAAS+D,OAE9D,OACC4C,EAAM9C,EAAevG,EAAKyE,WAAW3D,GAAM4B,EAAS+D,GAC1DkC,EAAgBM,EAAKnI,EAAKuI,WAKdpD,IAAdjG,EAAKkE,KAAoB,eAGvB6C,EAAWR,EAAevG,EAAKmE,KAAMzB,EAAS+D,MAC/CM,KAED/G,EAAKkE,KAAM,KAEToF,EACAlJ,MAAMC,QAAQ0G,GAChBuC,EAAWvC,EACFA,EAAShD,SAClBuF,EAAW,CAACvC,IAGZzD,EAASgB,UAAYyC,EAASwC,WAE3BhF,QAAQ,wEAAyE,eAEjFA,QAAQ,oGAAqG,UAChH+E,EAAWlJ,MAAMoJ,UAAU9C,MAAM+C,KAAKnG,EAASoG,QAAQjC,aAErD6B,EAAS3E,OAAS,EAAGsE,EAAIU,YAAc,GACtCtC,EAAkB4B,EAAKK,QAGxBL,EAAIjF,WAAa+C,IACnBkC,EAAIjF,UAAY+C,QAvBHkC,EAAIU,YAAc,KC3CvC,eAAQrG,GAAaM,EAErB,MAAiB,CAACgG,KAAQC,WAClBC,EAAMxG,OACO,iBAARsG,OAEJ,CAAA,IAAIA,EAAI,IAAwB,iBAAXA,EAAI,GAEzB,OAAIA,EAAI,IACbxJ,MAAM2J,KAAKH,GAAKtJ,QAAS6E,IACvB2E,EAAIJ,QAAQ7B,YAAY1C,KAEnB2E,GAEAF,EAPPA,EAAMI,OAAOC,IAAIL,KAAQC,UAS3BD,EAAMA,EAEHrF,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,kBAAmB,MAC9BuF,EAAIxF,UAAYsF,EACTE,GCpBT,MAAMI,EACJxI,YAAYyI,EAAUC,OACfC,EAAO,MAAMC,MAAM,mDACpBhI,KAAKZ,YAAY6I,IAAIJ,GAAW,OAAO7H,KAAKZ,YAAY6I,IAAIJ,QAC3DK,YAAcL,OACdC,IAAMA,gBAIP9H,KAAKmI,MAAO,OAAOnI,KAAKmI,MAC5BP,EAAOQ,IAAIpI,KAAKkI,YAAalI,YACvBqI,EAAKrI,iBACNmI,MAAQJ,EAAMO,KAAKtI,KAAKuI,SAC1BC,KAAMC,GAASA,EAAK5G,QACpB2G,KAAMF,GAASI,EAASJ,GAAMlB,SAASoB,KAAMpB,IAC5CiB,EAAGK,SAAWtB,EAAQuB,cAAc,YAC7BvB,IAEJpH,KAAKmI,sBAIRnI,KAAK4I,IAAY5I,KAAK4I,KAC1BhB,EAAOQ,IAAIpI,KAAKkI,YAAalI,WACxB4I,IAAMb,EAAMO,KAAKtI,KAAK6I,OACxBL,KAAMC,GAASA,EAAK5G,QAChB7B,KAAK4I,0BAIL5I,KAAK8H,QAAUhJ,OAAOgK,MAAMC,IAAIC,OAAOC,QAAU,eAAejJ,KAAKkI,YAAYtF,MAAM,KAAKsG,KAAK,+BAIjGlJ,KAAK8H,QAAUhJ,OAAOgK,MAAMC,IAAIC,OAAOC,QAAU,eAAejJ,KAAKkI,YAAYtF,MAAM,KAAKsG,KAAK,UAG1GC,eAAeC,UACTpJ,KAAKqJ,UAAkBvK,OAAOwK,QAAQC,OAAOvJ,KAAKkI,0CACjDmB,WAAY,EACZD,EAGIpJ,KAAKoJ,GAAGZ,KAAMzH,QACfwD,SAASxD,GAAQyD,KAAK1F,YACzB0K,MAAO3L,IACRiB,OAAOwK,QAAQG,MAAM5L,GACrBiB,OAAOwK,QAAQC,uDAAuDvJ,KAAKkI,gBACpElI,KAAK0J,uBAPP1J,KAAK0J,sBAYhBA,4BACS1J,KAAK4B,KAAK4G,KAAMF,IACrBA,EAAKqB,iBAAiB,UAAU3L,QAAS+C,OACnCA,EAAO6I,IAAK,OAERC,EAAYvI,EAAuBJ,SACzC2I,EAAUD,IAAM7I,EAAO6I,IACvBC,EAAU7D,KAAOjF,EAAOiF,KACxBlH,OAAOC,SAAS+K,KAAKvE,YAAYsE,YAE7BtF,SAASxD,EAAOc,MAAMsF,KAAKrI,YAGlC0K,MAAM3L,GAAKiB,OAAOwK,QAAQG,MAAM5L,eAG1BgK,EAAUkC,GACnBnC,EAAOoC,KAAKnC,GAAYkC,0BAIjBnC,EAAOoC,MAIlBpC,EAAOoC,KAAO,GAEd,MAAiBpC,ECnFjB,cAAQzH,SAASM,GAAWa,EAKtB2I,EAAU,CAAC1I,EAAI2I,EAAWC,WACxBtG,EAAQtC,EAAGsC,OAASsG,EAASA,EAAOtG,MAAQqG,EAClD3I,EAAGlB,SAAW8J,EAASA,EAAO9J,SAAWI,EAAOc,EAAI+B,GACpD/B,EAAGmF,MAAQvG,EAAQoB,EAAIA,EAAGlB,UAC1ByC,OAAOsH,eAAe7I,EAAI,QAAS,CACjC8I,IAAK,IAAM9I,EAAG+I,OACdC,IAAMtM,IACJsD,EAAGiJ,UAAY1H,OAAO2H,OAAO,GAAIlJ,EAAG+I,QACpC/I,EAAG+I,OAASxH,OAAO2H,OAAOlJ,EAAG+I,QAAU,GAAIrM,GAC3CyM,EAAOnJ,EAAIA,EAAGlB,UAAU,MAGxBwD,IAAOtC,EAAGsC,MAAQA,IAyBxB,MAtBA,SAAuBuD,EAASuD,MACP,iBAAZvD,EAAsB,OACzBwD,EAAQlC,EAAStB,GACvBA,EAAUwD,EAAMxD,QAAQyD,mBAAqBD,EAAMxD,QAAQxB,gBACtD,IAAKwB,EAAQ3F,eACZqJ,UAAU,mFAEqB,IAAnC1D,EAAQjE,SAASxB,QAAQ,MAC1ByF,EAAQzC,cAAgByC,EAAQzC,aAAa,OAASyC,EAAQzC,aAAa,MAAMhD,QAAQ,MAAQ,GAElGyF,EAAQrD,QAAgBqD,GAC1B6C,EAAQ7C,EAASuD,GAEjBvD,EAAQ2D,WAAa,SAASC,GAAO,SAC7BpM,EAAQwI,EAAQnG,UAAU+J,UAChCf,EAAQrL,EAAO+L,EAAcvD,GACtBxI,GAGFwI,ICwIT,MAzKA,SAAS6D,EAAoBC,UACpB,cAAcA,iBACJC,UACNF,EAAoBE,yCAIpB,CAAC,oBAAoBC,OAAOpL,KAAKqL,8CAIjC,+BAIDxK,GAAQ+G,EAAOK,IAAIjI,KAAKkI,cAAgB,CAAEQ,UAAU,IAASA,gBAC/D5J,OAAOwM,UAAYtL,KAAKuL,eAAezM,OAAOwM,SAASE,gBAAgB3K,EAAMb,KAAKkI,aAC/ErH,iCAIF4K,OAASzL,KAAKyL,QAAUzL,KAAK0I,SAC3B1I,KAAKyL,yCAIPC,UAAY1L,KAAK0L,WAAaC,EAAOtI,eAAerD,KAAK4L,MAAMxE,SAC7DpH,KAAK0L,0CAIL1L,KAAKyC,KAAKR,QAAQ,kBAAmB,SAAS4J,wEAM9C7L,KAAK8L,MAGd1M,yBAEOY,KAAKZ,YAAYwM,MAEf,EAEF5L,KAAKZ,YAAYuL,cAAgB3K,KAAK6D,SAAO7D,KAAKsK,OAASxH,OAAO2H,OAAO,GAAIzK,KAAKZ,YAAYuL,aAAc3K,KAAK6D,cAC9GuD,EAAUpH,KAAKZ,YAAYwM,MAAMxE,QAAQnG,WAAU,GACrDjB,KAAKZ,YAAYmM,oBACd7E,MAAQiF,EAAOvI,YAAYgE,EAASpH,KAAKZ,YAAYiB,eACrD0L,aAAa,CAChBC,KAAM,cAEHC,WAAW1G,YAAY6B,QACvB6E,WAAWC,iBAAiB,SAAUP,EAAOpI,kBAE7C4I,UAAY/E,GAIvBgF,oBACMpM,KAAKZ,YAAYmM,eAMfvL,KAAKuG,aAAa,qBAAuBvG,KAAKsK,QAAQtK,KAAK0K,eAL1DrD,YAAc,QACdX,MAAQiF,EAAOvI,YAAYpD,KAAKmM,UAAWnM,KAAKZ,YAAYiB,eAC5DkF,YAAYvF,KAAKmM,YAClBnM,KAAKsK,QAAUtK,KAAKuG,aAAa,sBAAqBvG,KAAK0K,eAI5D2B,YAGPA,aAEAC,uBACMtM,KAAKiM,YAAYjM,KAAKiM,WAAWM,oBAAoB,SAAUZ,EAAOpI,iBACrEiJ,eAGPA,gBAEAC,yBAAyBC,EAAUC,EAAQC,GACxB,qBAAbF,SACG7I,MAAQgJ,EAAQpP,MAAMmP,SAExBE,kBAAkBJ,EAAUC,EAAQC,GAG3CE,wCAIS9M,KAAKsK,iBAGJrM,QAEHqM,OAAStK,KAAKsK,QAAU,GACzBtK,KAAKsK,SAAWrM,GAAG6E,OAAO2H,OAAOzK,KAAKsK,OAAQrM,QAC7CyM,SAGPA,SACEA,EAAO1K,WACF+M,qBACA3N,YAAY2N,cAAc/M,MAGjC+M,iBAEAhJ,QAAQtB,EAAO,aACTA,GAAaA,IAASzC,KAAKZ,YAAY8I,YAI7C6C,WAAWC,UACFhL,KAAKiB,UAAU+J,GAGxBgC,kBAEO1C,OAAS,QACTI,SAGPuC,EAAEC,EAAMC,GAAK,UACPnN,KAAKZ,YAAYmM,eAAiB4B,EAAWnN,KAAKiM,WAAWtD,cAAcuE,GACnElN,KAAK2I,cAAcuE,GAGjCE,GAAGF,EAAMC,GAAK,UACRnN,KAAKZ,YAAYmM,eAAiB4B,EAAWnN,KAAKiM,WAAWtC,iBAAiBuD,GACtElN,KAAK2J,iBAAiBuD,wBAGf1O,EAAKkK,QACnB2E,YAAcrN,KAAKqN,aAAe,QAElCA,YAAYrN,KAAKkI,aAAelI,KAAKqN,YAAYrN,KAAKkI,cAAgB,QACtEmF,YAAYrN,KAAKkI,aAAa1J,GAAO8O,EAAc5E,GAG1D6E,WAAW/O,EAAKgP,EAAWxN,KAAK6D,MAAMrF,SAC/BiP,MAAQzN,KAAKyN,OAAS,SACrBvI,EAAOlF,KAAKyN,MAAMjP,IAAQ,EAC1BkP,EAAW,GACXtI,EAAOoI,EAASnL,WAClBxB,WAEFA,EAAOb,KAAKZ,YAAYiO,YAAYrN,KAAKZ,YAAY8I,aAAa1J,IACvD,MAAMwJ,MAAM,IACvB,MAAMnK,UACCiB,OAAOwK,QAAQG,yCAAyCjL,eAAiBwB,KAAKZ,YAAY8I,oBAE9F,IAAIhK,EAAI,EAAGA,EAAIkH,EAAMlH,OACpBA,EAAIgH,EACNwI,EAASlN,KAAK,CAAEwF,KAAM,cAAenC,MAAO2J,EAAStP,SAChD,OACCqD,EAAKV,EAAKkK,WAAalK,EAAKkK,YAAW,GAAQlK,EAAKI,WAAU,GACpEM,EAAGsC,MAAQ2J,EAAStP,GACpBwP,EAASlN,KAAKe,eAGbkM,MAAMjP,GAAO4G,EACXsI,IAKIzC,CAAoBnM,OAAO6O,aC9K5C,MAAMC,EAAmB,GAiBnBC,EAAgB,CAAChQ,EAAG4E,EAAMkE,EAAKnD,cAC1BsK,EAASC,GAChBA,EAAK/P,QAAS0C,GAAQA,EAAI7C,EAAG2F,EAAQmD,QAElC,IAAIqH,KAAOJ,EAAiBnL,IACH,mBAAhBkE,EAAIsH,SAA0BtH,EAAIsH,QAAQD,IAClC,IAAjBrH,EAAIlF,UAA0B,aAARuM,IAAqBF,EAASF,EAAiBnL,GAAMuL,KA6BlF,MAzBc,CACZ/F,IAAK2F,EACLxF,IAAM3F,IACAmL,EAAiBnL,KACrB3D,OAAOoN,iBAAiBzJ,EAAMmE,GA7BH,EAAC/I,EAAG4E,IAC1ByL,QAAQC,QAAQ,YACf3K,EAAS3F,EAAEuQ,aAAevQ,EAAEuQ,eAAe,GAAKvQ,EAAE2F,WACpDmD,EAAMnD,OACJmD,GAAK,OACH0H,EAAe1H,MAAQlE,KACzB4L,GACFA,EAAaxQ,EAAG2F,GAElBqK,EAAchQ,EAAG4E,EAAMkE,EAAKnD,GAC5BmD,EAAMA,EAAI/G,YAAc+G,EAAI3C,OATT,IA4BkBsK,CAAuB1H,EAAOnE,GAAO,CAAE8L,SAAS,EAAMC,SAAS,IACtGZ,EAAiBnL,GAAQ,IAClB,GAETgM,YAAa,CAAChM,EAAMuL,EAAKtN,WACjBqN,EAAOH,EAAiBnL,GAAMuL,IAAQ,UACxCD,EAAKpM,QAAQjB,GAAO,GAAGqN,EAAKvN,KAAKE,GACrCkN,EAAiBnL,GAAMuL,GAAOD,GACvB,GAETW,eAAgB,CAACjM,EAAMuL,EAAKtN,WACpBqN,EAAOH,EAAiBnL,GAAMuL,IAAQ,GAAI9P,EAAI6P,EAAKpM,QAAQjB,UAC7DxC,GAAK,GAAG6P,EAAKY,OAAOzQ,EAAG,GAC3B0P,EAAiBnL,GAAMuL,GAAOD,GACvB,GAETa,QAAS,CAACrN,EAAIkB,EAAMoM,KAClBtN,EAAGuN,cAAc,IAAIhQ,OAAOiQ,MAAMtM,EAAMK,OAAO2H,OAAO,CAAEuE,SAAS,EAAMC,UAAU,GAAQJ,OC9C7F,IAAIK,EAAW,CAGfA,SAAoB,GACpBA,gBAA2B,WAG3BA,EAASC,QAAU7N,EACnB4N,EAASvD,OAAS7G,EAClBoK,EAAStH,OAASnB,EAClByI,EAAS5B,cAAgB8B,EACzBF,EAASH,MAAQM,EAEjBH,EAASrJ,UAAYyJ,EACrBJ,EAAS1R,KAAOqP,EAGhBqC,EAASxG,SAAW6G,EAGpBL,EAASM,SAAW,EAACL,EAASN,KAC5BM,EAAQrD,MAAQoD,EAASlG,OAAOuC,oBAC1B9I,EAAO0M,EAAQjH,gBAChBzF,QACGuF,MAAM,gDAAiDmH,GACxD,GAAIrQ,OAAO2Q,eAAepF,IAAI5H,SAC7BuF,iCAAiCvF,yDAClC,GAAIA,EAAKd,QAAQ,KAAO,QACvBqG,iCAAiCvF,6DAGrC3D,OAAO2Q,eAAeC,OAAOjN,EAAM0M,EAASN,GAC5CK,EAASS,SAASlN,GAAQ0M,GACnB,EACP,MAAO1F,UACP3K,OAAOwK,QAAQG,wCAAwChH,OAAUgH,EAAMmG,UAAWnG,EAAMoG,QACjF,KAMbX,EAASY,MAAQ,SAAS9G,MACxBkG,EAASlG,OAASlG,OAAO2H,OAAO,CAC9BxB,QAAS,GACTsC,eAAe,GACdvC,GACoC,iBAA5BkG,EAASlG,OAAOC,QAAsB,MAAMjB,MAAM,8BAC7DkH,EAASH,MAAM3G,IAAI,SACnB8G,EAASH,MAAM3G,IAAI,UACnB8G,EAASH,MAAMN,YAAY,SAAU,WAAYS,EAASvD,OAAOpI,YACjE2L,EAASH,MAAMN,YAAY,QAAS,WAAYS,EAASvD,OAAOpI,aAIlE2L,EAASa,KAAO,SAASlI,GAAUC,IAAEA,EAAFsB,GAAOA,GAAK,GAAS,QAClD4G,EAAS,IAAId,EAAStH,OAAOC,EAAUC,UAC3CoH,EAASe,gBAAgBzP,KAAKiP,eAAeS,YAAYrI,IAClDmI,EAAO7G,eAAeC,IAG/B8F,EAASiB,QAAU,KACVjC,QAAQjG,IAAIiH,EAASe,kBAGbf"}