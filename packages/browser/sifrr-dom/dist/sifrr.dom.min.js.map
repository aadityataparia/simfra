<<<<<<< HEAD
{"version":3,"file":"sifrr.dom.min.js","sources":["../src/dom/constants.js","../src/dom/ref.js","../src/dom/template.js","../src/dom/updateattribute.js","../src/utils/json.js","../src/dom/makeequal.js","../src/dom/keyed.js","../src/dom/bindings.js","../src/dom/update.js","../src/dom/simpleelement.js","../src/dom/repeatref.js","../src/dom/creator.js","../src/dom/loader.js","../src/dom/element.js","../src/dom/event.js","../src/sifrr.dom.js","../src/dom/twowaybind.js"],"sourcesContent":["const temp = window.document.createElement('template');\nconst script = window.document.createElement('script');\nconst reg = '(\\\\${(?:(?:[^{}$]|{(?:[^{}$])*})*)})';\n\nmodule.exports = {\n  TEMPLATE: () => temp.cloneNode(false),\n  SCRIPT: () => script.cloneNode(false),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1,\n  OUTER_REGEX: new RegExp(reg, 'g'),\n  STATE_REGEX: /^\\$\\{this\\.state\\.([a-zA-Z0-9_$]+)\\}$/,\n  HTML_ATTR: 'data-sifrr-html',\n  REPEAT_ATTR: 'data-sifrr-repeat',\n  KEY_ATTR: 'data-sifrr-key'\n};\n","// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\nconst { HTML_ATTR, TEXT_NODE } = require('./constants');\n\nfunction isHtml(el) {\n  return el.hasAttribute && el.hasAttribute(HTML_ATTR);\n}\n\nTREE_WALKER.nextFilteredNode = function() {\n  let node = this.currentNode;\n  if (isHtml(node)){\n    node = this.nextSibling() || (this.parentNode(), this.nextSibling());\n  } else node = this.nextNode();\n  return node;\n};\n\nfunction collect(element, stateMap, next = 'nextFilteredNode') {\n  const refs = [], l = stateMap.length;\n  let node = TREE_WALKER.currentNode = element, n;\n  for (let i = 0; i < l; i++) {\n    n = stateMap[i].idx;\n    while(--n) {\n      node = TREE_WALKER[next]();\n    }\n    refs.push(node);\n  }\n  return refs;\n}\n\nfunction create(node, fxn, passedArg) {\n  let indices = [], ref, idx = 0, ntr;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    if (node.nodeType === TEXT_NODE && node.data.trim() === '') {\n      ntr = node;\n      node = TREE_WALKER.nextFilteredNode(node);\n      ntr.remove();\n    } else {\n      // eslint-disable-next-line no-cond-assign\n      if (ref = fxn(node, isHtml, passedArg)) {\n        indices.push({ idx: idx+1, ref });\n        idx = 1;\n      } else {\n        idx++;\n      }\n      node = TREE_WALKER.nextFilteredNode(node);\n    }\n  }\n  return indices;\n}\n\nmodule.exports = {\n  collect,\n  create\n};\n","const { TEMPLATE } = require('./constants');\n\nmodule.exports = (str, ...extra) => {\n  const tmp = TEMPLATE();\n  if (typeof str === 'string') {\n    // nothing\n  } else if (str[0] && typeof str[0] === 'string') {\n    str = String.raw(str, ...extra);\n  } else if (str[0]) {\n    Array.from(str).forEach((s) => {\n      tmp.content.appendChild(s);\n    });\n    return tmp;\n  } else if (str.nodeType && !str.content) {\n    tmp.content.appendChild(str);\n    return tmp;\n  } else {\n    return str;\n  }\n  str = str\n    .replace(/(\\\\)?\\$(\\\\)?\\{/g, '${');\n  tmp.innerHTML = str;\n  return tmp;\n};\n","// Attribute related gotchas\nmodule.exports = (element, name, newValue) => {\n  if (newValue === false || newValue === null || newValue === undefined) element.hasAttribute(name) && element.removeAttribute(name);\n  else if (name === 'class') {\n    element.className = newValue;\n  } else if (name === 'id' || name === 'value') {\n    element[name] = newValue;\n  } else if (element.getAttribute(name) !== newValue) {\n    element.setAttribute(name, newValue);\n  }\n};\n","const Json = {\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nmodule.exports = Json;\n","const updateAttribute = require('./updateattribute');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\nfunction makeChildrenEqual(parent, newChildren, createFn, isNode = false) {\n  const newL = newChildren.length, oldL = parent.childNodes.length;\n  // Lesser children now\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  }\n\n  let item, head = parent.firstChild, curNewChild = newChildren[0];\n  if (isNode) {\n    // Make old children equal to new children\n    while(head) {\n      item = curNewChild.nextSibling;\n      head = makeEqual(head, curNewChild).nextSibling;\n      curNewChild = item;\n    }\n    // Add extra new children\n    while(curNewChild) {\n      item = curNewChild.nextSibling;\n      parent.appendChild(curNewChild);\n      curNewChild = item;\n    }\n  } else {\n    let i = 0;\n    // Make old children equal to new children\n    while(head) {\n      head = makeEqual(head, newChildren[i]).nextSibling;\n      i++;\n    }\n    // Add extra new children\n    while(i < newL) {\n      item = newChildren[i];\n      parent.appendChild(item.nodeType ? item : createFn(item));\n      i++;\n    }\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (!newNode.nodeType) {\n    if (!shallowEqual(oldNode._state, newNode)) oldNode.state = newNode;\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  // Text or comment node\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  const oldAttrs = oldNode.attributes, newAttrs = newNode.attributes;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    if (!newNode.hasAttribute(oldAttrs[j].name)) oldNode.removeAttribute(oldAttrs[j].name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, newNode.childNodes, undefined, true);\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","/* eslint-disable max-lines */\nconst { makeEqual } = require('./makeequal');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reconcile.js\n// This is almost straightforward implementation of reconcillation algorithm\n// based on ivi documentation:\n// https://github.com/localvoid/ivi/blob/2c81ead934b9128e092cc2a5ef2d3cabc73cb5dd/packages/ivi/src/vdom/implementation.ts#L1366\n// With some fast paths from Surplus implementation:\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L86\n//\n// How this implementation differs from others, is that it's working with data directly,\n// without maintaining nodes arrays, and uses manipukates dom only when required\n\nfunction makeChildrenEqualKeyed(parent, newData, createFn, key) {\n  const newL = newData.length, oldL = parent.childNodes.length;\n\n  if (oldL === 0) {\n    for(let i = 0; i < newL; i++) {\n      parent.appendChild(createFn(newData[i]));\n    }\n    return;\n  }\n\n  // reconciliation\n  let prevStart = 0,\n    newStart = 0,\n    loop = true,\n    prevEnd = oldL - 1, newEnd = newL - 1,\n    prevStartNode = parent.firstChild,\n    prevEndNode = parent.lastChild,\n    finalNode,\n    a, b, _node;\n\n  fixes: while(loop) {\n    loop = false;\n\n    // Skip prefix\n    a = prevStartNode.state, b = newData[newStart];\n    while(a[key] === b[key]) {\n      makeEqual(prevStartNode, b);\n      prevStart++;\n      prevStartNode = prevStartNode.nextSibling;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevStartNode.state, b = newData[newStart];\n    }\n\n    // Skip suffix\n    a = prevEndNode.state, b = newData[newEnd];\n    while(a[key] === b[key]) {\n      makeEqual(prevEndNode, b);\n      prevEnd--;\n      finalNode = prevEndNode;\n      prevEndNode = prevEndNode.previousSibling;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevEndNode.state, b = newData[newEnd];\n    }\n\n    // Fast path to swap backward\n    a = prevEndNode.state, b = newData[newStart];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevEndNode, b);\n      _node = prevEndNode.previousSibling;\n      parent.insertBefore(prevEndNode, prevStartNode);\n      prevEndNode = _node;\n      prevEnd--;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevEndNode.state, b = newData[newStart];\n    }\n\n    // Fast path to swap forward\n    a = prevStartNode.state, b = newData[newEnd];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevStartNode, b);\n      _node = prevStartNode.nextSibling;\n      parent.insertBefore(prevStartNode, prevEndNode.nextSibling);\n      finalNode = prevStartNode;\n      prevEndNode = prevStartNode.previousSibling;\n      prevStartNode = _node;\n      prevStart++;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevStartNode.state, b = newData[newEnd];\n    }\n  }\n\n  // Fast path for shrink\n  if (newEnd < newStart) {\n    if (prevStart <= prevEnd) {\n      let next;\n      while(prevStart <= prevEnd) {\n        if (prevEnd === 0) {\n          parent.removeChild(prevEndNode);\n        } else {\n          next = prevEndNode.previousSibling;\n          parent.removeChild(prevEndNode);\n          prevEndNode = next;\n        }\n        prevEnd--;\n      }\n    }\n    return;\n  }\n\n  // Fast path for add\n  if (prevEnd < prevStart) {\n    if (newStart <= newEnd) {\n      while(newStart <= newEnd) {\n        _node = createFn(newData[newStart]);\n        parent.insertBefore(_node, prevEndNode.nextSibling);\n        prevEndNode = _node;\n        newStart++;\n      }\n    }\n    return;\n  }\n\n  const oldKeys = new Array(newEnd + 1 - newStart), newKeys = new Map(), nodes = [], toDelete = [];\n\n  for(let i = newStart; i <= newEnd; i++) {\n    // Positions for reusing nodes from current DOM state\n    oldKeys[i] = -1;\n    // Index to resolve position from current to new\n    newKeys.set(newData[i][key], i);\n  }\n\n  let reusingNodes = 0;\n  while (prevStart <= prevEnd) {\n    if (newKeys.has(prevStartNode.state[key])) {\n      oldKeys[newKeys.get(prevStartNode.state[key])] = prevStart;\n      reusingNodes++;\n    } else {\n      toDelete.push(prevStartNode);\n    }\n    nodes[prevStart] = prevStartNode;\n    prevStartNode = prevStartNode.nextSibling;\n    prevStart++;\n  }\n\n  // Fast path for full replace\n  if (reusingNodes === 0) {\n    for(let i = newStart; i <= newEnd; i++) {\n      // Add extra nodes\n      parent.insertBefore(createFn(newData[i]), prevStartNode);\n    }\n    // Remove extra nodes\n    for(let i = 0; i < toDelete.length; i++) {\n      parent.removeChild(toDelete[i]);\n    }\n    return;\n  }\n\n  const longestSeq = longestPositiveIncreasingSubsequence(oldKeys, newStart);\n\n  let lisIdx = longestSeq.length - 1, tmpD;\n  for(let i = newEnd; i >= newStart; i--) {\n    if(longestSeq[lisIdx] === i) {\n      finalNode = nodes[oldKeys[i]];\n      makeEqual(finalNode, newData[i]);\n      lisIdx--;\n    } else {\n      if (oldKeys[i] === -1) {\n        tmpD = createFn(newData[i]);\n      } else {\n        tmpD = nodes[oldKeys[i]];\n        makeEqual(tmpD, newData[i]);\n      }\n      parent.insertBefore(tmpD, finalNode);\n      finalNode = tmpD;\n    }\n  }\n\n  for(let i = 0; i < toDelete.length; i++) {\n    parent.removeChild(toDelete[i]);\n  }\n}\n\n// Picked from\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L368\n\n// return an array of the indices of ns that comprise the longest increasing subsequence within ns\nfunction longestPositiveIncreasingSubsequence(ns, newStart) {\n  let seq = [],\n    is  = [],\n    l   = -1,\n    pre = new Array(ns.length);\n\n  for (let i = newStart, len = ns.length; i < len; i++) {\n    let n = ns[i];\n    if (n < 0) continue;\n    let j = findGreatestIndexLEQ(seq, n);\n    if (j !== -1) pre[i] = is[j];\n    if (j === l) {\n      l++;\n      seq[l] = n;\n      is[l]  = i;\n    } else if (n < seq[j + 1]) {\n      seq[j + 1] = n;\n      is[j + 1] = i;\n    }\n  }\n\n  for (let i = is[l]; l >= 0; i = pre[i], l--) {\n    seq[l] = i;\n  }\n\n  return seq;\n}\n\nfunction findGreatestIndexLEQ(seq, n) {\n  // invariant: lo is guaranteed to be index of a value <= n, hi to be >\n  // therefore, they actually start out of range: (-1, last + 1)\n  let lo = -1,\n    hi = seq.length;\n\n  // fast path for simple increasing sequences\n  if (hi > 0 && seq[hi - 1] <= n) return hi - 1;\n\n  while (hi - lo > 1) {\n    let mid = Math.floor((lo + hi) / 2);\n    if (seq[mid] > n) {\n      hi = mid;\n    } else {\n      lo = mid;\n    }\n  }\n\n  return lo;\n}\n\nmodule.exports = {\n  makeChildrenEqualKeyed,\n  longestPositiveIncreasingSubsequence\n};\n","const { OUTER_REGEX, STATE_REGEX } = require('./constants');\n\nfunction replacer(match) {\n  let f;\n  if (match.indexOf('return ') >= 0) {\n    f = match;\n  } else {\n    f = 'return ' + match;\n  }\n  try {\n    return new Function(f);\n  } catch(e) {\n    window.console.log(`Error processing binding: \\`${f}\\``);\n    return '';\n  }\n}\n\nfunction evaluate(fxn, el) {\n  try {\n    if (typeof fxn === 'string') return fxn;\n    else return fxn.call(el);\n  } catch(e) {\n    const str = fxn.toString();\n    window.console.log(`Error evaluating: \\`${str.slice(str.indexOf('{') + 1, str.lastIndexOf('}'))}\\` for element`, el);\n    window.console.error(e);\n  }\n}\n\nconst Bindings = {\n  getBindingFxns: (string) => {\n    const splitted = string.split(OUTER_REGEX), l = splitted.length, ret = [];\n    for (let i = 0; i < l; i++) {\n      if (splitted[i][0] === '$' && splitted[i][1] === '{') {\n        ret.push(replacer(splitted[i].slice(2, -1)));\n      } else if (splitted[i]) ret.push(splitted[i]);\n    }\n    if (ret.length === 1) return ret[0];\n    return ret;\n  },\n  getStringBindingFxn: (string) => {\n    const match = string.match(STATE_REGEX);\n    if (match) return match[1];\n    return Bindings.getBindingFxns(string);\n  },\n  evaluateBindings: (fxns, element) => {\n    if (typeof fxns === 'function') return evaluate(fxns, element);\n    return fxns.map(fxn => evaluate(fxn, element)).join('');\n  },\n  evaluate: evaluate,\n  replacer: replacer\n};\n\nmodule.exports = Bindings;\n","const { makeChildrenEqual } = require('./makeequal');\nconst { makeChildrenEqualKeyed } = require('./keyed');\nconst updateAttribute = require('./updateattribute');\nconst { evaluateBindings } = require('./bindings');\nconst { TEMPLATE, KEY_ATTR } = require('./constants');\n\nfunction update(element, stateMap) {\n  if (!element._refs) return false;\n  stateMap = stateMap || element.constructor.stateMap;\n  let data, dom, newValue;\n  // Update nodes\n  const l = element._refs.length;\n  for (let i = 0; i < l; i++) {\n    data = stateMap[i].ref;\n    dom = element._refs[i];\n\n    // Fast path for text nodes\n    if (data.type === 0) {\n      // state node\n      newValue = element.state[data.text];\n      if (dom.data != newValue) dom.data = newValue;\n      continue;\n    } else if (data.type === 1) {\n      // text node\n      newValue = evaluateBindings(data.text, element);\n      if (dom.data != newValue) dom.data = newValue;\n      continue;\n    }\n\n    // update attributes\n    if (data.attributes) {\n      for(let key in data.attributes) {\n        if (key !== 'events') {\n          if (data.attributes[key].type === 0) {\n            newValue = element.state[data.attributes[key].text];\n          } else {\n            newValue = evaluateBindings(data.attributes[key].text, element);\n          }\n          updateAttribute(dom, key, newValue);\n        } else {\n          if (!dom._sifrrEventSet) {\n            for(let event in data.attributes.events) {\n              dom[event] = evaluateBindings(data.attributes.events[event], element);\n            }\n            dom._root = element;\n            dom._sifrrEventSet = true;\n          }\n        }\n      }\n    }\n\n    if (data.text === undefined) continue;\n\n    // update element\n    newValue = evaluateBindings(data.text, element);\n\n    if (!newValue || newValue.length === 0) { dom.textContent = ''; }\n    if (data.type === 3) {\n      // repeat\n      let key;\n      // eslint-disable-next-line no-inner-declarations\n      if (data.keyed && (key = dom.getAttribute(KEY_ATTR))) {\n        makeChildrenEqualKeyed(dom, newValue, data.se.sifrrClone.bind(data.se), key);\n      } else makeChildrenEqual(dom, newValue, data.se.sifrrClone.bind(data.se));\n    } else {\n      // html node\n      let children, isNode = false;\n      if (Array.isArray(newValue)) {\n        children = newValue;\n      } else if (newValue.content && newValue.content.nodeType === 11) {\n        children = newValue.content.childNodes;\n        isNode = true;\n      } else if (newValue.nodeType) {\n        children = [newValue];\n      } else if (typeof newValue === 'string') {\n        const temp = TEMPLATE();\n        temp.innerHTML = newValue.toString();\n        children = temp.content.childNodes;\n        isNode = true;\n      } else {\n        children = Array.prototype.slice.call(newValue);\n      }\n      makeChildrenEqual(dom, children, undefined, isNode);\n    }\n  }\n}\n\nmodule.exports = update;\n","const template = require('./template');\nconst update = require('./update');\nconst { collect, create } = require('./ref');\nconst creator = require('./creator');\n\nfunction SimpleElement(content, defaultState = null) {\n  if (!content.nodeType && typeof content !== 'string') {\n    if (!content[0] || !content[0].nodeType) {\n      throw TypeError('First argument for SimpleElement should be of type string or DOM element');\n    }\n  }\n  const templ = template(content);\n  content = templ.content.firstElementChild || templ.content.firstChild;\n  // Already sifrr element\n  if (content.isSifrr || content.nodeName.indexOf('-') !== -1 ||\n    (content.getAttribute && content.getAttribute('is') && content.getAttribute('is').indexOf('-') !== -1)\n  ) {\n    if (!content.isSifrr) {\n      // Render custom element if not rendered\n      window.document.body.appendChild(content);\n      window.document.body.removeChild(content);\n    }\n    return content;\n  }\n  const stateMap = create(content, creator, defaultState);\n\n  const stateProps = {\n    get: function() { return this._state; },\n    set: function(v) {\n      Object.assign(this._state, v);\n      update(this, stateMap);\n    }\n  };\n\n  content.sifrrClone = function(newState) {\n    const clone = content.cloneNode(true);\n    clone._refs = collect(clone, stateMap, 'nextNode');\n    clone._state = Object.assign({}, defaultState, newState);\n    Object.defineProperty(clone, 'state', stateProps);\n    update(clone, stateMap);\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","const simpleElement = require('./simpleelement');\nconst { getBindingFxns } = require('./bindings');\nconst { KEY_ATTR } = require('./constants');\n\nmodule.exports = (sm, el, attr) => {\n  sm.type = 3;\n  let defaultState;\n  if (el.hasAttribute('data-sifrr-default-state')) defaultState = JSON.parse(el.getAttribute('data-sifrr-default-state'));\n  sm.se = simpleElement(el.childNodes, defaultState);\n  sm.text = getBindingFxns(el.getAttribute(attr));\n  sm.keyed = el.hasAttribute(KEY_ATTR);\n  el.textContent = '';\n  el.removeAttribute(attr);\n};\n","const { TEXT_NODE, COMMENT_NODE, ELEMENT_NODE, REPEAT_ATTR } = require('./constants');\nconst repeatref = require('./repeatref');\n// ref types:\n// 0: state\n// 1: text\n// 2: html\n// 3: arrayToDom\nconst { getBindingFxns, getStringBindingFxn } = require('./bindings');\nconst updateAttribute = require('./updateattribute');\n\nfunction creator(el, filter, defaultState) {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    const x = el.data;\n    if (x.indexOf('${') > -1) {\n      const binding = getStringBindingFxn(x.trim());\n      if (typeof binding !== 'string') {\n        // text node\n        return {\n          type: 1,\n          text: binding\n        };\n      } else {\n        if (defaultState) el.data = defaultState[binding];\n        // state node\n        return {\n          type: 0,\n          text: binding\n        };\n      }\n    }\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (filter(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.type = 2;\n        sm.text = getBindingFxns(innerHTML.replace(/<!--((?:(?!-->).)+)-->/g, '$1').trim());\n      }\n    } else if (el.hasAttribute(REPEAT_ATTR)) {\n      repeatref(sm, el, REPEAT_ATTR);\n    }\n    // attributes\n    const attrs = el.attributes, l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '_') {\n        attrStateMap.events[attribute.name] = getBindingFxns(attribute.value);\n      } else if (attribute.value.indexOf('${') >= 0) {\n        // Don't treat style differently because same performance https://jsperf.com/style-property-vs-style-attribute/2\n        const binding = getStringBindingFxn(attribute.value);\n        if (typeof binding !== 'string') {\n          // text attr\n          attrStateMap[attribute.name] = {\n            type: 1,\n            text: binding\n          };\n        } else {\n          // state attr\n          attrStateMap[attribute.name] = {\n            type: 0,\n            text: binding\n          };\n          if (defaultState) updateAttribute(el, attribute.name, defaultState[binding]);\n        }\n      }\n    }\n    if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n}\n\nmodule.exports = creator;\n","const template = require('./template');\n\nclass Loader {\n  constructor(elemName, url) {\n    if (!window.fetch) throw Error('Sifrr.Dom.load requires Fetch API to work.');\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.url = url;\n  }\n\n  get html() {\n    if (this._html) return this._html;\n    Loader.add(this.elementName, this);\n    const me = this;\n    this._html = window.fetch(this.htmlUrl)\n      .then((resp) => resp.text())\n      .then((file) => template(file).content).then((content) => {\n        me.template = content.querySelector('template');\n        return content;\n      });\n    return this._html;\n  }\n\n  get js() {\n    if (this._js) return this._js;\n    Loader.add(this.elementName, this);\n    this._js = window.fetch(this.jsUrl)\n      .then((resp) => resp.text());\n    return this._js;\n  }\n\n  get htmlUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  get jsUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.js`;\n  }\n\n  executeScripts(js) {\n    if (this._executed) throw Error(`'${this.elementName}' element's javascript was already executed`);\n    this._executed = true;\n    if (!js) {\n      return this.executeHTMLScripts();\n    } else {\n      return this.js.then((script) => {\n        new Function(script + `\\n //# sourceURL=${this.jsUrl}`).call();\n      }).catch((e) => {\n        window.console.error(e);\n        window.console.log(`JS file for '${this.elementName}' gave error. Trying to get html file.`);\n        return this.executeHTMLScripts();\n      });\n    }\n  }\n\n  executeHTMLScripts() {\n    return this.html.then((content) => {\n      content.querySelectorAll('script').forEach((script) => {\n        if (script.src) {\n          // Appending script node directly doesn't work\n          const newScript = require('./constants').SCRIPT();\n          newScript.src = script.src;\n          newScript.type = script.type;\n          window.document.body.appendChild(newScript);\n        } else {\n          new Function(script.text + `\\n //# sourceURL=${this.htmlUrl}`).call({ currentTempate: content.querySelector('template') });\n        }\n      });\n    });\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\n\nmodule.exports = Loader;\n","const { collect, create } = require('./ref');\nconst creator = require('./creator');\nconst update = require('./update');\nconst Loader = require('./loader');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      return (Loader.all[this.elementName] || { template: false }).template;\n    }\n\n    static get ctemp() {\n      if (this._ctemp) return this._ctemp;\n      this._ctemp = this.template;\n      if (this._ctemp) {\n        if (this.useShadowRoot && window.ShadyCSS && !window.ShadyCSS.nativeShadow) {\n          window.ShadyCSS.prepareTemplate(this._ctemp, this.elementName);\n        }\n        this.stateMap = create(this._ctemp.content, creator, this.defaultState);\n      }\n      return this._ctemp;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static get useShadowRoot() {\n      return this.useSR;\n    }\n\n    constructor() {\n      super();\n      if (this.constructor.ctemp) {\n        this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const content = this.constructor.ctemp.content.cloneNode(true);\n        this._refs = collect(content, this.constructor.stateMap);\n        if (this.constructor.useShadowRoot) {\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n        } else {\n          this.__content = content;\n        }\n      }\n    }\n\n    connectedCallback() {\n      if(this.__content) {\n        this.textContent = '';\n        this.appendChild(this.__content);\n        delete this.__content;\n      }\n      if (!this.hasAttribute('data-sifrr-state')) this.update();\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JSON.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      return this._state;\n    }\n\n    set state(v) {\n      if (this._state !== v) Object.assign(this._state, v);\n      this.update();\n      this.onStateChange();\n    }\n\n    onStateChange() {}\n\n    update() {\n      update(this);\n      this.onUpdate();\n    }\n\n    onUpdate() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(state) {\n      const clone = this.cloneNode(false);\n      clone._state = Object.assign({}, this.constructor.defaultState, state);\n      return clone;\n    }\n\n    clearState() {\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","// Inspired from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\nconst opts = { capture: true, passive: true };\n\nconst nativeToSyntheticEvent = (e, name) => {\n  const target = e.composedPath ? e.composedPath()[0] : e.target;\n  let dom = target;\n  while(dom) {\n    const eventHandler = dom[`_${name}`] || (dom.hasAttribute ? dom.getAttribute(`_${name}`) : null);\n    if (typeof eventHandler === 'function') {\n      eventHandler.call(dom._root || window, e, target);\n    } else if (typeof eventHandler === 'string') {\n      new Function('event', 'target', eventHandler).call(dom._root || window, event, target);\n    }\n    cssMatchEvent(e, name, dom, target);\n    dom = dom.parentNode || dom.host;\n  }\n};\n\nconst cssMatchEvent = (e, name, dom, target) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e, target, dom));\n  }\n  Promise.resolve((() => {\n    for (let css in SYNTHETIC_EVENTS[name]) {\n      if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n    }\n  })());\n};\n\nconst Event = {\n  all: SYNTHETIC_EVENTS,\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.addEventListener(name, event => nativeToSyntheticEvent(event, name), opts);\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    if (typeof el === 'string') el = document.querySelector(el);\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  },\n  opts,\n  nativeToSyntheticEvent\n};\n\nmodule.exports = Event;\n","// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\nSifrrDom.loadingElements = [];\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.twoWayBind = require('./dom/twowaybind');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\nSifrrDom.makeChildrenEqual = require('./dom/makeequal').makeChildrenEqual;\nSifrrDom.makeChildrenEqualKeyed = require('./dom/keyed').makeChildrenEqualKeyed;\nSifrrDom.makeEqual = require('./dom/makeequal').makeEqual;\n\n// HTML to template\nSifrrDom.template = require('./dom/template');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useSR = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    throw Error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    throw Error(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error.message}`, error.trace);\n      return false;\n    }\n  }\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  HTMLElement.prototype.$ = HTMLElement.prototype.querySelector;\n  HTMLElement.prototype.$$ = HTMLElement.prototype.querySelectorAll;\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  if (typeof SifrrDom.config.baseUrl !== 'string') throw Error('baseUrl should be a string');\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.twoWayBind);\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, { url, js = true } = {}) {\n  if (window.customElements.get(elemName)) { return Promise.resolve(window.console.warn(`Error loading Element: ${elemName} - Custom Element with this name is already defined.`)); }\n  let loader = new SifrrDom.Loader(elemName, url);\n  const wd = customElements.whenDefined(elemName);\n  SifrrDom.loadingElements.push(wd);\n  return loader.executeScripts(js).then(() => {\n    if (!window.customElements.get(elemName)) {\n      window.console.warn(`Executing '${elemName}' file didn't register the element. Ignore if you are registering element in a promise or async function.`);\n      SifrrDom.loadingElements.splice(SifrrDom.loadingElements.indexOf(wd), 1);\n    }\n  }).catch(e => {\n    SifrrDom.loadingElements.splice(SifrrDom.loadingElements.indexOf(wd), 1);\n    throw e;\n  });\n};\n\nSifrrDom.loading = () => {\n  return Promise.all(SifrrDom.loadingElements);\n};\n\nmodule.exports = SifrrDom;\n","module.exports = (e) => {\n  const target = e.composedPath ? e.composedPath()[0] : e.target;\n  if (!target.hasAttribute('data-sifrr-bind') || target._root === null) return;\n  const value = target.value || target.textContent;\n  let state = {};\n  if (!target._root) {\n    let root;\n    root = target;\n    while(root && !root.isSifrr) root = root.parentNode || root.host;\n    if (root) target._root = root;\n    else target._root = null;\n  }\n  state[target.getAttribute('data-sifrr-bind')] = value;\n  if (target._root) target._root.state = state;\n};\n"],"names":["temp","window","document","createElement","script","TEMPLATE","cloneNode","SCRIPT","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","OUTER_REGEX","RegExp","STATE_REGEX","HTML_ATTR","REPEAT_ATTR","KEY_ATTR","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","require$$0","isHtml","el","hasAttribute","nextFilteredNode","node","this","currentNode","nextSibling","parentNode","nextNode","collect","element","stateMap","next","refs","l","length","n","i","idx","push","create","fxn","passedArg","ref","ntr","indices","nodeType","data","trim","remove","str","extra","tmp","Array","from","forEach","s","content","appendChild","String","raw","replace","innerHTML","name","newValue","removeAttribute","className","getAttribute","setAttribute","shallowEqual","a","b","key","require$$1","makeChildrenEqual","parent","newChildren","createFn","isNode","newL","oldL","childNodes","removeChild","lastChild","item","head","firstChild","curNewChild","makeEqual","oldNode","newNode","_state","state","nodeName","replaceWith","oldAttrs","attributes","newAttrs","updateAttribute","value","j","undefined","longestPositiveIncreasingSubsequence","ns","newStart","seq","is","pre","len","findGreatestIndexLEQ","lo","hi","mid","Math","floor","makeChildrenEqualKeyed","newData","finalNode","_node","prevStart","loop","prevEnd","newEnd","prevStartNode","prevEndNode","fixes","previousSibling","insertBefore","oldKeys","newKeys","Map","nodes","toDelete","set","reusingNodes","has","get","longestSeq","tmpD","lisIdx","replacer","match","f","indexOf","Function","e","console","log","evaluate","call","toString","slice","lastIndexOf","error","Bindings","getBindingFxns","string","splitted","split","ret","getStringBindingFxn","evaluateBindings","fxns","map","join","require$$2","require$$3","_refs","dom","constructor","type","text","_sifrrEventSet","event","events","_root","textContent","keyed","se","sifrrClone","bind","children","isArray","prototype","defaultState","TypeError","templ","template","firstElementChild","isSifrr","body","creator","stateProps","v","Object","assign","update","newState","clone","defineProperty","sm","attr","JSON","parse","simpleElement","filter","x","binding","repeatref","attrs","attrStateMap","attribute","keys","Loader","elemName","url","fetch","Error","all","elementName","_html","add","me","htmlUrl","then","resp","file","querySelector","_js","jsUrl","Sifrr","Dom","config","baseUrl","executeScripts","js","_executed","catch","executeHTMLScripts","html","querySelectorAll","src","newScript","currentTempate","instance","_all","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","useShadowRoot","ShadyCSS","nativeShadow","prepareTemplate","toLowerCase","useSR","ctemp","attachShadow","mode","shadowRoot","__content","connectedCallback","onConnect","disconnectedCallback","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","onAttributeChange","onStateChange","onUpdate","clearState","$","args","sr","$$","HTMLElement","SYNTHETIC_EVENTS","opts","capture","passive","nativeToSyntheticEvent","target","composedPath","eventHandler","cssMatchEvent","host","callEach","Promise","resolve","css","matches","addEventListener","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","twoWayBind","root","SimpleElement","require$$4","require$$5","require$$6","require$$7","register","customElements","define","elements","message","trace","setup","load","warn","loader","wd","whenDefined","loadingElements","loading"],"mappings":"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"}
=======
{"version":3,"file":"sifrr.dom.min.js","sources":["../src/dom/constants.js","../src/dom/ref.js","../src/dom/template.js","../src/dom/updateattribute.js","../src/utils/json.js","../src/dom/makeequal.js","../src/dom/keyed.js","../src/dom/bindings.js","../src/dom/update.js","../src/dom/simpleelement.js","../src/dom/repeatref.js","../src/dom/creator.js","../src/dom/loader.js","../src/dom/element.js","../src/dom/event.js","../src/sifrr.dom.js","../src/dom/twowaybind.js"],"sourcesContent":["const temp = window.document.createElement('template');\nconst script = window.document.createElement('script');\nconst reg = '(\\\\${(?:(?:[^{}$]|{(?:[^{}$])*})*)})';\n\nmodule.exports = {\n  TEMPLATE: () => temp.cloneNode(false),\n  SCRIPT: () => script.cloneNode(false),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1,\n  OUTER_REGEX: new RegExp(reg, 'g'),\n  STATE_REGEX: /^\\$\\{this\\.state\\.([a-zA-Z0-9_$]+)\\}$/,\n  HTML_ATTR: 'data-sifrr-html',\n  REPEAT_ATTR: 'data-sifrr-repeat',\n  KEY_ATTR: 'data-sifrr-key'\n};\n","// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\nconst { HTML_ATTR, TEXT_NODE } = require('./constants');\n\nfunction isHtml(el) {\n  return el.hasAttribute && el.hasAttribute(HTML_ATTR);\n}\n\nTREE_WALKER.nextFilteredNode = function() {\n  let node = this.currentNode;\n  if (isHtml(node)){\n    node = this.nextSibling() || (this.parentNode(), this.nextSibling());\n  } else node = this.nextNode();\n  return node;\n};\n\nfunction collect(element, stateMap, next = 'nextFilteredNode') {\n  const refs = [], l = stateMap.length;\n  let node = TREE_WALKER.currentNode = element, n;\n  for (let i = 0; i < l; i++) {\n    n = stateMap[i].idx;\n    while(--n) {\n      node = TREE_WALKER[next]();\n    }\n    refs.push(node);\n  }\n  return refs;\n}\n\nfunction create(node, fxn, passedArg) {\n  let indices = [], ref, idx = 0, ntr;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    if (node.nodeType === TEXT_NODE && node.data.trim() === '') {\n      ntr = node;\n      node = TREE_WALKER.nextFilteredNode(node);\n      ntr.remove();\n    } else {\n      // eslint-disable-next-line no-cond-assign\n      if (ref = fxn(node, isHtml, passedArg)) {\n        indices.push({ idx: idx+1, ref });\n        idx = 1;\n      } else {\n        idx++;\n      }\n      node = TREE_WALKER.nextFilteredNode(node);\n    }\n  }\n  return indices;\n}\n\nmodule.exports = {\n  collect,\n  create\n};\n","const { TEMPLATE } = require('./constants');\n\nmodule.exports = (str, ...extra) => {\n  const tmp = TEMPLATE();\n  if (typeof str === 'string') {\n    // nothing\n  } else if (str[0] && typeof str[0] === 'string') {\n    str = String.raw(str, ...extra);\n  } else if (str[0]) {\n    Array.from(str).forEach((s) => {\n      tmp.content.appendChild(s);\n    });\n    return tmp;\n  } else if (str.nodeType && !str.content) {\n    tmp.content.appendChild(str);\n    return tmp;\n  } else {\n    return str;\n  }\n  str = str\n    .replace(/(\\\\)?\\$(\\\\)?\\{/g, '${');\n  tmp.innerHTML = str;\n  return tmp;\n};\n","// Attribute related gotchas\nmodule.exports = (element, name, newValue) => {\n  if (newValue === false || newValue === null || newValue === undefined) element.hasAttribute(name) && element.removeAttribute(name);\n  else if (name === 'class') {\n    element.className = newValue;\n  } else if (name === 'id' || name === 'value') {\n    element[name] = newValue;\n  } else if (element.getAttribute(name) !== newValue) {\n    element.setAttribute(name, newValue);\n  }\n};\n","const Json = {\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nmodule.exports = Json;\n","const updateAttribute = require('./updateattribute');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\nfunction makeChildrenEqual(parent, newChildren, createFn, isNode = false) {\n  const newL = newChildren.length, oldL = parent.childNodes.length;\n  // Lesser children now\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  }\n\n  let item, head = parent.firstChild, curNewChild = newChildren[0];\n  if (isNode) {\n    // Make old children equal to new children\n    while(head) {\n      item = curNewChild.nextSibling;\n      head = makeEqual(head, curNewChild).nextSibling;\n      curNewChild = item;\n    }\n    // Add extra new children\n    while(curNewChild) {\n      item = curNewChild.nextSibling;\n      parent.appendChild(curNewChild);\n      curNewChild = item;\n    }\n  } else {\n    let i = 0;\n    // Make old children equal to new children\n    while(head) {\n      head = makeEqual(head, newChildren[i]).nextSibling;\n      i++;\n    }\n    // Add extra new children\n    while(i < newL) {\n      item = newChildren[i];\n      parent.appendChild(item.nodeType ? item : createFn(item));\n      i++;\n    }\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (!newNode.nodeType) {\n    if (!shallowEqual(oldNode._state, newNode)) oldNode.state = newNode;\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  // Text or comment node\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  const oldAttrs = oldNode.attributes, newAttrs = newNode.attributes;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    if (!newNode.hasAttribute(oldAttrs[j].name)) oldNode.removeAttribute(oldAttrs[j].name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, newNode.childNodes, undefined, true);\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","/* eslint-disable max-lines */\nconst { makeEqual } = require('./makeequal');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reconcile.js\n// This is almost straightforward implementation of reconcillation algorithm\n// based on ivi documentation:\n// https://github.com/localvoid/ivi/blob/2c81ead934b9128e092cc2a5ef2d3cabc73cb5dd/packages/ivi/src/vdom/implementation.ts#L1366\n// With some fast paths from Surplus implementation:\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L86\n//\n// How this implementation differs from others, is that it's working with data directly,\n// without maintaining nodes arrays, and uses manipukates dom only when required\n\nfunction makeChildrenEqualKeyed(parent, newData, createFn, key) {\n  const newL = newData.length, oldL = parent.childNodes.length;\n\n  if (oldL === 0) {\n    for(let i = 0; i < newL; i++) {\n      parent.appendChild(createFn(newData[i]));\n    }\n    return;\n  }\n\n  // reconciliation\n  let prevStart = 0,\n    newStart = 0,\n    loop = true,\n    prevEnd = oldL - 1, newEnd = newL - 1,\n    prevStartNode = parent.firstChild,\n    prevEndNode = parent.lastChild,\n    finalNode,\n    a, b, _node;\n\n  fixes: while(loop) {\n    loop = false;\n\n    // Skip prefix\n    a = prevStartNode.state, b = newData[newStart];\n    while(a[key] === b[key]) {\n      makeEqual(prevStartNode, b);\n      prevStart++;\n      prevStartNode = prevStartNode.nextSibling;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevStartNode.state, b = newData[newStart];\n    }\n\n    // Skip suffix\n    a = prevEndNode.state, b = newData[newEnd];\n    while(a[key] === b[key]) {\n      makeEqual(prevEndNode, b);\n      prevEnd--;\n      finalNode = prevEndNode;\n      prevEndNode = prevEndNode.previousSibling;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevEndNode.state, b = newData[newEnd];\n    }\n\n    // Fast path to swap backward\n    a = prevEndNode.state, b = newData[newStart];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevEndNode, b);\n      _node = prevEndNode.previousSibling;\n      parent.insertBefore(prevEndNode, prevStartNode);\n      prevEndNode = _node;\n      prevEnd--;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevEndNode.state, b = newData[newStart];\n    }\n\n    // Fast path to swap forward\n    a = prevStartNode.state, b = newData[newEnd];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevStartNode, b);\n      _node = prevStartNode.nextSibling;\n      parent.insertBefore(prevStartNode, prevEndNode.nextSibling);\n      finalNode = prevStartNode;\n      prevEndNode = prevStartNode.previousSibling;\n      prevStartNode = _node;\n      prevStart++;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevStartNode.state, b = newData[newEnd];\n    }\n  }\n\n  // Fast path for shrink\n  if (newEnd < newStart) {\n    if (prevStart <= prevEnd) {\n      let next;\n      while(prevStart <= prevEnd) {\n        if (prevEnd === 0) {\n          parent.removeChild(prevEndNode);\n        } else {\n          next = prevEndNode.previousSibling;\n          parent.removeChild(prevEndNode);\n          prevEndNode = next;\n        }\n        prevEnd--;\n      }\n    }\n    return;\n  }\n\n  // Fast path for add\n  if (prevEnd < prevStart) {\n    if (newStart <= newEnd) {\n      while(newStart <= newEnd) {\n        _node = createFn(newData[newStart]);\n        parent.insertBefore(_node, prevEndNode.nextSibling);\n        prevEndNode = _node;\n        newStart++;\n      }\n    }\n    return;\n  }\n\n  const oldKeys = new Array(newEnd + 1 - newStart), newKeys = new Map(), nodes = [], toDelete = [];\n\n  for(let i = newStart; i <= newEnd; i++) {\n    // Positions for reusing nodes from current DOM state\n    oldKeys[i] = -1;\n    // Index to resolve position from current to new\n    newKeys.set(newData[i][key], i);\n  }\n\n  let reusingNodes = 0;\n  while (prevStart <= prevEnd) {\n    if (newKeys.has(prevStartNode.state[key])) {\n      oldKeys[newKeys.get(prevStartNode.state[key])] = prevStart;\n      reusingNodes++;\n    } else {\n      toDelete.push(prevStartNode);\n    }\n    nodes[prevStart] = prevStartNode;\n    prevStartNode = prevStartNode.nextSibling;\n    prevStart++;\n  }\n\n  // Fast path for full replace\n  if (reusingNodes === 0) {\n    for(let i = newStart; i <= newEnd; i++) {\n      // Add extra nodes\n      parent.insertBefore(createFn(newData[i]), prevStartNode);\n    }\n    // Remove extra nodes\n    for(let i = 0; i < toDelete.length; i++) {\n      parent.removeChild(toDelete[i]);\n    }\n    return;\n  }\n\n  const longestSeq = longestPositiveIncreasingSubsequence(oldKeys, newStart);\n\n  let lisIdx = longestSeq.length - 1, tmpD;\n  for(let i = newEnd; i >= newStart; i--) {\n    if(longestSeq[lisIdx] === i) {\n      finalNode = nodes[oldKeys[i]];\n      makeEqual(finalNode, newData[i]);\n      lisIdx--;\n    } else {\n      if (oldKeys[i] === -1) {\n        tmpD = createFn(newData[i]);\n      } else {\n        tmpD = nodes[oldKeys[i]];\n        makeEqual(tmpD, newData[i]);\n      }\n      parent.insertBefore(tmpD, finalNode);\n      finalNode = tmpD;\n    }\n  }\n\n  for(let i = 0; i < toDelete.length; i++) {\n    parent.removeChild(toDelete[i]);\n  }\n}\n\n// Picked from\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L368\n\n// return an array of the indices of ns that comprise the longest increasing subsequence within ns\nfunction longestPositiveIncreasingSubsequence(ns, newStart) {\n  let seq = [],\n    is  = [],\n    l   = -1,\n    pre = new Array(ns.length);\n\n  for (let i = newStart, len = ns.length; i < len; i++) {\n    let n = ns[i];\n    if (n < 0) continue;\n    let j = findGreatestIndexLEQ(seq, n);\n    if (j !== -1) pre[i] = is[j];\n    if (j === l) {\n      l++;\n      seq[l] = n;\n      is[l]  = i;\n    } else if (n < seq[j + 1]) {\n      seq[j + 1] = n;\n      is[j + 1] = i;\n    }\n  }\n\n  for (let i = is[l]; l >= 0; i = pre[i], l--) {\n    seq[l] = i;\n  }\n\n  return seq;\n}\n\nfunction findGreatestIndexLEQ(seq, n) {\n  // invariant: lo is guaranteed to be index of a value <= n, hi to be >\n  // therefore, they actually start out of range: (-1, last + 1)\n  let lo = -1,\n    hi = seq.length;\n\n  // fast path for simple increasing sequences\n  if (hi > 0 && seq[hi - 1] <= n) return hi - 1;\n\n  while (hi - lo > 1) {\n    let mid = Math.floor((lo + hi) / 2);\n    if (seq[mid] > n) {\n      hi = mid;\n    } else {\n      lo = mid;\n    }\n  }\n\n  return lo;\n}\n\nmodule.exports = {\n  makeChildrenEqualKeyed,\n  longestPositiveIncreasingSubsequence\n};\n","const { OUTER_REGEX, STATE_REGEX } = require('./constants');\n\nfunction replacer(match) {\n  let f;\n  if (match.indexOf('return ') >= 0) {\n    f = match;\n  } else {\n    f = 'return ' + match;\n  }\n  try {\n    return new Function(f);\n  } catch(e) {\n    window.console.log(`Error processing binding: \\`${f}\\``);\n    return '';\n  }\n}\n\nfunction evaluate(fxn, el) {\n  try {\n    if (typeof fxn === 'string') return fxn;\n    else return fxn.call(el);\n  } catch(e) {\n    const str = fxn.toString();\n    window.console.log(`Error evaluating: \\`${str.slice(str.indexOf('{') + 1, str.lastIndexOf('}'))}\\` for element`, el);\n    window.console.error(e);\n  }\n}\n\nconst Bindings = {\n  getBindingFxns: (string) => {\n    const splitted = string.split(OUTER_REGEX), l = splitted.length, ret = [];\n    for (let i = 0; i < l; i++) {\n      if (splitted[i][0] === '$' && splitted[i][1] === '{') {\n        ret.push(replacer(splitted[i].slice(2, -1)));\n      } else if (splitted[i]) ret.push(splitted[i]);\n    }\n    if (ret.length === 1) return ret[0];\n    return ret;\n  },\n  getStringBindingFxn: (string) => {\n    const match = string.match(STATE_REGEX);\n    if (match) return match[1];\n    return Bindings.getBindingFxns(string);\n  },\n  evaluateBindings: (fxns, element) => {\n    if (typeof fxns === 'function') return evaluate(fxns, element);\n    return fxns.map(fxn => evaluate(fxn, element)).join('');\n  },\n  evaluate: evaluate,\n  replacer: replacer\n};\n\nmodule.exports = Bindings;\n","const { makeChildrenEqual } = require('./makeequal');\nconst { makeChildrenEqualKeyed } = require('./keyed');\nconst updateAttribute = require('./updateattribute');\nconst { evaluateBindings } = require('./bindings');\nconst { TEMPLATE, KEY_ATTR } = require('./constants');\n\nfunction update(element, stateMap) {\n  if (!element._refs) return false;\n  stateMap = stateMap || element.constructor.stateMap;\n  let data, dom, newValue;\n  // Update nodes\n  const l = element._refs.length;\n  for (let i = 0; i < l; i++) {\n    data = stateMap[i].ref;\n    dom = element._refs[i];\n\n    // Fast path for text nodes\n    if (data.type === 0) {\n      // state node\n      newValue = element.state[data.text];\n      if (dom.data != newValue) dom.data = newValue;\n      continue;\n    } else if (data.type === 1) {\n      // text node\n      newValue = evaluateBindings(data.text, element);\n      if (dom.data != newValue) dom.data = newValue;\n      continue;\n    }\n\n    // update attributes\n    if (data.attributes) {\n      for(let key in data.attributes) {\n        if (key !== 'events') {\n          if (data.attributes[key].type === 0) {\n            newValue = element.state[data.attributes[key].text];\n          } else {\n            newValue = evaluateBindings(data.attributes[key].text, element);\n          }\n          updateAttribute(dom, key, newValue);\n        } else {\n          if (!dom._sifrrEventSet) {\n            for(let event in data.attributes.events) {\n              dom[event] = evaluateBindings(data.attributes.events[event], element);\n            }\n            dom._root = element;\n            dom._sifrrEventSet = true;\n          }\n        }\n      }\n    }\n\n    if (data.text === undefined) continue;\n\n    // update element\n    newValue = evaluateBindings(data.text, element);\n\n    if (!newValue || newValue.length === 0) { dom.textContent = ''; }\n    if (data.type === 3) {\n      // repeat\n      let key;\n      // eslint-disable-next-line no-inner-declarations\n      if (data.keyed && (key = dom.getAttribute(KEY_ATTR))) {\n        makeChildrenEqualKeyed(dom, newValue, data.se.sifrrClone, key);\n      } else makeChildrenEqual(dom, newValue, data.se.sifrrClone);\n    } else {\n      // html node\n      let children, isNode = false;\n      if (Array.isArray(newValue)) {\n        children = newValue;\n      } else if (newValue.content && newValue.content.nodeType === 11) {\n        children = newValue.content.childNodes;\n        isNode = true;\n      } else if (newValue.nodeType) {\n        children = [newValue];\n      } else if (typeof newValue === 'string') {\n        const temp = TEMPLATE();\n        temp.innerHTML = newValue.toString();\n        children = temp.content.childNodes;\n        isNode = true;\n      } else {\n        children = Array.prototype.slice.call(newValue);\n      }\n      makeChildrenEqual(dom, children, undefined, isNode);\n    }\n  }\n}\n\nmodule.exports = update;\n","const template = require('./template');\nconst update = require('./update');\nconst { collect, create } = require('./ref');\nconst creator = require('./creator');\n\nfunction SimpleElement(content, defaultState = null) {\n  if (!content.nodeType && typeof content !== 'string') {\n    if (!content[0] || !content[0].nodeType) {\n      throw TypeError('First argument for SimpleElement should be of type string or DOM element');\n    }\n  }\n  const templ = template(content);\n  content = templ.content.firstElementChild || templ.content.firstChild;\n  // Already sifrr element\n  if (content.isSifrr || content.nodeName.indexOf('-') !== -1 ||\n    (content.getAttribute && content.getAttribute('is') && content.getAttribute('is').indexOf('-') !== -1)\n  ) {\n    if (!content.isSifrr) {\n      // Render custom element if not rendered\n      window.document.body.appendChild(content);\n      window.document.body.removeChild(content);\n    }\n    return content;\n  }\n  const stateMap = create(content, creator, defaultState);\n\n  const stateProps = {\n    get: function() { return this._state; },\n    set: function(v) {\n      Object.assign(this._state, v);\n      update(this, stateMap);\n    }\n  };\n\n  content.sifrrClone = function(newState) {\n    const clone = content.cloneNode(true);\n    clone._refs = collect(clone, stateMap, 'nextNode');\n    clone._state = Object.assign({}, defaultState, newState);\n    Object.defineProperty(clone, 'state', stateProps);\n    update(clone, stateMap);\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","const simpleElement = require('./simpleelement');\nconst { getBindingFxns } = require('./bindings');\nconst { KEY_ATTR } = require('./constants');\n\nmodule.exports = (sm, el, attr) => {\n  sm.type = 3;\n  let defaultState;\n  if (el.hasAttribute('data-sifrr-default-state')) defaultState = JSON.parse(el.getAttribute('data-sifrr-default-state'));\n  sm.se = simpleElement(el.childNodes, defaultState);\n  sm.text = getBindingFxns(el.getAttribute(attr));\n  sm.keyed = el.hasAttribute(KEY_ATTR);\n  el.textContent = '';\n  el.removeAttribute(attr);\n};\n","const { TEXT_NODE, COMMENT_NODE, ELEMENT_NODE, REPEAT_ATTR } = require('./constants');\nconst repeatref = require('./repeatref');\n// ref types:\n// 0: state\n// 1: text\n// 2: html\n// 3: arrayToDom\nconst { getBindingFxns, getStringBindingFxn } = require('./bindings');\nconst updateAttribute = require('./updateattribute');\n\nfunction creator(el, filter, defaultState) {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    const x = el.data;\n    if (x.indexOf('${') > -1) {\n      const binding = getStringBindingFxn(x.trim());\n      if (typeof binding !== 'string') {\n        // text node\n        return {\n          type: 1,\n          text: binding\n        };\n      } else {\n        if (defaultState) el.data = defaultState[binding];\n        // state node\n        return {\n          type: 0,\n          text: binding\n        };\n      }\n    }\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (filter(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.type = 2;\n        sm.text = getBindingFxns(innerHTML.replace(/<!--((?:(?!-->).)+)-->/g, '$1').trim());\n      }\n    } else if (el.hasAttribute(REPEAT_ATTR)) {\n      repeatref(sm, el, REPEAT_ATTR);\n    }\n    // attributes\n    const attrs = el.attributes, l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '_') {\n        attrStateMap.events[attribute.name] = getBindingFxns(attribute.value);\n      } else if (attribute.value.indexOf('${') >= 0) {\n        // Don't treat style differently because same performance https://jsperf.com/style-property-vs-style-attribute/2\n        const binding = getStringBindingFxn(attribute.value);\n        if (typeof binding !== 'string') {\n          // text attr\n          attrStateMap[attribute.name] = {\n            type: 1,\n            text: binding\n          };\n        } else {\n          // state attr\n          attrStateMap[attribute.name] = {\n            type: 0,\n            text: binding\n          };\n          if (defaultState) updateAttribute(el, attribute.name, defaultState[binding]);\n        }\n      }\n    }\n    if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n}\n\nmodule.exports = creator;\n","const template = require('./template');\n\nclass Loader {\n  constructor(elemName, url) {\n    if (!window.fetch) throw Error('Sifrr.Dom.load requires Fetch API to work.');\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.url = url;\n  }\n\n  get html() {\n    if (this._html) return this._html;\n    Loader.add(this.elementName, this);\n    const me = this;\n    this._html = window.fetch(this.htmlUrl)\n      .then((resp) => resp.text())\n      .then((file) => template(file).content).then((content) => {\n        me.template = content.querySelector('template');\n        return content;\n      });\n    return this._html;\n  }\n\n  get js() {\n    if (this._js) return this._js;\n    Loader.add(this.elementName, this);\n    this._js = window.fetch(this.jsUrl)\n      .then((resp) => resp.text());\n    return this._js;\n  }\n\n  get htmlUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  get jsUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.js`;\n  }\n\n  executeScripts(js) {\n    if (this._executed) throw Error(`'${this.elementName}' element's javascript was already executed`);\n    this._executed = true;\n    if (!js) {\n      return this.executeHTMLScripts();\n    } else {\n      return this.js.then((script) => {\n        new Function(script + `\\n //# sourceURL=${this.jsUrl}`).call();\n      }).catch((e) => {\n        window.console.error(e);\n        window.console.log(`JS file for '${this.elementName}' gave error. Trying to get html file.`);\n        return this.executeHTMLScripts();\n      });\n    }\n  }\n\n  executeHTMLScripts() {\n    return this.html.then((content) => {\n      content.querySelectorAll('script').forEach((script) => {\n        if (script.src) {\n          // Appending script node directly doesn't work\n          const newScript = require('./constants').SCRIPT();\n          newScript.src = script.src;\n          newScript.type = script.type;\n          window.document.body.appendChild(newScript);\n        } else {\n          new Function(script.text + `\\n //# sourceURL=${this.htmlUrl}`).call({ currentTempate: content.querySelector('template') });\n        }\n      });\n    });\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\n\nmodule.exports = Loader;\n","const { collect, create } = require('./ref');\nconst creator = require('./creator');\nconst update = require('./update');\nconst Loader = require('./loader');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      return (Loader.all[this.elementName] || { template: false }).template;\n    }\n\n    static get ctemp() {\n      if (this._ctemp) return this._ctemp;\n      this._ctemp = this.template;\n      if (this._ctemp) {\n        if (this.useShadowRoot && window.ShadyCSS && !window.ShadyCSS.nativeShadow) {\n          window.ShadyCSS.prepareTemplate(this._ctemp, this.elementName);\n        }\n        this.stateMap = create(this._ctemp.content, creator, this.defaultState);\n      }\n      return this._ctemp;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static get useShadowRoot() {\n      return this.useSR;\n    }\n\n    constructor() {\n      super();\n      if (this.constructor.ctemp) {\n        this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const content = this.constructor.ctemp.content.cloneNode(true);\n        this._refs = collect(content, this.constructor.stateMap);\n        if (this.constructor.useShadowRoot) {\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n        } else {\n          this.__content = content;\n        }\n      }\n    }\n\n    connectedCallback() {\n      if(this.__content) {\n        this.textContent = '';\n        this.appendChild(this.__content);\n        delete this.__content;\n      }\n      if (!this.hasAttribute('data-sifrr-state')) this.update();\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JSON.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      return this._state;\n    }\n\n    set state(v) {\n      if (this._state !== v) Object.assign(this._state, v);\n      this.update();\n      this.onStateChange();\n    }\n\n    onStateChange() {}\n\n    update() {\n      update(this);\n      this.onUpdate();\n    }\n\n    onUpdate() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(state) {\n      const clone = this.cloneNode(false);\n      clone._state = Object.assign({}, this.constructor.defaultState, state);\n      return clone;\n    }\n\n    clearState() {\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","// Inspired from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\nconst opts = { capture: true, passive: true };\n\nconst nativeToSyntheticEvent = (e, name) => {\n  const target = e.composedPath ? e.composedPath()[0] : e.target;\n  let dom = target;\n  while(dom) {\n    const eventHandler = dom[`_${name}`] || (dom.hasAttribute ? dom.getAttribute(`_${name}`) : null);\n    if (typeof eventHandler === 'function') {\n      eventHandler.call(dom._root || window, e, target);\n    } else if (typeof eventHandler === 'string') {\n      new Function('event', 'target', eventHandler).call(dom._root || window, event, target);\n    }\n    cssMatchEvent(e, name, dom, target);\n    dom = dom.parentNode || dom.host;\n  }\n};\n\nconst cssMatchEvent = (e, name, dom, target) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e, target, dom));\n  }\n  Promise.resolve((() => {\n    for (let css in SYNTHETIC_EVENTS[name]) {\n      if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n    }\n  })());\n};\n\nconst Event = {\n  all: SYNTHETIC_EVENTS,\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.addEventListener(name, event => nativeToSyntheticEvent(event, name), opts);\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    if (typeof el === 'string') el = document.querySelector(el);\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  },\n  opts,\n  nativeToSyntheticEvent\n};\n\nmodule.exports = Event;\n","// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\nSifrrDom.loadingElements = [];\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.twoWayBind = require('./dom/twowaybind');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\nSifrrDom.makeChildrenEqual = require('./dom/makeequal').makeChildrenEqual;\nSifrrDom.makeChildrenEqualKeyed = require('./dom/keyed').makeChildrenEqualKeyed;\nSifrrDom.makeEqual = require('./dom/makeequal').makeEqual;\n\n// HTML to template\nSifrrDom.template = require('./dom/template');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useSR = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    throw Error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    throw Error(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error.message}`, error.trace);\n      return false;\n    }\n  }\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  HTMLElement.prototype.$ = HTMLElement.prototype.querySelector;\n  HTMLElement.prototype.$$ = HTMLElement.prototype.querySelectorAll;\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  if (typeof SifrrDom.config.baseUrl !== 'string') throw Error('baseUrl should be a string');\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.twoWayBind);\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, { url, js = true } = {}) {\n  if (window.customElements.get(elemName)) { return Promise.resolve(window.console.warn(`Error loading Element: ${elemName} - Custom Element with this name is already defined.`)); }\n  let loader = new SifrrDom.Loader(elemName, url);\n  const wd = customElements.whenDefined(elemName);\n  SifrrDom.loadingElements.push(wd);\n  return loader.executeScripts(js).then(() => {\n    if (!window.customElements.get(elemName)) {\n      window.console.warn(`Executing '${elemName}' file didn't register the element. Ignore if you are registering element in a promise or async function.`);\n      SifrrDom.loadingElements.splice(SifrrDom.loadingElements.indexOf(wd), 1);\n    }\n  }).catch(e => {\n    SifrrDom.loadingElements.splice(SifrrDom.loadingElements.indexOf(wd), 1);\n    throw e;\n  });\n};\n\nSifrrDom.loading = () => {\n  return Promise.all(SifrrDom.loadingElements);\n};\n\nmodule.exports = SifrrDom;\n","module.exports = (e) => {\n  const target = e.composedPath ? e.composedPath()[0] : e.target;\n  if (!target.hasAttribute('data-sifrr-bind') || target._root === null) return;\n  const value = target.value || target.textContent;\n  let state = {};\n  if (!target._root) {\n    let root;\n    root = target;\n    while(root && !root.isSifrr) root = root.parentNode || root.host;\n    if (root) target._root = root;\n    else target._root = null;\n  }\n  state[target.getAttribute('data-sifrr-bind')] = value;\n  if (target._root) target._root.state = state;\n};\n"],"names":["temp","window","document","createElement","script","TEMPLATE","cloneNode","SCRIPT","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","OUTER_REGEX","RegExp","STATE_REGEX","HTML_ATTR","REPEAT_ATTR","KEY_ATTR","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","require$$0","isHtml","el","hasAttribute","nextFilteredNode","node","this","currentNode","nextSibling","parentNode","nextNode","collect","element","stateMap","next","refs","l","length","n","i","idx","push","create","fxn","passedArg","ref","ntr","indices","nodeType","data","trim","remove","str","extra","tmp","Array","from","forEach","s","content","appendChild","String","raw","replace","innerHTML","name","newValue","removeAttribute","className","getAttribute","setAttribute","shallowEqual","a","b","key","require$$1","makeChildrenEqual","parent","newChildren","createFn","isNode","newL","oldL","childNodes","removeChild","lastChild","item","head","firstChild","curNewChild","makeEqual","oldNode","newNode","_state","state","nodeName","replaceWith","oldAttrs","attributes","newAttrs","updateAttribute","value","j","undefined","longestPositiveIncreasingSubsequence","ns","newStart","seq","is","pre","len","findGreatestIndexLEQ","lo","hi","mid","Math","floor","makeChildrenEqualKeyed","newData","finalNode","_node","prevStart","loop","prevEnd","newEnd","prevStartNode","prevEndNode","fixes","previousSibling","insertBefore","oldKeys","newKeys","Map","nodes","toDelete","set","reusingNodes","has","get","longestSeq","tmpD","lisIdx","replacer","match","f","indexOf","Function","e","console","log","evaluate","call","toString","slice","lastIndexOf","error","Bindings","getBindingFxns","string","splitted","split","ret","getStringBindingFxn","evaluateBindings","fxns","map","join","require$$2","require$$3","_refs","dom","constructor","type","text","_sifrrEventSet","event","events","_root","textContent","keyed","se","sifrrClone","children","isArray","prototype","defaultState","TypeError","templ","template","firstElementChild","isSifrr","body","creator","stateProps","v","Object","assign","update","newState","clone","defineProperty","sm","attr","JSON","parse","simpleElement","filter","x","binding","repeatref","attrs","attrStateMap","attribute","keys","Loader","elemName","url","fetch","Error","all","elementName","_html","add","me","htmlUrl","then","resp","file","querySelector","_js","jsUrl","Sifrr","Dom","config","baseUrl","executeScripts","js","_executed","catch","executeHTMLScripts","html","querySelectorAll","src","newScript","currentTempate","instance","_all","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","useShadowRoot","ShadyCSS","nativeShadow","prepareTemplate","toLowerCase","useSR","ctemp","attachShadow","mode","shadowRoot","__content","connectedCallback","onConnect","disconnectedCallback","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","onAttributeChange","onStateChange","onUpdate","clearState","$","args","sr","$$","HTMLElement","SYNTHETIC_EVENTS","opts","capture","passive","nativeToSyntheticEvent","target","composedPath","eventHandler","cssMatchEvent","host","callEach","Promise","resolve","css","matches","addEventListener","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","twoWayBind","root","SimpleElement","require$$4","require$$5","require$$6","require$$7","register","customElements","define","elements","message","trace","setup","load","warn","loader","wd","whenDefined","loadingElements","loading"],"mappings":"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"}
>>>>>>> feat(sifrr-dom): expose makeequal fxns
