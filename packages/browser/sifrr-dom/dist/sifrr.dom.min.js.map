{"version":3,"file":"sifrr.dom.min.js","sources":["../src/dom/constants.js","../src/dom/ref.js","../src/dom/template.js","../src/dom/updateattribute.js","../src/utils/json.js","../src/dom/makeequal.js","../src/dom/keyed.js","../src/dom/bindings.js","../src/dom/update.js","../src/dom/simpleelement.js","../src/dom/repeatref.js","../src/dom/creator.js","../src/dom/parser.js","../src/dom/loader.js","../src/dom/element.js","../src/dom/event.js","../src/sifrr.dom.js"],"sourcesContent":["const temp = window.document.createElement('template');\nconst script = window.document.createElement('script');\nconst reg = '(\\\\${(?:(?:[^{}$]|{(?:[^{}$])*})*)})';\n\nmodule.exports = {\n  TEMPLATE: () => temp.cloneNode(false),\n  SCRIPT: () => script.cloneNode(false),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1,\n  OUTER_REGEX: new RegExp(reg, 'g'),\n  STATE_REGEX: /^\\$\\{this\\.state\\.([a-zA-Z0-9_$]+)\\}$/,\n  HTML_ATTR: 'data-sifrr-html',\n  REPEAT_ATTR: 'data-sifrr-repeat',\n  KEY_ATTR: 'data-sifrr-key'\n};\n","// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\nconst { HTML_ATTR } = require('./constants');\n\nfunction isHtml(el) {\n  return el.hasAttribute && el.hasAttribute(HTML_ATTR);\n}\n\nTREE_WALKER.nextFilteredNode = function() {\n  let node = this.currentNode;\n  if (isHtml(node)){\n    node = this.nextSibling() || (this.parentNode(), this.nextSibling());\n  } else node = this.nextNode();\n  return node;\n};\n\nTREE_WALKER.roll = function(n, next = 'nextFilteredNode') {\n  let node = this.currentNode;\n  while(--n) {\n    node = this[next]();\n  }\n  return node;\n};\n\nfunction collect(element, stateMap, next) {\n  const refs = [], l = stateMap.length;\n  TREE_WALKER.currentNode = element;\n  for (let i = 0; i < l; i++) {\n    refs.push(TREE_WALKER.roll(stateMap[i].idx, next));\n  }\n  return refs;\n}\n\nfunction create(node, fxn, passedArg) {\n  let indices = [], ref, idx = 0;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    // eslint-disable-next-line no-cond-assign\n    if (ref = fxn(node, isHtml, passedArg)) {\n      indices.push({ idx: idx+1, ref });\n      idx = 1;\n    } else {\n      idx++;\n    }\n    node = TREE_WALKER.nextFilteredNode(node);\n  }\n  return indices;\n}\n\nmodule.exports = {\n  collect,\n  create\n};\n","const { TEMPLATE } = require('./constants');\n\nmodule.exports = (str, ...extra) => {\n  const tmp = TEMPLATE();\n  if (typeof str === 'string') {\n    // nothing\n  } else if (str[0] && typeof str[0] === 'string') {\n    str = String.raw(str, ...extra);\n  } else if (str[0]) {\n    Array.from(str).forEach((s) => {\n      tmp.content.appendChild(s);\n    });\n    return tmp;\n  } else if (str.nodeType && !str.content) {\n    tmp.content.appendChild(str);\n    return tmp;\n  } else {\n    return str;\n  }\n  str = str\n    .replace(/>\\n+/g, '>')\n    .replace(/\\s+</g, '<')\n    .replace(/>\\s+/g, '>')\n    .replace(/(\\\\)?\\$(\\\\)?\\{/g, '${');\n  tmp.innerHTML = str;\n  return tmp;\n};\n","// Attribute related gotchas\nmodule.exports = (element, name, newValue) => {\n  if (newValue === false || newValue === null || newValue === undefined) element.hasAttribute(name) && element.removeAttribute(name);\n  else {\n    const fromValue = element.getAttribute(name);\n    if (fromValue !== newValue) {\n      if (name === 'class') element.className = newValue;\n      else element.setAttribute(name, newValue);\n    }\n  }\n\n  // select/input's value doesn't change on changing value attribute\n  if (name == 'value' && (element.nodeName == 'SELECT' || element.nodeName == 'INPUT')) element.value = newValue;\n};\n","const Json = {\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nmodule.exports = Json;\n","const updateAttribute = require('./updateattribute');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\nfunction makeChildrenEqual(parent, newChildren, createFn) {\n  const oldL = parent.childNodes.length, newL = newChildren.length;\n  // Fast path for clear\n  if (newL === 0) {\n    parent.textContent = '';\n    return;\n  }\n\n  // Lesser children now\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  }\n\n  // Make old children equal to new children\n  for(let i = 0, item, head = parent.firstChild; i < newL; i++) {\n    if (i < oldL) {\n      // make two nodes equal\n      item = newChildren[i];\n      head = makeEqual(head, item).nextSibling;\n    } else {\n      // No old node\n      while(i < newL) {\n        item = newChildren[i];\n        if (!item.nodeType) item = createFn(item);\n        parent.appendChild(item);\n        i++;\n      }\n    }\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (!newNode.nodeType) {\n    if (!shallowEqual(oldNode.state, newNode)) {\n      oldNode.state = newNode;\n    }\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  // Text or comment node\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  const oldAttrs = oldNode.attributes, newAttrs = newNode.attributes;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    if (!newNode.hasAttribute(oldAttrs[j].name)) oldNode.removeAttribute(oldAttrs[j].name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, Array.prototype.slice.call(newNode.childNodes));\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","/* eslint-disable max-lines */\nconst { makeEqual } = require('./makeequal');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reconcile.js\n// This is almost straightforward implementation of reconcillation algorithm\n// based on ivi documentation:\n// https://github.com/localvoid/ivi/blob/2c81ead934b9128e092cc2a5ef2d3cabc73cb5dd/packages/ivi/src/vdom/implementation.ts#L1366\n// With some fast paths from Surplus implementation:\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L86\n//\n// How this implementation differs from others, is that it's working with data directly,\n// without maintaining nodes arrays, and uses manipukates dom only when required\n\nfunction makeChildrenEqualKeyed(parent, newData, createFn, key) {\n  // Fast path for clear\n  const newL = newData.length;\n  if (newL === 0) {\n    parent.textContent = '';\n    return;\n  }\n\n  // Fast path for create\n  const oldL = parent.childNodes.length;\n  if (oldL === 0) {\n    for(let i = 0; i < newL; i++) {\n      parent.appendChild(createFn(newData[i]));\n    }\n    return;\n  }\n\n  // reconciliation\n  let prevStart = 0,\n    newStart = 0,\n    loop = true,\n    prevEnd = oldL - 1, newEnd = newL - 1,\n    prevStartNode = parent.firstChild,\n    prevEndNode = parent.lastChild,\n    finalNode,\n    a, b, _node;\n\n  fixes: while(loop) {\n    loop = false;\n\n    // Skip prefix\n    a = prevStartNode.state, b = newData[newStart];\n    while(a[key] === b[key]) {\n      makeEqual(prevStartNode, b);\n      prevStart++;\n      prevStartNode = prevStartNode.nextSibling;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevStartNode.state, b = newData[newStart];\n    }\n\n    // Skip suffix\n    a = prevEndNode.state, b = newData[newEnd];\n    while(a[key] === b[key]) {\n      makeEqual(prevEndNode, b);\n      prevEnd--;\n      finalNode = prevEndNode;\n      prevEndNode = prevEndNode.previousSibling;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevEndNode.state, b = newData[newEnd];\n    }\n\n    // Fast path to swap backward\n    a = prevEndNode.state, b = newData[newStart];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevEndNode, b);\n      _node = prevEndNode.previousSibling;\n      parent.insertBefore(prevEndNode, prevStartNode);\n      prevEndNode = _node;\n      prevEnd--;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevEndNode.state, b = newData[newStart];\n    }\n\n    // Fast path to swap forward\n    a = prevStartNode.state, b = newData[newEnd];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevStartNode, b);\n      _node = prevStartNode.nextSibling;\n      parent.insertBefore(prevStartNode, prevEndNode.nextSibling);\n      finalNode = prevStartNode;\n      prevEndNode = prevStartNode.previousSibling;\n      prevStartNode = _node;\n      prevStart++;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevStartNode.state, b = newData[newEnd];\n    }\n  }\n\n  // Fast path for shrink\n  if (newEnd < newStart) {\n    if (prevStart <= prevEnd) {\n      let next;\n      while(prevStart <= prevEnd) {\n        if (prevEnd === 0) {\n          parent.removeChild(prevEndNode);\n        } else {\n          next = prevEndNode.previousSibling;\n          parent.removeChild(prevEndNode);\n          prevEndNode = next;\n        }\n        prevEnd--;\n      }\n    }\n    return;\n  }\n\n  // Fast path for add\n  if (prevEnd < prevStart) {\n    if (newStart <= newEnd) {\n      while(newStart <= newEnd) {\n        _node = createFn(newData[newStart]);\n        parent.insertBefore(_node, prevEndNode.nextSibling);\n        prevEndNode = _node;\n        newStart++;\n      }\n    }\n    return;\n  }\n\n  const oldKeys = new Array(newEnd + 1 - newStart), newKeys = new Map(), nodes = [], toDelete = [];\n\n  for(let i = newStart; i <= newEnd; i++) {\n    // Positions for reusing nodes from current DOM state\n    oldKeys[i] = -1;\n    // Index to resolve position from current to new\n    newKeys.set(newData[i][key], i);\n  }\n\n  let reusingNodes = 0;\n  while (prevStart <= prevEnd) {\n    if (newKeys.has(prevStartNode.state[key])) {\n      oldKeys[newKeys.get(prevStartNode.state[key])] = prevStart;\n      reusingNodes++;\n    } else {\n      toDelete.push(prevStartNode);\n    }\n    nodes[prevStart] = prevStartNode;\n    prevStartNode = prevStartNode.nextSibling;\n    prevStart++;\n  }\n\n  // Fast path for full replace\n  if (reusingNodes === 0) {\n    for(let i = newStart; i <= newEnd; i++) {\n      // Add extra nodes\n      parent.insertBefore(createFn(newData[i]), prevStartNode);\n    }\n    // Remove extra nodes\n    for(let i = 0; i < toDelete.length; i++) {\n      parent.removeChild(toDelete[i]);\n    }\n    return;\n  }\n\n  const longestSeq = longestPositiveIncreasingSubsequence(oldKeys, newStart);\n\n  let lisIdx = longestSeq.length - 1, tmpD;\n  for(let i = newEnd; i >= newStart; i--) {\n    if(longestSeq[lisIdx] === i) {\n      finalNode = nodes[oldKeys[i]];\n      makeEqual(finalNode, newData[i]);\n      lisIdx--;\n    } else {\n      if (oldKeys[i] === -1) {\n        tmpD = createFn(newData[i]);\n      } else {\n        tmpD = nodes[oldKeys[i]];\n        makeEqual(tmpD, newData[i]);\n      }\n      parent.insertBefore(tmpD, finalNode);\n      finalNode = tmpD;\n    }\n  }\n\n  for(let i = 0; i < toDelete.length; i++) {\n    parent.removeChild(toDelete[i]);\n  }\n}\n\n// Picked from\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L368\n\n// return an array of the indices of ns that comprise the longest increasing subsequence within ns\nfunction longestPositiveIncreasingSubsequence(ns, newStart) {\n  let seq = [],\n    is  = [],\n    l   = -1,\n    pre = new Array(ns.length);\n\n  for (let i = newStart, len = ns.length; i < len; i++) {\n    let n = ns[i];\n    if (n < 0) continue;\n    let j = findGreatestIndexLEQ(seq, n);\n    if (j !== -1) pre[i] = is[j];\n    if (j === l) {\n      l++;\n      seq[l] = n;\n      is[l]  = i;\n    } else if (n < seq[j + 1]) {\n      seq[j + 1] = n;\n      is[j + 1] = i;\n    }\n  }\n\n  for (let i = is[l]; l >= 0; i = pre[i], l--) {\n    seq[l] = i;\n  }\n\n  return seq;\n}\n\nfunction findGreatestIndexLEQ(seq, n) {\n  // invariant: lo is guaranteed to be index of a value <= n, hi to be >\n  // therefore, they actually start out of range: (-1, last + 1)\n  let lo = -1,\n    hi = seq.length;\n\n  // fast path for simple increasing sequences\n  if (hi > 0 && seq[hi - 1] <= n) return hi - 1;\n\n  while (hi - lo > 1) {\n    let mid = Math.floor((lo + hi) / 2);\n    if (seq[mid] > n) {\n      hi = mid;\n    } else {\n      lo = mid;\n    }\n  }\n\n  return lo;\n}\n\nmodule.exports = {\n  makeChildrenEqualKeyed,\n  longestPositiveIncreasingSubsequence\n};\n","const { OUTER_REGEX, STATE_REGEX } = require('./constants');\n\nfunction replacer(match) {\n  let f;\n  if (match.indexOf('return ') >= 0) {\n    f = match;\n  } else {\n    f = 'return ' + match;\n  }\n  try {\n    return new Function(f);\n  } catch(e) {\n    window.console.log(`Error processing binding: \\`${f}\\``);\n    return '';\n  }\n}\n\nfunction evaluate(fxn, el) {\n  try {\n    if (typeof fxn === 'string') return fxn;\n    else return fxn.call(el);\n  } catch(e) {\n    const str = fxn.toString();\n    window.console.log(`Error evaluating: \\`${str.slice(str.indexOf('{') + 1, str.lastIndexOf('}'))}\\` for element`, el);\n    window.console.error(e);\n  }\n}\n\nconst Bindings = {\n  getBindingFxns: (string) => {\n    const splitted = string.split(OUTER_REGEX), l = splitted.length, ret = [];\n    for (let i = 0; i < l; i++) {\n      if (splitted[i][0] === '$' && splitted[i][1] === '{') {\n        ret.push(replacer(splitted[i].slice(2, -1)));\n      } else if (splitted[i]) ret.push(splitted[i]);\n    }\n    if (ret.length === 1) return ret[0];\n    return ret;\n  },\n  getStringBindingFxn: (string) => {\n    const match = string.match(STATE_REGEX);\n    if (match) return match[1];\n    return Bindings.getBindingFxns(string);\n  },\n  evaluateBindings: (fxns, element) => {\n    if (typeof fxns === 'function') return evaluate(fxns, element);\n    return fxns.map(fxn => evaluate(fxn, element)).join('');\n  },\n  evaluate: evaluate,\n  replacer: replacer\n};\n\nmodule.exports = Bindings;\n","const { makeChildrenEqual } = require('./makeequal');\nconst { makeChildrenEqualKeyed } = require('./keyed');\nconst updateAttribute = require('./updateattribute');\nconst { evaluateBindings } = require('./bindings');\nconst { TEMPLATE, KEY_ATTR } = require('./constants');\n\nfunction update(element, stateMap) {\n  if (!element._refs) {\n    return false;\n  }\n  stateMap = stateMap || element.constructor.stateMap;\n  let data, dom, newValue;\n  // Update nodes\n  const l = element._refs.length;\n  for (let i = 0; i < l; i++) {\n    data = stateMap[i].ref;\n    dom = element._refs[i];\n\n    // Fast path for text nodes\n    if (data.type === 0) {\n      // state node\n      newValue = element.state[data.text];\n      if (dom.data != newValue) dom.data = newValue;\n      continue;\n    } else if (data.type === 1) {\n      // text node\n      newValue = evaluateBindings(data.text, element);\n      if (dom.data != newValue) dom.data = newValue;\n      continue;\n    }\n\n    // update attributes\n    if (data.attributes) {\n      for(let key in data.attributes) {\n        if (key !== 'events') {\n          if (data.attributes[key].type === 0) {\n            newValue = element.state[data.attributes[key].text];\n          } else {\n            newValue = evaluateBindings(data.attributes[key].text, element);\n          }\n          updateAttribute(dom, key, newValue);\n        } else {\n          if (!dom._sifrrEventSet) {\n            for(let event in data.attributes.events) {\n              dom[event] = evaluateBindings(data.attributes.events[event], element);\n            }\n            dom._root = element;\n            dom._sifrrEventSet = true;\n          }\n        }\n      }\n    }\n\n    if (data.text === undefined) continue;\n\n    // update element\n    newValue = evaluateBindings(data.text, element);\n\n    if (data.type === 3) {\n      // repeat\n      const key = dom.getAttribute(KEY_ATTR);\n      if (key) makeChildrenEqualKeyed(dom, newValue, (state) => data.se.sifrrClone(true, state), key);\n      else makeChildrenEqual(dom, newValue, (state) => data.se.sifrrClone(true, state));\n    } else {\n      // html node\n      let children;\n      if (Array.isArray(newValue)) {\n        children = newValue;\n      } else if (newValue.content && newValue.content.nodeType === 11) {\n        children = Array.prototype.slice.call(newValue.content.childNodes);\n      } else if (newValue.nodeType) {\n        children = [newValue];\n      } else if (typeof newValue === 'string') {\n        const temp = TEMPLATE();\n        temp.innerHTML = newValue.toString();\n        children = Array.prototype.slice.call(temp.content.childNodes);\n      } else {\n        children = Array.prototype.slice.call(newValue);\n      }\n      makeChildrenEqual(dom, children);\n    }\n  }\n  if (element.onUpdate) element.onUpdate();\n}\n\nmodule.exports = update;\n","const template = require('./template');\nconst update = require('./update');\nconst Parser = require('./parser');\n\nfunction SimpleElement(content, defaultState = null) {\n  if (!content.nodeType && typeof content !== 'string') {\n    if (!content[0] || !content[0].nodeType) {\n      throw TypeError('First argument for SimpleElement should be of type string or DOM element');\n    }\n  }\n  const templ = template(content);\n  content = templ.content.firstElementChild || templ.content.firstChild;\n  // Already sifrr element\n  if (content.isSifrr || content.nodeName.indexOf('-') !== -1 ||\n    (content.getAttribute && content.getAttribute('is') && content.getAttribute('is').indexOf('-') !== -1)\n  ) {\n    return content;\n  }\n  const stateMap = Parser.createStateMap(content, defaultState);\n  function setProps(me) {\n    me._refs = Parser.collectRefsSimple(me, stateMap);\n    Object.defineProperty(me, 'state', {\n      get: () => me._state,\n      set: (v) => {\n        me._state = Object.assign(me._state || {}, v);\n        update(me, stateMap);\n      }\n    });\n  }\n  setProps(content);\n\n  content.sifrrClone = function(deep = true, newState) {\n    const clone = content.cloneNode(deep);\n    setProps(clone);\n    clone.state = Object.assign({}, defaultState, newState);\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","const simpleElement = require('./simpleelement');\nconst { getBindingFxns } = require('./bindings');\n\nmodule.exports = (sm, el, attr) => {\n  sm.type = 3;\n  let defaultState;\n  if (el.hasAttribute('data-sifrr-default-state')) defaultState = JSON.parse(el.getAttribute('data-sifrr-default-state'));\n  sm.se = simpleElement(el.childNodes, defaultState);\n  sm.text = getBindingFxns(el.getAttribute(attr));\n  el.textContent = '';\n  el.removeAttribute(attr);\n};\n","const { TEXT_NODE, COMMENT_NODE, ELEMENT_NODE, REPEAT_ATTR } = require('./constants');\nconst repeatref = require('./repeatref');\n// ref types:\n// 0: state\n// 1: text\n// 2: html\n// 3: arrayToDom\nconst { getBindingFxns, getStringBindingFxn } = require('./bindings');\nconst updateAttribute = require('./updateattribute');\n\nfunction customElementCreator(el, filter, defaultState) {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    const x = el.data;\n    if (x.indexOf('${') > -1) {\n      const binding = getStringBindingFxn(x.trim());\n      if (typeof binding !== 'string') {\n        // text node\n        return {\n          type: 1,\n          text: binding\n        };\n      } else {\n        if (defaultState) el.data = defaultState[binding];\n        // state node\n        return {\n          type: 0,\n          text: binding\n        };\n      }\n    }\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (filter(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.type = 2;\n        sm.text = getBindingFxns(innerHTML.replace(/<!--((?:(?!-->).)+)-->/g, '$1').trim());\n      }\n    } else if (el.hasAttribute(REPEAT_ATTR)) {\n      repeatref(sm, el, REPEAT_ATTR);\n    }\n    // attributes\n    const attrs = el.attributes, l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '_') {\n        attrStateMap.events[attribute.name] = getBindingFxns(attribute.value);\n      } else if (attribute.value.indexOf('${') >= 0) {\n        // Don't treat style differently because same performance https://jsperf.com/style-property-vs-style-attribute/2\n        const binding = getStringBindingFxn(attribute.value);\n        if (typeof binding !== 'string') {\n          // text attr\n          attrStateMap[attribute.name] = {\n            type: 1,\n            text: binding\n          };\n        } else {\n          // state attr\n          attrStateMap[attribute.name] = {\n            type: 0,\n            text: binding\n          };\n          if (defaultState) updateAttribute(el, attribute.name, defaultState[binding]);\n        }\n      }\n    }\n    if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n}\n\nmodule.exports = customElementCreator;\n","const { collect, create } = require('./ref');\nconst creator = require('./creator');\n\nconst Parser = {\n  collectRefs: collect,\n  collectRefsSimple: (element, stateMap) => collect(element, stateMap, 'nextNode'),\n  createStateMap: (element, defaultState) => create(element, creator, defaultState),\n  twoWayBind: (e) => {\n    const target = e.composedPath ? e.composedPath()[0] : e.target;\n    if (!target.hasAttribute('data-sifrr-bind') || target._root === null) return;\n    const value = target.value || target.textContent;\n    let state = {};\n    if (!target._root) {\n      let root;\n      root = target;\n      while(root && !root.isSifrr) root = root.parentNode || root.host;\n      if (root) target._root = root;\n      else target._root = null;\n    }\n    state[target.getAttribute('data-sifrr-bind')] = value;\n    if (target._root) target._root.state = state;\n  }\n};\n\nmodule.exports = Parser;\n","const fetch = require('@sifrr/fetch');\nconst template = require('./template');\n\nclass Loader {\n  constructor(elemName, url, onProgress) {\n    if (!fetch) throw Error('Sifrr.Dom.load requires Sifrr.Fetch to work.');\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.url = url;\n    this.onProgress = onProgress;\n  }\n\n  get html() {\n    if (this._html) return this._html;\n    Loader.add(this.elementName, this);\n    const me = this;\n    this._html = fetch.file(this.htmlUrl, { onProgress: this.onProgress })\n      .then((resp) => resp.text())\n      .then((file) => template(file).content).then((content) => {\n        me.template = content.querySelector('template');\n        return content;\n      });\n    return this._html;\n  }\n\n  get js() {\n    if (this._js) return this._js;\n    Loader.add(this.elementName, this);\n    this._js = fetch.file(this.jsUrl, { onProgress: this.onProgress })\n      .then((resp) => resp.text());\n    return this._js;\n  }\n\n  get htmlUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  get jsUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.js`;\n  }\n\n  executeScripts(js) {\n    if (this._executed) throw Error(`'${this.elementName}' element's javascript was already executed`);\n    this._executed = true;\n    if (!js) {\n      return this.executeHTMLScripts();\n    } else {\n      return this.js.then((script) => {\n        new Function(script + `\\n //# sourceURL=${this.jsUrl}`).call();\n      }).catch((e) => {\n        window.console.error(e);\n        window.console.log(`JS file for '${this.elementName}' gave error. Trying to get html file.`);\n        return this.executeHTMLScripts();\n      });\n    }\n  }\n\n  executeHTMLScripts() {\n    return this.html.then((file) => {\n      file.querySelectorAll('script').forEach((script) => {\n        if (script.src) {\n          // Appending script node directly doesn't work\n          const newScript = require('./constants').SCRIPT();\n          newScript.src = script.src;\n          newScript.type = script.type;\n          window.document.body.appendChild(newScript);\n        } else {\n          new Function(script.text + `\\n //# sourceURL=${this.htmlUrl}`).call({ currentTempate: file.querySelector('template') });\n        }\n      });\n    }).catch(e => { throw e; });\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\n\nmodule.exports = Loader;\n","const Parser = require('./parser');\nconst update = require('./update');\nconst Loader = require('./loader');\nconst { makeChildrenEqual } = require('./makeequal');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      return (Loader.all[this.elementName] || { template: false }).template;\n    }\n\n    static get ctemp() {\n      this._ctemp = this._ctemp || this.template;\n      if (window.ShadyCSS && this.useShadowRoot && !this._ctemp.shady) {\n        window.ShadyCSS.prepareTemplate(this._ctemp, this.elementName);\n        this._ctemp.shady = true;\n      }\n      return this._ctemp;\n    }\n\n    static get stateMap() {\n      this._stateMap = this._stateMap || Parser.createStateMap(this.ctemp.content);\n      return this._stateMap;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static get useShadowRoot() {\n      return this.useSR;\n    }\n\n    constructor() {\n      super();\n      if (this.constructor.ctemp) {\n        this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const stateMap = this.constructor.stateMap, content = this.constructor.ctemp.content.cloneNode(true);\n        this._refs = Parser.collectRefs(content, stateMap);\n        if (this.constructor.useShadowRoot) {\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n        } else {\n          this.__content = content;\n        }\n      }\n    }\n\n    connectedCallback() {\n      if(!this.constructor.useShadowRoot && this.__content) {\n        makeChildrenEqual(this, Array.prototype.slice.call(this.__content.childNodes));\n        delete this.__content;\n      }\n      if (!this.hasAttribute('data-sifrr-state')) this.update();\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JSON.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      return this._state;\n    }\n\n    set state(v) {\n      if (this._state !== v) Object.assign(this._state, v);\n      this.update();\n      this.onStateChange();\n    }\n\n    onStateChange() {}\n\n    update() {\n      update(this);\n    }\n\n    onUpdate() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(deep, state) {\n      const clone = this.cloneNode(deep);\n      clone._state = state;\n      return clone;\n    }\n\n    clearState() {\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","// Inspired from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\nconst opts = { capture: true, passive: true };\n\nconst nativeToSyntheticEvent = (e, name) => {\n  const target = e.composedPath ? e.composedPath()[0] : e.target;\n  let dom = target;\n  while(dom) {\n    Promise.resolve((() => {\n      const eventHandler = dom[`_${name}`] || (dom.hasAttribute ? dom.getAttribute(`_${name}`) : null);\n      if (typeof eventHandler === 'function') {\n        eventHandler.call(dom._root || window, e, target);\n      } else if (typeof eventHandler === 'string') {\n        new Function('event', 'target', eventHandler).call(dom._root || window, event, target);\n      }\n      cssMatchEvent(e, name, dom, target);\n    })());\n    dom = dom.parentNode || dom.host;\n  }\n};\n\nconst cssMatchEvent = (e, name, dom, target) => {\n  Promise.resolve((() => {\n    function callEach(fxns) {\n      fxns.forEach((fxn) => fxn(e, target, dom));\n    }\n    for (let css in SYNTHETIC_EVENTS[name]) {\n      if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n    }\n  })());\n};\n\nconst Event = {\n  all: SYNTHETIC_EVENTS,\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.addEventListener(name, event => nativeToSyntheticEvent(event, name), opts);\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    if (typeof el === 'string') el = document.querySelector(el);\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  },\n  opts,\n  nativeToSyntheticEvent\n};\n\nmodule.exports = Event;\n","// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\nSifrrDom.loadingElements = [];\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.Parser = require('./dom/parser');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\n\nSifrrDom.makeEqual = require('./dom/makeequal');\n\n// HTML to template\nSifrrDom.template = require('./dom/template');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useSR = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    throw Error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    throw Error(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error.message}`, error.trace);\n      return false;\n    }\n  }\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  HTMLElement.prototype.$ = HTMLElement.prototype.querySelector;\n  HTMLElement.prototype.$$ = HTMLElement.prototype.querySelectorAll;\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  if (typeof SifrrDom.config.baseUrl !== 'string') throw Error('baseUrl should be a string');\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, { url, js = true, onProgress } = {}) {\n  if (window.customElements.get(elemName)) { return window.console.warn(`Error loading Element: ${elemName} - Custom Element with this name is already defined.`); }\n  let loader = new SifrrDom.Loader(elemName, url, onProgress);\n  const wd = customElements.whenDefined(elemName);\n  SifrrDom.loadingElements.push(wd);\n  return loader.executeScripts(js).then(() => {\n    if (!window.customElements.get(elemName)) {\n      window.console.warn(`Executing '${elemName}' file didn't register the element. Ignore if you are registering element in a promise or async function.`);\n    }\n  }).catch(e => {\n    SifrrDom.loadingElements.splice(SifrrDom.loadingElements.indexOf(wd), 1);\n    throw e;\n  });\n};\n\nSifrrDom.loading = () => {\n  return Promise.all(SifrrDom.loadingElements);\n};\n\nmodule.exports = SifrrDom;\n"],"names":["temp","window","document","createElement","script","TEMPLATE","cloneNode","SCRIPT","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","OUTER_REGEX","RegExp","STATE_REGEX","HTML_ATTR","REPEAT_ATTR","KEY_ATTR","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","require$$0","isHtml","el","hasAttribute","nextFilteredNode","node","this","currentNode","nextSibling","parentNode","nextNode","roll","n","next","collect","element","stateMap","refs","l","length","i","push","idx","create","fxn","passedArg","ref","indices","str","extra","tmp","Array","from","forEach","s","content","appendChild","nodeType","String","raw","replace","innerHTML","name","newValue","removeAttribute","getAttribute","className","setAttribute","nodeName","value","shallowEqual","a","b","key","require$$1","makeChildrenEqual","parent","newChildren","createFn","oldL","childNodes","newL","removeChild","lastChild","item","head","firstChild","makeEqual","textContent","oldNode","newNode","state","replaceWith","data","oldAttrs","attributes","newAttrs","updateAttribute","j","prototype","slice","call","longestPositiveIncreasingSubsequence","ns","newStart","seq","is","pre","len","findGreatestIndexLEQ","lo","hi","mid","Math","floor","makeChildrenEqualKeyed","newData","finalNode","_node","prevStart","loop","prevEnd","newEnd","prevStartNode","prevEndNode","fixes","previousSibling","insertBefore","oldKeys","newKeys","Map","nodes","toDelete","set","reusingNodes","has","get","longestSeq","tmpD","lisIdx","replacer","match","f","indexOf","Function","e","console","log","evaluate","toString","lastIndexOf","error","Bindings","getBindingFxns","string","splitted","split","ret","getStringBindingFxn","evaluateBindings","fxns","map","join","require$$2","require$$3","_refs","dom","constructor","type","text","_sifrrEventSet","event","events","_root","undefined","se","sifrrClone","children","isArray","onUpdate","defaultState","TypeError","templ","template","firstElementChild","isSifrr","Parser","createStateMap","setProps","me","collectRefsSimple","Object","defineProperty","_state","v","assign","update","deep","newState","clone","sm","attr","JSON","parse","simpleElement","filter","x","binding","trim","repeatref","attrs","attrStateMap","attribute","keys","collectRefs","creator","twoWayBind","target","composedPath","root","host","Loader","elemName","url","onProgress","fetch","Error","all","elementName","_html","add","file","htmlUrl","then","resp","querySelector","_js","jsUrl","Sifrr","Dom","config","baseUrl","executeScripts","js","_executed","catch","executeHTMLScripts","html","querySelectorAll","src","newScript","body","currentTempate","instance","_all","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","ShadyCSS","useShadowRoot","shady","prepareTemplate","_stateMap","ctemp","toLowerCase","useSR","attachShadow","mode","shadowRoot","__content","connectedCallback","onConnect","disconnectedCallback","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","onAttributeChange","onStateChange","clearState","$","args","sr","$$","HTMLElement","SYNTHETIC_EVENTS","opts","capture","passive","nativeToSyntheticEvent","Promise","resolve","eventHandler","cssMatchEvent","callEach","css","matches","addEventListener","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","SimpleElement","require$$4","require$$5","require$$6","register","customElements","define","elements","message","trace","setup","load","warn","loader","wd","whenDefined","loadingElements","loading"],"mappings":"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"}