version: 2.1

commands:
  run_tests:
    parameters:
      version:
        type: string
    steps:
      - add_ssh_keys:
          fingerprints:
            - '22:0a:b8:85:e7:5a:96:2a:90:5c:16:01:d6:1f:e8:b6'
      - restore_cache:
          keys:
            - sifrr-v3-source-{{ .Branch }}-{{ .Revision }}
            - sifrr-v3-source-{{ .Branch }}-
            - sifrr-v3-source-
      - checkout
      - save_cache:
          key: sifrr-v3-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - '.git'
      - run:
          name: Yarn workspaces
          command: yarn config set workspaces-experimental true
      - restore_cache:
          keys:
            - sifrr-v5-yarn-<< parameters.version >>-{{ checksum "yarn.lock" }}
            - sifrr-v5-yarn-<< parameters.version >>-
      - run:
          name: Yarn install
          command: yarn install
      - save_cache:
          key: sifrr-v5-yarn-<< parameters.version >>-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Check versions
          command: |
            set -ex
            node -v
            yarn -v
            google-chrome --version
      - run:
          name: Add git user email and name and Update files
          command: |
            git config --global user.email "aadityataparia@gmail.com" || exit 0
            git config --global user.name "Aaditya Taparia"
            git push --set-upstream origin $CIRCLE_BRANCH
            if [ "${CIRCLE_NODE_INDEX}" == "0" ]; then
              ./scripts/distribute
            fi
      - run:
          name: Run tests
          command: COVERAGE=true LCOV=true yarn test -j
      - run:
          name: Setup Code Climate & send report
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
              chmod +x ./cc-test-reporter
              ./cc-test-reporter after-build --coverage-input-type lcov --exit-code $?
            fi
      - run:
          name: New Release
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
              ./scripts/publish
            fi
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

jobs:
  build_and_test_node10:
    working_directory: ~/sifrr
    docker:
      - image: circleci/node:10-browsers
      - image: mysql:5.6
        command: --character-set-server=utf8mb4 --innodb_file_per_table --innodb_large_prefix --innodb_file_format=barracuda
        environment:
          MYSQL_DATABASE: sifrr_test
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    steps:
      - run_tests:
          version: node10

  build_and_test_node12:
    working_directory: ~/sifrr
    docker:
      - image: circleci/node:12.7.0-browsers
      - image: mysql:5.6
        command: --character-set-server=utf8mb4 --innodb_file_per_table --innodb_large_prefix --innodb_file_format=barracuda
        environment:
          MYSQL_DATABASE: sifrr_test
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    steps:
      - run_tests:
          version: node12

workflows:
  version: 2.1
  build_and_test:
    jobs:
      - build_and_test_node10
      - build_and_test_node12
